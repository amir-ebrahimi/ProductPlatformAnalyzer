<?xml version="1.0"?>
<!-- Testcase axel_test
		 Truck variant: axel1, axel2
		 Test variant: axel_inspection, test_break
		 Operations: inspect_axel, run-break_test

		 axel1 and axel_inspection -> inspect_axel1
		 axel2 and axel_inspection -> inspect_axel2
		 axel1 and test_break -> run_break_test
		 axel2 and test_break -> run_break_test

		 Condition: 

	Mods on output:
		Choose exactly one with 1 variant
		[one-axel and axel-test] => run test
			Variant operation mapping [V] -> Op
-->
<testData>
<operations>
	<operation>
		<operationName>run-break-test</operationName>
		<displayName>run break test</displayName>
	</operation>
	<operation>
		<operationName>inspect</operationName>
		<displayName>inspect</displayName>
	</operation>
</operations>
<variants>
	<variant>
		<variantName>axel1</variantName>
		<variantIndex>1</variantIndex>
		<variantDisplayName>axel 1</variantDisplayName>
	</variant>
	<variant>
		<variantName>axel2</variantName>
		<variantIndex>2</variantIndex>
		<variantDisplayName>axel2</variantDisplayName>
	</variant>
	<variant>
		<variantName>inspect-axel</variantName>
		<variantIndex>3</variantIndex>
		<variantDisplayName>inspect axel</variantDisplayName>
	</variant>
	<variant>
		<variantName>break-test</variantName>
		<variantIndex>4</variantIndex>
		<variantDisplayName>break test</variantDisplayName>
	</variant>
  <variant>
    <variantName>VirtualV1</variantName>
    <variantIndex>5</variantIndex>
    <variantDisplayName>Virtual V1</variantDisplayName>
  </variant>
  <variant>
    <variantName>VirtualV2</variantName>
    <variantIndex>6</variantIndex>
    <variantDisplayName>Virtual V2</variantDisplayName>
  </variant>
</variants>
<variantGroups>
	<variantGroup>
		<variantGroupName>test</variantGroupName>
		<groupCardinality>choose at least one</groupCardinality>
		<variantRefs>
			<variantRef>break-test</variantRef>
			<variantRef>inspect-axel</variantRef>
		</variantRefs>
	</variantGroup>
	<variantGroup>
		<variantGroupName>axel</variantGroupName>
		<groupCardinality>choose at least one</groupCardinality>
		<variantRefs>
			<variantRef>axel1</variantRef>
			<variantRef>axel2</variantRef>
		</variantRefs>
	</variantGroup>
  <variantGroup>
    <variantGroupName>Virtual-VG</variantGroupName>
    <groupCardinality>choose all</groupCardinality>
    <variantRefs>
      <variantRef>VirtualV1</variantRef>
      <variantRef>VirtualV2</variantRef>
    </variantRefs>
  </variantGroup>
</variantGroups>
<constraints>
  <constraint>
    <logic>or (and (and inspect-axel axel1) VirtualV1) (not (and inspect-axel axel1))</logic>
  </constraint>
  <constraint>
    <logic>or (and (and break-test axel1) VirtualV2) (not (and break-test axel1))</logic>
  </constraint>
</constraints>
<variantOperationMappings>
	<variantOperationMapping>
		<variantRefs>
	    	<variantRef>VirtualV1</variantRef>
	    </variantRefs>
		<operationRefs>
		   <operationRef>inspect</operationRef>
		</operationRefs>
	</variantOperationMapping>
	<variantOperationMapping>
		<variantRefs>
	    	<variantRef>VirtualV2</variantRef>
	    </variantRefs>
		<operationRefs>
		   <operationRef>run-break-test</operationRef>
		</operationRefs>
	</variantOperationMapping>
	<variantOperationMapping>
		<variantRefs>
	    	<variantRef>VirtualV1</variantRef>
	    </variantRefs>
		<operationRefs>
		   <operationRef>inspect</operationRef>
		</operationRefs>
	</variantOperationMapping>
	<variantOperationMapping>
		<variantRefs>
	    	<variantRef>VirtualV2</variantRef>
	    </variantRefs>
		<operationRefs>
		   <operationRef>run-break-test</operationRef>
		</operationRefs>
	</variantOperationMapping>
</variantOperationMappings>
</testData>