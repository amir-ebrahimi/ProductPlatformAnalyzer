(declare-const axel1 Bool)
(declare-const axel2 Bool)
(declare-const inspect-axel Bool)
(declare-const break-test Bool)
(declare-const VirtualV1 Bool)
(declare-const VirtualV2 Bool)
(declare-const inspect_I_5_0 Bool)
(declare-const inspect_E_5_0 Bool)
(declare-const inspect_F_5_0 Bool)
(declare-const inspect_U_5_0 Bool)
(declare-const inspect_PreCondition_5_0 Bool)
(declare-const inspect_PostCondition_5_0 Bool)
(declare-const inspect_I_5_1 Bool)
(declare-const inspect_E_5_1 Bool)
(declare-const inspect_F_5_1 Bool)
(declare-const inspect_U_5_1 Bool)
(declare-const inspect_PreCondition_5_1 Bool)
(declare-const inspect_PostCondition_5_1 Bool)
(declare-const run-break-test_I_6_0 Bool)
(declare-const run-break-test_E_6_0 Bool)
(declare-const run-break-test_F_6_0 Bool)
(declare-const run-break-test_U_6_0 Bool)
(declare-const run-break-test_PreCondition_6_0 Bool)
(declare-const run-break-test_PostCondition_6_0 Bool)
(declare-const run-break-test_I_6_1 Bool)
(declare-const run-break-test_E_6_1 Bool)
(declare-const run-break-test_F_6_1 Bool)
(declare-const run-break-test_U_6_1 Bool)
(declare-const run-break-test_PreCondition_6_1 Bool)
(declare-const run-break-test_PostCondition_6_1 Bool)
(assert (or break-test inspect-axel)); Constraint 1 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 2 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 3 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 4 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 5 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 6 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 7 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_0); Constraint 8 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 9 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 10 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 11 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 12 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 13 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 14 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 15 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 16 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 17 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 18 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 19 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 20 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 21 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 22 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 23 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 24 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 25 , Source: formula5.7
(assert inspect_PreCondition_5_0); Constraint 26 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 27 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 28 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 29 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 30 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 31 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 32 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 33 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 34 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 35 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 36 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 37 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 38 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 39 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 40 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 41 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 42 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 43 , Source: formula5.7
(assert inspect_PreCondition_5_0); Constraint 44 , Source: formula7-Precondition
(assert inspect_PostCondition_5_0); Constraint 45 , Source: formula7-Postcondition
(assert run-break-test_PreCondition_6_0); Constraint 46 , Source: formula7-Precondition
(assert run-break-test_PostCondition_6_0); Constraint 47 , Source: formula7-Postcondition
(assert (and (or (and (not inspect_PreCondition_5_0) inspect_I_5_0)
         (and (not inspect_PostCondition_5_0) inspect_E_5_0)
         inspect_F_5_0
         inspect_U_5_0)
     (or (and (not run-break-test_PreCondition_6_0) run-break-test_I_6_0)
         (and (not run-break-test_PostCondition_6_0) run-break-test_E_6_0)
         run-break-test_F_6_0
         run-break-test_U_6_0)
     (or inspect_I_5_0 inspect_E_5_0 run-break-test_I_6_0 run-break-test_E_6_0))); Constraint 48 , Source: overallGoal
(assert (or break-test inspect-axel)); Constraint 49 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 50 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 51 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 52 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 53 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 54 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 55 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_0); Constraint 56 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 57 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 58 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 59 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 60 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 61 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 62 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 63 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 64 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 65 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 66 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 67 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 68 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 69 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 70 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 71 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 72 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 73 , Source: formula5.7
(assert inspect_PreCondition_5_0); Constraint 74 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 75 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 76 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 77 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 78 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 79 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 80 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 81 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 82 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 83 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 84 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 85 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 86 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 87 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 88 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 89 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 90 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 91 , Source: formula5.7
(declare-const inspect_I_5_2 Bool)
(declare-const inspect_E_5_2 Bool)
(declare-const inspect_F_5_2 Bool)
(declare-const inspect_U_5_2 Bool)
(declare-const inspect_PreCondition_5_2 Bool)
(declare-const inspect_PostCondition_5_2 Bool)
(declare-const run-break-test_I_6_2 Bool)
(declare-const run-break-test_E_6_2 Bool)
(declare-const run-break-test_F_6_2 Bool)
(declare-const run-break-test_U_6_2 Bool)
(declare-const run-break-test_PreCondition_6_2 Bool)
(declare-const run-break-test_PostCondition_6_2 Bool)
(assert (or break-test inspect-axel)); Constraint 92 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 93 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 94 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 95 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 96 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 97 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 98 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_1); Constraint 99 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_1 inspect_PreCondition_5_1) inspect_E_5_2)); Constraint 100 , Source: formula5.1
(assert (=> (not inspect_I_5_1)
    (and (=> inspect_I_5_1 inspect_I_5_2) (=> inspect_I_5_2 inspect_I_5_1)))); Constraint 101 , Source: formula5.2
(assert (or inspect_I_5_1 inspect_E_5_1 inspect_F_5_1 inspect_U_5_1)); Constraint 102 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_U_5_1))))
      (a!2 (=> inspect_U_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_F_5_1)))))
  (and (=> inspect_I_5_1
           (and (not inspect_E_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       (=> inspect_E_5_1
           (and (not inspect_I_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       a!1
       a!2))); Constraint 103 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_1); Constraint 104 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_1 inspect_PostCondition_5_1) inspect_F_5_2)); Constraint 105 , Source: formula5.4
(assert (and (=> inspect_U_5_1 inspect_U_5_2) (=> inspect_U_5_2 inspect_U_5_1))); Constraint 106 , Source: formula5.6
(assert (=> inspect_F_5_1 inspect_F_5_2)); Constraint 107 , Source: formula5.7
(assert run-break-test_PreCondition_6_1); Constraint 108 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_1 run-break-test_PreCondition_6_1)
    run-break-test_E_6_2)); Constraint 109 , Source: formula5.1
(assert (=> (not run-break-test_I_6_1)
    (and (=> run-break-test_I_6_1 run-break-test_I_6_2)
         (=> run-break-test_I_6_2 run-break-test_I_6_1)))); Constraint 110 , Source: formula5.2
(assert (or run-break-test_I_6_1
    run-break-test_E_6_1
    run-break-test_F_6_1
    run-break-test_U_6_1)); Constraint 111 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_U_6_1))))
      (a!2 (=> run-break-test_U_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_F_6_1)))))
  (and (=> run-break-test_I_6_1
           (and (not run-break-test_E_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       (=> run-break-test_E_6_1
           (and (not run-break-test_I_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       a!1
       a!2))); Constraint 112 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_1); Constraint 113 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_1 run-break-test_PostCondition_6_1)
    run-break-test_F_6_2)); Constraint 114 , Source: formula5.4
(assert (and (=> run-break-test_U_6_1 run-break-test_U_6_2)
     (=> run-break-test_U_6_2 run-break-test_U_6_1))); Constraint 115 , Source: formula5.6
(assert (=> run-break-test_F_6_1 run-break-test_F_6_2)); Constraint 116 , Source: formula5.7
(assert inspect_PreCondition_5_1); Constraint 117 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_1 inspect_PreCondition_5_1) inspect_E_5_2)); Constraint 118 , Source: formula5.1
(assert (=> (not inspect_I_5_1)
    (and (=> inspect_I_5_1 inspect_I_5_2) (=> inspect_I_5_2 inspect_I_5_1)))); Constraint 119 , Source: formula5.2
(assert (or inspect_I_5_1 inspect_E_5_1 inspect_F_5_1 inspect_U_5_1)); Constraint 120 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_U_5_1))))
      (a!2 (=> inspect_U_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_F_5_1)))))
  (and (=> inspect_I_5_1
           (and (not inspect_E_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       (=> inspect_E_5_1
           (and (not inspect_I_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       a!1
       a!2))); Constraint 121 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_1); Constraint 122 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_1 inspect_PostCondition_5_1) inspect_F_5_2)); Constraint 123 , Source: formula5.4
(assert (and (=> inspect_U_5_1 inspect_U_5_2) (=> inspect_U_5_2 inspect_U_5_1))); Constraint 124 , Source: formula5.6
(assert (=> inspect_F_5_1 inspect_F_5_2)); Constraint 125 , Source: formula5.7
(assert run-break-test_PreCondition_6_1); Constraint 126 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_1 run-break-test_PreCondition_6_1)
    run-break-test_E_6_2)); Constraint 127 , Source: formula5.1
(assert (=> (not run-break-test_I_6_1)
    (and (=> run-break-test_I_6_1 run-break-test_I_6_2)
         (=> run-break-test_I_6_2 run-break-test_I_6_1)))); Constraint 128 , Source: formula5.2
(assert (or run-break-test_I_6_1
    run-break-test_E_6_1
    run-break-test_F_6_1
    run-break-test_U_6_1)); Constraint 129 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_U_6_1))))
      (a!2 (=> run-break-test_U_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_F_6_1)))))
  (and (=> run-break-test_I_6_1
           (and (not run-break-test_E_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       (=> run-break-test_E_6_1
           (and (not run-break-test_I_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       a!1
       a!2))); Constraint 130 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_1); Constraint 131 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_1 run-break-test_PostCondition_6_1)
    run-break-test_F_6_2)); Constraint 132 , Source: formula5.4
(assert (and (=> run-break-test_U_6_1 run-break-test_U_6_2)
     (=> run-break-test_U_6_2 run-break-test_U_6_1))); Constraint 133 , Source: formula5.6
(assert (=> run-break-test_F_6_1 run-break-test_F_6_2)); Constraint 134 , Source: formula5.7
(assert inspect_PreCondition_5_1); Constraint 135 , Source: formula7-Precondition
(assert inspect_PostCondition_5_1); Constraint 136 , Source: formula7-Postcondition
(assert run-break-test_PreCondition_6_1); Constraint 137 , Source: formula7-Precondition
(assert run-break-test_PostCondition_6_1); Constraint 138 , Source: formula7-Postcondition
(assert (and (or (and (not inspect_PreCondition_5_1) inspect_I_5_1)
         (and (not inspect_PostCondition_5_1) inspect_E_5_1)
         inspect_F_5_1
         inspect_U_5_1)
     (or (and (not run-break-test_PreCondition_6_1) run-break-test_I_6_1)
         (and (not run-break-test_PostCondition_6_1) run-break-test_E_6_1)
         run-break-test_F_6_1
         run-break-test_U_6_1)
     (or inspect_I_5_1 inspect_E_5_1 run-break-test_I_6_1 run-break-test_E_6_1))); Constraint 139 , Source: overallGoal
(assert (or break-test inspect-axel)); Constraint 140 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 141 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 142 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 143 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 144 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 145 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 146 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_0); Constraint 147 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 148 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 149 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 150 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 151 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 152 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 153 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 154 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 155 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 156 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 157 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 158 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 159 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 160 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 161 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 162 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 163 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 164 , Source: formula5.7
(assert inspect_PreCondition_5_0); Constraint 165 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 166 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 167 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 168 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 169 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 170 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 171 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 172 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 173 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 174 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 175 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 176 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 177 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 178 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 179 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 180 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 181 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 182 , Source: formula5.7
(assert (or break-test inspect-axel)); Constraint 183 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 184 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 185 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 186 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 187 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 188 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 189 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_1); Constraint 190 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_1 inspect_PreCondition_5_1) inspect_E_5_2)); Constraint 191 , Source: formula5.1
(assert (=> (not inspect_I_5_1)
    (and (=> inspect_I_5_1 inspect_I_5_2) (=> inspect_I_5_2 inspect_I_5_1)))); Constraint 192 , Source: formula5.2
(assert (or inspect_I_5_1 inspect_E_5_1 inspect_F_5_1 inspect_U_5_1)); Constraint 193 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_U_5_1))))
      (a!2 (=> inspect_U_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_F_5_1)))))
  (and (=> inspect_I_5_1
           (and (not inspect_E_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       (=> inspect_E_5_1
           (and (not inspect_I_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       a!1
       a!2))); Constraint 194 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_1); Constraint 195 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_1 inspect_PostCondition_5_1) inspect_F_5_2)); Constraint 196 , Source: formula5.4
(assert (and (=> inspect_U_5_1 inspect_U_5_2) (=> inspect_U_5_2 inspect_U_5_1))); Constraint 197 , Source: formula5.6
(assert (=> inspect_F_5_1 inspect_F_5_2)); Constraint 198 , Source: formula5.7
(assert run-break-test_PreCondition_6_1); Constraint 199 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_1 run-break-test_PreCondition_6_1)
    run-break-test_E_6_2)); Constraint 200 , Source: formula5.1
(assert (=> (not run-break-test_I_6_1)
    (and (=> run-break-test_I_6_1 run-break-test_I_6_2)
         (=> run-break-test_I_6_2 run-break-test_I_6_1)))); Constraint 201 , Source: formula5.2
(assert (or run-break-test_I_6_1
    run-break-test_E_6_1
    run-break-test_F_6_1
    run-break-test_U_6_1)); Constraint 202 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_U_6_1))))
      (a!2 (=> run-break-test_U_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_F_6_1)))))
  (and (=> run-break-test_I_6_1
           (and (not run-break-test_E_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       (=> run-break-test_E_6_1
           (and (not run-break-test_I_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       a!1
       a!2))); Constraint 203 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_1); Constraint 204 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_1 run-break-test_PostCondition_6_1)
    run-break-test_F_6_2)); Constraint 205 , Source: formula5.4
(assert (and (=> run-break-test_U_6_1 run-break-test_U_6_2)
     (=> run-break-test_U_6_2 run-break-test_U_6_1))); Constraint 206 , Source: formula5.6
(assert (=> run-break-test_F_6_1 run-break-test_F_6_2)); Constraint 207 , Source: formula5.7
(assert inspect_PreCondition_5_1); Constraint 208 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_1 inspect_PreCondition_5_1) inspect_E_5_2)); Constraint 209 , Source: formula5.1
(assert (=> (not inspect_I_5_1)
    (and (=> inspect_I_5_1 inspect_I_5_2) (=> inspect_I_5_2 inspect_I_5_1)))); Constraint 210 , Source: formula5.2
(assert (or inspect_I_5_1 inspect_E_5_1 inspect_F_5_1 inspect_U_5_1)); Constraint 211 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_U_5_1))))
      (a!2 (=> inspect_U_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_F_5_1)))))
  (and (=> inspect_I_5_1
           (and (not inspect_E_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       (=> inspect_E_5_1
           (and (not inspect_I_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       a!1
       a!2))); Constraint 212 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_1); Constraint 213 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_1 inspect_PostCondition_5_1) inspect_F_5_2)); Constraint 214 , Source: formula5.4
(assert (and (=> inspect_U_5_1 inspect_U_5_2) (=> inspect_U_5_2 inspect_U_5_1))); Constraint 215 , Source: formula5.6
(assert (=> inspect_F_5_1 inspect_F_5_2)); Constraint 216 , Source: formula5.7
(assert run-break-test_PreCondition_6_1); Constraint 217 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_1 run-break-test_PreCondition_6_1)
    run-break-test_E_6_2)); Constraint 218 , Source: formula5.1
(assert (=> (not run-break-test_I_6_1)
    (and (=> run-break-test_I_6_1 run-break-test_I_6_2)
         (=> run-break-test_I_6_2 run-break-test_I_6_1)))); Constraint 219 , Source: formula5.2
(assert (or run-break-test_I_6_1
    run-break-test_E_6_1
    run-break-test_F_6_1
    run-break-test_U_6_1)); Constraint 220 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_U_6_1))))
      (a!2 (=> run-break-test_U_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_F_6_1)))))
  (and (=> run-break-test_I_6_1
           (and (not run-break-test_E_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       (=> run-break-test_E_6_1
           (and (not run-break-test_I_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       a!1
       a!2))); Constraint 221 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_1); Constraint 222 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_1 run-break-test_PostCondition_6_1)
    run-break-test_F_6_2)); Constraint 223 , Source: formula5.4
(assert (and (=> run-break-test_U_6_1 run-break-test_U_6_2)
     (=> run-break-test_U_6_2 run-break-test_U_6_1))); Constraint 224 , Source: formula5.6
(assert (=> run-break-test_F_6_1 run-break-test_F_6_2)); Constraint 225 , Source: formula5.7
(declare-const inspect_I_5_3 Bool)
(declare-const inspect_E_5_3 Bool)
(declare-const inspect_F_5_3 Bool)
(declare-const inspect_U_5_3 Bool)
(declare-const inspect_PreCondition_5_3 Bool)
(declare-const inspect_PostCondition_5_3 Bool)
(declare-const run-break-test_I_6_3 Bool)
(declare-const run-break-test_E_6_3 Bool)
(declare-const run-break-test_F_6_3 Bool)
(declare-const run-break-test_U_6_3 Bool)
(declare-const run-break-test_PreCondition_6_3 Bool)
(declare-const run-break-test_PostCondition_6_3 Bool)
(assert (or break-test inspect-axel)); Constraint 226 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 227 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 228 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 229 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 230 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 231 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 232 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_2); Constraint 233 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_2 inspect_PreCondition_5_2) inspect_E_5_3)); Constraint 234 , Source: formula5.1
(assert (=> (not inspect_I_5_2)
    (and (=> inspect_I_5_2 inspect_I_5_3) (=> inspect_I_5_3 inspect_I_5_2)))); Constraint 235 , Source: formula5.2
(assert (or inspect_I_5_2 inspect_E_5_2 inspect_F_5_2 inspect_U_5_2)); Constraint 236 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_2
               (and (and (not inspect_I_5_2) (not inspect_E_5_2))
                    (not inspect_U_5_2))))
      (a!2 (=> inspect_U_5_2
               (and (and (not inspect_I_5_2) (not inspect_E_5_2))
                    (not inspect_F_5_2)))))
  (and (=> inspect_I_5_2
           (and (not inspect_E_5_2) (not inspect_F_5_2) (not inspect_U_5_2)))
       (=> inspect_E_5_2
           (and (not inspect_I_5_2) (not inspect_F_5_2) (not inspect_U_5_2)))
       a!1
       a!2))); Constraint 237 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_2); Constraint 238 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_2 inspect_PostCondition_5_2) inspect_F_5_3)); Constraint 239 , Source: formula5.4
(assert (and (=> inspect_U_5_2 inspect_U_5_3) (=> inspect_U_5_3 inspect_U_5_2))); Constraint 240 , Source: formula5.6
(assert (=> inspect_F_5_2 inspect_F_5_3)); Constraint 241 , Source: formula5.7
(assert run-break-test_PreCondition_6_2); Constraint 242 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_2 run-break-test_PreCondition_6_2)
    run-break-test_E_6_3)); Constraint 243 , Source: formula5.1
(assert (=> (not run-break-test_I_6_2)
    (and (=> run-break-test_I_6_2 run-break-test_I_6_3)
         (=> run-break-test_I_6_3 run-break-test_I_6_2)))); Constraint 244 , Source: formula5.2
(assert (or run-break-test_I_6_2
    run-break-test_E_6_2
    run-break-test_F_6_2
    run-break-test_U_6_2)); Constraint 245 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_2
               (and (and (not run-break-test_I_6_2) (not run-break-test_E_6_2))
                    (not run-break-test_U_6_2))))
      (a!2 (=> run-break-test_U_6_2
               (and (and (not run-break-test_I_6_2) (not run-break-test_E_6_2))
                    (not run-break-test_F_6_2)))))
  (and (=> run-break-test_I_6_2
           (and (not run-break-test_E_6_2)
                (not run-break-test_F_6_2)
                (not run-break-test_U_6_2)))
       (=> run-break-test_E_6_2
           (and (not run-break-test_I_6_2)
                (not run-break-test_F_6_2)
                (not run-break-test_U_6_2)))
       a!1
       a!2))); Constraint 246 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_2); Constraint 247 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_2 run-break-test_PostCondition_6_2)
    run-break-test_F_6_3)); Constraint 248 , Source: formula5.4
(assert (and (=> run-break-test_U_6_2 run-break-test_U_6_3)
     (=> run-break-test_U_6_3 run-break-test_U_6_2))); Constraint 249 , Source: formula5.6
(assert (=> run-break-test_F_6_2 run-break-test_F_6_3)); Constraint 250 , Source: formula5.7
(assert inspect_PreCondition_5_2); Constraint 251 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_2 inspect_PreCondition_5_2) inspect_E_5_3)); Constraint 252 , Source: formula5.1
(assert (=> (not inspect_I_5_2)
    (and (=> inspect_I_5_2 inspect_I_5_3) (=> inspect_I_5_3 inspect_I_5_2)))); Constraint 253 , Source: formula5.2
(assert (or inspect_I_5_2 inspect_E_5_2 inspect_F_5_2 inspect_U_5_2)); Constraint 254 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_2
               (and (and (not inspect_I_5_2) (not inspect_E_5_2))
                    (not inspect_U_5_2))))
      (a!2 (=> inspect_U_5_2
               (and (and (not inspect_I_5_2) (not inspect_E_5_2))
                    (not inspect_F_5_2)))))
  (and (=> inspect_I_5_2
           (and (not inspect_E_5_2) (not inspect_F_5_2) (not inspect_U_5_2)))
       (=> inspect_E_5_2
           (and (not inspect_I_5_2) (not inspect_F_5_2) (not inspect_U_5_2)))
       a!1
       a!2))); Constraint 255 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_2); Constraint 256 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_2 inspect_PostCondition_5_2) inspect_F_5_3)); Constraint 257 , Source: formula5.4
(assert (and (=> inspect_U_5_2 inspect_U_5_3) (=> inspect_U_5_3 inspect_U_5_2))); Constraint 258 , Source: formula5.6
(assert (=> inspect_F_5_2 inspect_F_5_3)); Constraint 259 , Source: formula5.7
(assert run-break-test_PreCondition_6_2); Constraint 260 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_2 run-break-test_PreCondition_6_2)
    run-break-test_E_6_3)); Constraint 261 , Source: formula5.1
(assert (=> (not run-break-test_I_6_2)
    (and (=> run-break-test_I_6_2 run-break-test_I_6_3)
         (=> run-break-test_I_6_3 run-break-test_I_6_2)))); Constraint 262 , Source: formula5.2
(assert (or run-break-test_I_6_2
    run-break-test_E_6_2
    run-break-test_F_6_2
    run-break-test_U_6_2)); Constraint 263 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_2
               (and (and (not run-break-test_I_6_2) (not run-break-test_E_6_2))
                    (not run-break-test_U_6_2))))
      (a!2 (=> run-break-test_U_6_2
               (and (and (not run-break-test_I_6_2) (not run-break-test_E_6_2))
                    (not run-break-test_F_6_2)))))
  (and (=> run-break-test_I_6_2
           (and (not run-break-test_E_6_2)
                (not run-break-test_F_6_2)
                (not run-break-test_U_6_2)))
       (=> run-break-test_E_6_2
           (and (not run-break-test_I_6_2)
                (not run-break-test_F_6_2)
                (not run-break-test_U_6_2)))
       a!1
       a!2))); Constraint 264 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_2); Constraint 265 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_2 run-break-test_PostCondition_6_2)
    run-break-test_F_6_3)); Constraint 266 , Source: formula5.4
(assert (and (=> run-break-test_U_6_2 run-break-test_U_6_3)
     (=> run-break-test_U_6_3 run-break-test_U_6_2))); Constraint 267 , Source: formula5.6
(assert (=> run-break-test_F_6_2 run-break-test_F_6_3)); Constraint 268 , Source: formula5.7
(assert inspect_PreCondition_5_2); Constraint 269 , Source: formula7-Precondition
(assert inspect_PostCondition_5_2); Constraint 270 , Source: formula7-Postcondition
(assert run-break-test_PreCondition_6_2); Constraint 271 , Source: formula7-Precondition
(assert run-break-test_PostCondition_6_2); Constraint 272 , Source: formula7-Postcondition
(assert (and (or (and (not inspect_PreCondition_5_2) inspect_I_5_2)
         (and (not inspect_PostCondition_5_2) inspect_E_5_2)
         inspect_F_5_2
         inspect_U_5_2)
     (or (and (not run-break-test_PreCondition_6_2) run-break-test_I_6_2)
         (and (not run-break-test_PostCondition_6_2) run-break-test_E_6_2)
         run-break-test_F_6_2
         run-break-test_U_6_2)
     (or inspect_I_5_2 inspect_E_5_2 run-break-test_I_6_2 run-break-test_E_6_2))); Constraint 273 , Source: overallGoal
(assert (or break-test inspect-axel)); Constraint 274 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 275 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 276 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 277 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 278 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 279 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 280 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_0); Constraint 281 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 282 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 283 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 284 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 285 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 286 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 287 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 288 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 289 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 290 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 291 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 292 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 293 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 294 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 295 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 296 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 297 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 298 , Source: formula5.7
(assert inspect_PreCondition_5_0); Constraint 299 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 300 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 301 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 302 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 303 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 304 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 305 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 306 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 307 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 308 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 309 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 310 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 311 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 312 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 313 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 314 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 315 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 316 , Source: formula5.7
(assert (or break-test inspect-axel)); Constraint 317 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 318 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 319 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 320 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 321 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 322 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 323 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_1); Constraint 324 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_1 inspect_PreCondition_5_1) inspect_E_5_2)); Constraint 325 , Source: formula5.1
(assert (=> (not inspect_I_5_1)
    (and (=> inspect_I_5_1 inspect_I_5_2) (=> inspect_I_5_2 inspect_I_5_1)))); Constraint 326 , Source: formula5.2
(assert (or inspect_I_5_1 inspect_E_5_1 inspect_F_5_1 inspect_U_5_1)); Constraint 327 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_U_5_1))))
      (a!2 (=> inspect_U_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_F_5_1)))))
  (and (=> inspect_I_5_1
           (and (not inspect_E_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       (=> inspect_E_5_1
           (and (not inspect_I_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       a!1
       a!2))); Constraint 328 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_1); Constraint 329 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_1 inspect_PostCondition_5_1) inspect_F_5_2)); Constraint 330 , Source: formula5.4
(assert (and (=> inspect_U_5_1 inspect_U_5_2) (=> inspect_U_5_2 inspect_U_5_1))); Constraint 331 , Source: formula5.6
(assert (=> inspect_F_5_1 inspect_F_5_2)); Constraint 332 , Source: formula5.7
(assert run-break-test_PreCondition_6_1); Constraint 333 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_1 run-break-test_PreCondition_6_1)
    run-break-test_E_6_2)); Constraint 334 , Source: formula5.1
(assert (=> (not run-break-test_I_6_1)
    (and (=> run-break-test_I_6_1 run-break-test_I_6_2)
         (=> run-break-test_I_6_2 run-break-test_I_6_1)))); Constraint 335 , Source: formula5.2
(assert (or run-break-test_I_6_1
    run-break-test_E_6_1
    run-break-test_F_6_1
    run-break-test_U_6_1)); Constraint 336 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_U_6_1))))
      (a!2 (=> run-break-test_U_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_F_6_1)))))
  (and (=> run-break-test_I_6_1
           (and (not run-break-test_E_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       (=> run-break-test_E_6_1
           (and (not run-break-test_I_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       a!1
       a!2))); Constraint 337 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_1); Constraint 338 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_1 run-break-test_PostCondition_6_1)
    run-break-test_F_6_2)); Constraint 339 , Source: formula5.4
(assert (and (=> run-break-test_U_6_1 run-break-test_U_6_2)
     (=> run-break-test_U_6_2 run-break-test_U_6_1))); Constraint 340 , Source: formula5.6
(assert (=> run-break-test_F_6_1 run-break-test_F_6_2)); Constraint 341 , Source: formula5.7
(assert inspect_PreCondition_5_1); Constraint 342 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_1 inspect_PreCondition_5_1) inspect_E_5_2)); Constraint 343 , Source: formula5.1
(assert (=> (not inspect_I_5_1)
    (and (=> inspect_I_5_1 inspect_I_5_2) (=> inspect_I_5_2 inspect_I_5_1)))); Constraint 344 , Source: formula5.2
(assert (or inspect_I_5_1 inspect_E_5_1 inspect_F_5_1 inspect_U_5_1)); Constraint 345 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_U_5_1))))
      (a!2 (=> inspect_U_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_F_5_1)))))
  (and (=> inspect_I_5_1
           (and (not inspect_E_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       (=> inspect_E_5_1
           (and (not inspect_I_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       a!1
       a!2))); Constraint 346 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_1); Constraint 347 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_1 inspect_PostCondition_5_1) inspect_F_5_2)); Constraint 348 , Source: formula5.4
(assert (and (=> inspect_U_5_1 inspect_U_5_2) (=> inspect_U_5_2 inspect_U_5_1))); Constraint 349 , Source: formula5.6
(assert (=> inspect_F_5_1 inspect_F_5_2)); Constraint 350 , Source: formula5.7
(assert run-break-test_PreCondition_6_1); Constraint 351 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_1 run-break-test_PreCondition_6_1)
    run-break-test_E_6_2)); Constraint 352 , Source: formula5.1
(assert (=> (not run-break-test_I_6_1)
    (and (=> run-break-test_I_6_1 run-break-test_I_6_2)
         (=> run-break-test_I_6_2 run-break-test_I_6_1)))); Constraint 353 , Source: formula5.2
(assert (or run-break-test_I_6_1
    run-break-test_E_6_1
    run-break-test_F_6_1
    run-break-test_U_6_1)); Constraint 354 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_U_6_1))))
      (a!2 (=> run-break-test_U_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_F_6_1)))))
  (and (=> run-break-test_I_6_1
           (and (not run-break-test_E_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       (=> run-break-test_E_6_1
           (and (not run-break-test_I_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       a!1
       a!2))); Constraint 355 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_1); Constraint 356 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_1 run-break-test_PostCondition_6_1)
    run-break-test_F_6_2)); Constraint 357 , Source: formula5.4
(assert (and (=> run-break-test_U_6_1 run-break-test_U_6_2)
     (=> run-break-test_U_6_2 run-break-test_U_6_1))); Constraint 358 , Source: formula5.6
(assert (=> run-break-test_F_6_1 run-break-test_F_6_2)); Constraint 359 , Source: formula5.7
(assert (or break-test inspect-axel)); Constraint 360 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 361 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 362 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 363 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 364 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 365 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 366 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_2); Constraint 367 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_2 inspect_PreCondition_5_2) inspect_E_5_3)); Constraint 368 , Source: formula5.1
(assert (=> (not inspect_I_5_2)
    (and (=> inspect_I_5_2 inspect_I_5_3) (=> inspect_I_5_3 inspect_I_5_2)))); Constraint 369 , Source: formula5.2
(assert (or inspect_I_5_2 inspect_E_5_2 inspect_F_5_2 inspect_U_5_2)); Constraint 370 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_2
               (and (and (not inspect_I_5_2) (not inspect_E_5_2))
                    (not inspect_U_5_2))))
      (a!2 (=> inspect_U_5_2
               (and (and (not inspect_I_5_2) (not inspect_E_5_2))
                    (not inspect_F_5_2)))))
  (and (=> inspect_I_5_2
           (and (not inspect_E_5_2) (not inspect_F_5_2) (not inspect_U_5_2)))
       (=> inspect_E_5_2
           (and (not inspect_I_5_2) (not inspect_F_5_2) (not inspect_U_5_2)))
       a!1
       a!2))); Constraint 371 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_2); Constraint 372 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_2 inspect_PostCondition_5_2) inspect_F_5_3)); Constraint 373 , Source: formula5.4
(assert (and (=> inspect_U_5_2 inspect_U_5_3) (=> inspect_U_5_3 inspect_U_5_2))); Constraint 374 , Source: formula5.6
(assert (=> inspect_F_5_2 inspect_F_5_3)); Constraint 375 , Source: formula5.7
(assert run-break-test_PreCondition_6_2); Constraint 376 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_2 run-break-test_PreCondition_6_2)
    run-break-test_E_6_3)); Constraint 377 , Source: formula5.1
(assert (=> (not run-break-test_I_6_2)
    (and (=> run-break-test_I_6_2 run-break-test_I_6_3)
         (=> run-break-test_I_6_3 run-break-test_I_6_2)))); Constraint 378 , Source: formula5.2
(assert (or run-break-test_I_6_2
    run-break-test_E_6_2
    run-break-test_F_6_2
    run-break-test_U_6_2)); Constraint 379 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_2
               (and (and (not run-break-test_I_6_2) (not run-break-test_E_6_2))
                    (not run-break-test_U_6_2))))
      (a!2 (=> run-break-test_U_6_2
               (and (and (not run-break-test_I_6_2) (not run-break-test_E_6_2))
                    (not run-break-test_F_6_2)))))
  (and (=> run-break-test_I_6_2
           (and (not run-break-test_E_6_2)
                (not run-break-test_F_6_2)
                (not run-break-test_U_6_2)))
       (=> run-break-test_E_6_2
           (and (not run-break-test_I_6_2)
                (not run-break-test_F_6_2)
                (not run-break-test_U_6_2)))
       a!1
       a!2))); Constraint 380 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_2); Constraint 381 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_2 run-break-test_PostCondition_6_2)
    run-break-test_F_6_3)); Constraint 382 , Source: formula5.4
(assert (and (=> run-break-test_U_6_2 run-break-test_U_6_3)
     (=> run-break-test_U_6_3 run-break-test_U_6_2))); Constraint 383 , Source: formula5.6
(assert (=> run-break-test_F_6_2 run-break-test_F_6_3)); Constraint 384 , Source: formula5.7
(assert inspect_PreCondition_5_2); Constraint 385 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_2 inspect_PreCondition_5_2) inspect_E_5_3)); Constraint 386 , Source: formula5.1
(assert (=> (not inspect_I_5_2)
    (and (=> inspect_I_5_2 inspect_I_5_3) (=> inspect_I_5_3 inspect_I_5_2)))); Constraint 387 , Source: formula5.2
(assert (or inspect_I_5_2 inspect_E_5_2 inspect_F_5_2 inspect_U_5_2)); Constraint 388 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_2
               (and (and (not inspect_I_5_2) (not inspect_E_5_2))
                    (not inspect_U_5_2))))
      (a!2 (=> inspect_U_5_2
               (and (and (not inspect_I_5_2) (not inspect_E_5_2))
                    (not inspect_F_5_2)))))
  (and (=> inspect_I_5_2
           (and (not inspect_E_5_2) (not inspect_F_5_2) (not inspect_U_5_2)))
       (=> inspect_E_5_2
           (and (not inspect_I_5_2) (not inspect_F_5_2) (not inspect_U_5_2)))
       a!1
       a!2))); Constraint 389 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_2); Constraint 390 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_2 inspect_PostCondition_5_2) inspect_F_5_3)); Constraint 391 , Source: formula5.4
(assert (and (=> inspect_U_5_2 inspect_U_5_3) (=> inspect_U_5_3 inspect_U_5_2))); Constraint 392 , Source: formula5.6
(assert (=> inspect_F_5_2 inspect_F_5_3)); Constraint 393 , Source: formula5.7
(assert run-break-test_PreCondition_6_2); Constraint 394 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_2 run-break-test_PreCondition_6_2)
    run-break-test_E_6_3)); Constraint 395 , Source: formula5.1
(assert (=> (not run-break-test_I_6_2)
    (and (=> run-break-test_I_6_2 run-break-test_I_6_3)
         (=> run-break-test_I_6_3 run-break-test_I_6_2)))); Constraint 396 , Source: formula5.2
(assert (or run-break-test_I_6_2
    run-break-test_E_6_2
    run-break-test_F_6_2
    run-break-test_U_6_2)); Constraint 397 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_2
               (and (and (not run-break-test_I_6_2) (not run-break-test_E_6_2))
                    (not run-break-test_U_6_2))))
      (a!2 (=> run-break-test_U_6_2
               (and (and (not run-break-test_I_6_2) (not run-break-test_E_6_2))
                    (not run-break-test_F_6_2)))))
  (and (=> run-break-test_I_6_2
           (and (not run-break-test_E_6_2)
                (not run-break-test_F_6_2)
                (not run-break-test_U_6_2)))
       (=> run-break-test_E_6_2
           (and (not run-break-test_I_6_2)
                (not run-break-test_F_6_2)
                (not run-break-test_U_6_2)))
       a!1
       a!2))); Constraint 398 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_2); Constraint 399 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_2 run-break-test_PostCondition_6_2)
    run-break-test_F_6_3)); Constraint 400 , Source: formula5.4
(assert (and (=> run-break-test_U_6_2 run-break-test_U_6_3)
     (=> run-break-test_U_6_3 run-break-test_U_6_2))); Constraint 401 , Source: formula5.6
(assert (=> run-break-test_F_6_2 run-break-test_F_6_3)); Constraint 402 , Source: formula5.7
(declare-const inspect_I_5_4 Bool)
(declare-const inspect_E_5_4 Bool)
(declare-const inspect_F_5_4 Bool)
(declare-const inspect_U_5_4 Bool)
(declare-const inspect_PreCondition_5_4 Bool)
(declare-const inspect_PostCondition_5_4 Bool)
(declare-const run-break-test_I_6_4 Bool)
(declare-const run-break-test_E_6_4 Bool)
(declare-const run-break-test_F_6_4 Bool)
(declare-const run-break-test_U_6_4 Bool)
(declare-const run-break-test_PreCondition_6_4 Bool)
(declare-const run-break-test_PostCondition_6_4 Bool)
(assert (or break-test inspect-axel)); Constraint 403 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 404 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 405 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 406 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 407 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 408 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 409 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_3); Constraint 410 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_3 inspect_PreCondition_5_3) inspect_E_5_4)); Constraint 411 , Source: formula5.1
(assert (=> (not inspect_I_5_3)
    (and (=> inspect_I_5_3 inspect_I_5_4) (=> inspect_I_5_4 inspect_I_5_3)))); Constraint 412 , Source: formula5.2
(assert (or inspect_I_5_3 inspect_E_5_3 inspect_F_5_3 inspect_U_5_3)); Constraint 413 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_3
               (and (and (not inspect_I_5_3) (not inspect_E_5_3))
                    (not inspect_U_5_3))))
      (a!2 (=> inspect_U_5_3
               (and (and (not inspect_I_5_3) (not inspect_E_5_3))
                    (not inspect_F_5_3)))))
  (and (=> inspect_I_5_3
           (and (not inspect_E_5_3) (not inspect_F_5_3) (not inspect_U_5_3)))
       (=> inspect_E_5_3
           (and (not inspect_I_5_3) (not inspect_F_5_3) (not inspect_U_5_3)))
       a!1
       a!2))); Constraint 414 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_3); Constraint 415 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_3 inspect_PostCondition_5_3) inspect_F_5_4)); Constraint 416 , Source: formula5.4
(assert (and (=> inspect_U_5_3 inspect_U_5_4) (=> inspect_U_5_4 inspect_U_5_3))); Constraint 417 , Source: formula5.6
(assert (=> inspect_F_5_3 inspect_F_5_4)); Constraint 418 , Source: formula5.7
(assert run-break-test_PreCondition_6_3); Constraint 419 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_3 run-break-test_PreCondition_6_3)
    run-break-test_E_6_4)); Constraint 420 , Source: formula5.1
(assert (=> (not run-break-test_I_6_3)
    (and (=> run-break-test_I_6_3 run-break-test_I_6_4)
         (=> run-break-test_I_6_4 run-break-test_I_6_3)))); Constraint 421 , Source: formula5.2
(assert (or run-break-test_I_6_3
    run-break-test_E_6_3
    run-break-test_F_6_3
    run-break-test_U_6_3)); Constraint 422 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_3
               (and (and (not run-break-test_I_6_3) (not run-break-test_E_6_3))
                    (not run-break-test_U_6_3))))
      (a!2 (=> run-break-test_U_6_3
               (and (and (not run-break-test_I_6_3) (not run-break-test_E_6_3))
                    (not run-break-test_F_6_3)))))
  (and (=> run-break-test_I_6_3
           (and (not run-break-test_E_6_3)
                (not run-break-test_F_6_3)
                (not run-break-test_U_6_3)))
       (=> run-break-test_E_6_3
           (and (not run-break-test_I_6_3)
                (not run-break-test_F_6_3)
                (not run-break-test_U_6_3)))
       a!1
       a!2))); Constraint 423 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_3); Constraint 424 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_3 run-break-test_PostCondition_6_3)
    run-break-test_F_6_4)); Constraint 425 , Source: formula5.4
(assert (and (=> run-break-test_U_6_3 run-break-test_U_6_4)
     (=> run-break-test_U_6_4 run-break-test_U_6_3))); Constraint 426 , Source: formula5.6
(assert (=> run-break-test_F_6_3 run-break-test_F_6_4)); Constraint 427 , Source: formula5.7
(assert inspect_PreCondition_5_3); Constraint 428 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_3 inspect_PreCondition_5_3) inspect_E_5_4)); Constraint 429 , Source: formula5.1
(assert (=> (not inspect_I_5_3)
    (and (=> inspect_I_5_3 inspect_I_5_4) (=> inspect_I_5_4 inspect_I_5_3)))); Constraint 430 , Source: formula5.2
(assert (or inspect_I_5_3 inspect_E_5_3 inspect_F_5_3 inspect_U_5_3)); Constraint 431 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_3
               (and (and (not inspect_I_5_3) (not inspect_E_5_3))
                    (not inspect_U_5_3))))
      (a!2 (=> inspect_U_5_3
               (and (and (not inspect_I_5_3) (not inspect_E_5_3))
                    (not inspect_F_5_3)))))
  (and (=> inspect_I_5_3
           (and (not inspect_E_5_3) (not inspect_F_5_3) (not inspect_U_5_3)))
       (=> inspect_E_5_3
           (and (not inspect_I_5_3) (not inspect_F_5_3) (not inspect_U_5_3)))
       a!1
       a!2))); Constraint 432 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_3); Constraint 433 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_3 inspect_PostCondition_5_3) inspect_F_5_4)); Constraint 434 , Source: formula5.4
(assert (and (=> inspect_U_5_3 inspect_U_5_4) (=> inspect_U_5_4 inspect_U_5_3))); Constraint 435 , Source: formula5.6
(assert (=> inspect_F_5_3 inspect_F_5_4)); Constraint 436 , Source: formula5.7
(assert run-break-test_PreCondition_6_3); Constraint 437 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_3 run-break-test_PreCondition_6_3)
    run-break-test_E_6_4)); Constraint 438 , Source: formula5.1
(assert (=> (not run-break-test_I_6_3)
    (and (=> run-break-test_I_6_3 run-break-test_I_6_4)
         (=> run-break-test_I_6_4 run-break-test_I_6_3)))); Constraint 439 , Source: formula5.2
(assert (or run-break-test_I_6_3
    run-break-test_E_6_3
    run-break-test_F_6_3
    run-break-test_U_6_3)); Constraint 440 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_3
               (and (and (not run-break-test_I_6_3) (not run-break-test_E_6_3))
                    (not run-break-test_U_6_3))))
      (a!2 (=> run-break-test_U_6_3
               (and (and (not run-break-test_I_6_3) (not run-break-test_E_6_3))
                    (not run-break-test_F_6_3)))))
  (and (=> run-break-test_I_6_3
           (and (not run-break-test_E_6_3)
                (not run-break-test_F_6_3)
                (not run-break-test_U_6_3)))
       (=> run-break-test_E_6_3
           (and (not run-break-test_I_6_3)
                (not run-break-test_F_6_3)
                (not run-break-test_U_6_3)))
       a!1
       a!2))); Constraint 441 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_3); Constraint 442 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_3 run-break-test_PostCondition_6_3)
    run-break-test_F_6_4)); Constraint 443 , Source: formula5.4
(assert (and (=> run-break-test_U_6_3 run-break-test_U_6_4)
     (=> run-break-test_U_6_4 run-break-test_U_6_3))); Constraint 444 , Source: formula5.6
(assert (=> run-break-test_F_6_3 run-break-test_F_6_4)); Constraint 445 , Source: formula5.7
(assert inspect_PreCondition_5_3); Constraint 446 , Source: formula7-Precondition
(assert inspect_PostCondition_5_3); Constraint 447 , Source: formula7-Postcondition
(assert run-break-test_PreCondition_6_3); Constraint 448 , Source: formula7-Precondition
(assert run-break-test_PostCondition_6_3); Constraint 449 , Source: formula7-Postcondition
(assert (and (or (and (not inspect_PreCondition_5_3) inspect_I_5_3)
         (and (not inspect_PostCondition_5_3) inspect_E_5_3)
         inspect_F_5_3
         inspect_U_5_3)
     (or (and (not run-break-test_PreCondition_6_3) run-break-test_I_6_3)
         (and (not run-break-test_PostCondition_6_3) run-break-test_E_6_3)
         run-break-test_F_6_3
         run-break-test_U_6_3)
     (or inspect_I_5_3 inspect_E_5_3 run-break-test_I_6_3 run-break-test_E_6_3))); Constraint 450 , Source: overallGoal
