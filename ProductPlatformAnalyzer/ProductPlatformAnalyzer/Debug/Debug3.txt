(declare-const axel1 Bool)
(declare-const axel-test Bool)
(declare-const Virtual-V Bool)
(declare-const run-axel-test_I_3_0 Bool)
(declare-const run-axel-test_E_3_0 Bool)
(declare-const run-axel-test_F_3_0 Bool)
(declare-const run-axel-test_U_3_0 Bool)
(declare-const run-axel-test_PreCondition_3_0 Bool)
(declare-const run-axel-test_PostCondition_3_0 Bool)
(declare-const run-axel-test_I_3_1 Bool)
(declare-const run-axel-test_E_3_1 Bool)
(declare-const run-axel-test_F_3_1 Bool)
(declare-const run-axel-test_U_3_1 Bool)
(declare-const run-axel-test_PreCondition_3_1 Bool)
(declare-const run-axel-test_PostCondition_3_1 Bool)
(declare-const put-on-sensor_I_3_0 Bool)
(declare-const put-on-sensor_E_3_0 Bool)
(declare-const put-on-sensor_F_3_0 Bool)
(declare-const put-on-sensor_U_3_0 Bool)
(declare-const put-on-sensor_PreCondition_3_0 Bool)
(declare-const put-on-sensor_PostCondition_3_0 Bool)
(declare-const put-on-sensor_I_3_1 Bool)
(declare-const put-on-sensor_E_3_1 Bool)
(declare-const put-on-sensor_F_3_1 Bool)
(declare-const put-on-sensor_U_3_1 Bool)
(declare-const put-on-sensor_PreCondition_3_1 Bool)
(declare-const put-on-sensor_PostCondition_3_1 Bool)
(declare-const remove-sensor_I_0_0 Bool)
(declare-const remove-sensor_E_0_0 Bool)
(declare-const remove-sensor_F_0_0 Bool)
(declare-const remove-sensor_U_0_0 Bool)
(assert axel-test); Constraint 1 , Source: GroupCardinality
(assert axel1); Constraint 2 , Source: GroupCardinality
(assert Virtual-V); Constraint 3 , Source: GroupCardinality
(assert axel1); Constraint 4 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 5 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 6 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 7 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 8 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 9 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 10 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 11 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 12 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 13 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 14 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 15 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 16 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 17 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 18 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 19 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 20 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 21 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 22 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 23 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 24 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 25 , Source: formula5.7
(assert (not run-axel-test_PreCondition_3_0)); Constraint 26 , Source: formula7-Precondition
(assert run-axel-test_PostCondition_3_0); Constraint 27 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_0); Constraint 28 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_0); Constraint 29 , Source: formula7-Postcondition
(assert (and (or (and (not run-axel-test_PreCondition_3_0) run-axel-test_I_3_0)
         (and (not run-axel-test_PostCondition_3_0) run-axel-test_E_3_0)
         run-axel-test_F_3_0
         run-axel-test_U_3_0)
     (or (and (not put-on-sensor_PreCondition_3_0) put-on-sensor_I_3_0)
         (and (not put-on-sensor_PostCondition_3_0) put-on-sensor_E_3_0)
         put-on-sensor_F_3_0
         put-on-sensor_U_3_0)
     (or run-axel-test_I_3_0
         run-axel-test_E_3_0
         put-on-sensor_I_3_0
         put-on-sensor_E_3_0))); Constraint 30 , Source: overallGoal
(assert axel-test); Constraint 31 , Source: GroupCardinality
(assert axel1); Constraint 32 , Source: GroupCardinality
(assert Virtual-V); Constraint 33 , Source: GroupCardinality
(assert axel1); Constraint 34 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 35 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 36 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 37 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 38 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 39 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 40 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 41 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 42 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 43 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 44 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 45 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 46 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 47 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 48 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 49 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 50 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 51 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 52 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 53 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 54 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 55 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 56 , Source: formula5.7
(declare-const run-axel-test_I_3_2 Bool)
(declare-const run-axel-test_E_3_2 Bool)
(declare-const run-axel-test_F_3_2 Bool)
(declare-const run-axel-test_U_3_2 Bool)
(declare-const run-axel-test_PreCondition_3_2 Bool)
(declare-const run-axel-test_PostCondition_3_2 Bool)
(declare-const put-on-sensor_I_3_2 Bool)
(declare-const put-on-sensor_E_3_2 Bool)
(declare-const put-on-sensor_F_3_2 Bool)
(declare-const put-on-sensor_U_3_2 Bool)
(declare-const put-on-sensor_PreCondition_3_2 Bool)
(declare-const put-on-sensor_PostCondition_3_2 Bool)
(declare-const remove-sensor_I_0_1 Bool)
(declare-const remove-sensor_E_0_1 Bool)
(declare-const remove-sensor_F_0_1 Bool)
(declare-const remove-sensor_U_0_1 Bool)
(assert axel-test); Constraint 57 , Source: GroupCardinality
(assert axel1); Constraint 58 , Source: GroupCardinality
(assert Virtual-V); Constraint 59 , Source: GroupCardinality
(assert axel1); Constraint 60 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 61 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 62 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 63 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 64 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 65 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_1)); Constraint 66 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1)
    run-axel-test_E_3_2)); Constraint 67 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1))
    (and (=> run-axel-test_I_3_1 run-axel-test_I_3_2)
         (=> run-axel-test_I_3_2 run-axel-test_I_3_1)))); Constraint 68 , Source: formula5.2
(assert (or run-axel-test_I_3_1
    run-axel-test_E_3_1
    run-axel-test_F_3_1
    run-axel-test_U_3_1)); Constraint 69 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_U_3_1))))
      (a!2 (=> run-axel-test_U_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_F_3_1)))))
  (and (=> run-axel-test_I_3_1
           (and (not run-axel-test_E_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       (=> run-axel-test_E_3_1
           (and (not run-axel-test_I_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       a!1
       a!2))); Constraint 70 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_1); Constraint 71 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_1 run-axel-test_PostCondition_3_1)
    run-axel-test_F_3_2)); Constraint 72 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_1 run-axel-test_U_3_2)
     (=> run-axel-test_U_3_2 run-axel-test_U_3_1))); Constraint 73 , Source: formula5.6
(assert (=> run-axel-test_F_3_1 run-axel-test_F_3_2)); Constraint 74 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_1); Constraint 75 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_1 put-on-sensor_PreCondition_3_1)
    put-on-sensor_E_3_2)); Constraint 76 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_1)
    (and (=> put-on-sensor_I_3_1 put-on-sensor_I_3_2)
         (=> put-on-sensor_I_3_2 put-on-sensor_I_3_1)))); Constraint 77 , Source: formula5.2
(assert (or put-on-sensor_I_3_1
    put-on-sensor_E_3_1
    put-on-sensor_F_3_1
    put-on-sensor_U_3_1)); Constraint 78 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_U_3_1))))
      (a!2 (=> put-on-sensor_U_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_F_3_1)))))
  (and (=> put-on-sensor_I_3_1
           (and (not put-on-sensor_E_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       (=> put-on-sensor_E_3_1
           (and (not put-on-sensor_I_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       a!1
       a!2))); Constraint 79 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_1); Constraint 80 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_1 put-on-sensor_PostCondition_3_1)
    put-on-sensor_F_3_2)); Constraint 81 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_1 put-on-sensor_U_3_2)
     (=> put-on-sensor_U_3_2 put-on-sensor_U_3_1))); Constraint 82 , Source: formula5.6
(assert (=> put-on-sensor_F_3_1 put-on-sensor_F_3_2)); Constraint 83 , Source: formula5.7
(assert (not run-axel-test_PreCondition_3_1)); Constraint 84 , Source: formula7-Precondition
(assert run-axel-test_PostCondition_3_1); Constraint 85 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_1); Constraint 86 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_1); Constraint 87 , Source: formula7-Postcondition
(assert (and (or (and (not run-axel-test_PreCondition_3_1) run-axel-test_I_3_1)
         (and (not run-axel-test_PostCondition_3_1) run-axel-test_E_3_1)
         run-axel-test_F_3_1
         run-axel-test_U_3_1)
     (or (and (not put-on-sensor_PreCondition_3_1) put-on-sensor_I_3_1)
         (and (not put-on-sensor_PostCondition_3_1) put-on-sensor_E_3_1)
         put-on-sensor_F_3_1
         put-on-sensor_U_3_1)
     (or run-axel-test_I_3_1
         run-axel-test_E_3_1
         put-on-sensor_I_3_1
         put-on-sensor_E_3_1))); Constraint 88 , Source: overallGoal
(assert axel-test); Constraint 89 , Source: GroupCardinality
(assert axel1); Constraint 90 , Source: GroupCardinality
(assert Virtual-V); Constraint 91 , Source: GroupCardinality
(assert axel1); Constraint 92 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 93 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 94 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 95 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 96 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 97 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 98 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 99 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 100 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 101 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 102 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 103 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 104 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 105 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 106 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 107 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 108 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 109 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 110 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 111 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 112 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 113 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 114 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 115 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 116 , Source: formula5.7
(assert axel-test); Constraint 117 , Source: GroupCardinality
(assert axel1); Constraint 118 , Source: GroupCardinality
(assert Virtual-V); Constraint 119 , Source: GroupCardinality
(assert axel1); Constraint 120 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 121 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 122 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 123 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 124 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 125 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 126 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 127 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_1)); Constraint 128 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1)
    run-axel-test_E_3_2)); Constraint 129 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1))
    (and (=> run-axel-test_I_3_1 run-axel-test_I_3_2)
         (=> run-axel-test_I_3_2 run-axel-test_I_3_1)))); Constraint 130 , Source: formula5.2
(assert (or run-axel-test_I_3_1
    run-axel-test_E_3_1
    run-axel-test_F_3_1
    run-axel-test_U_3_1)); Constraint 131 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_U_3_1))))
      (a!2 (=> run-axel-test_U_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_F_3_1)))))
  (and (=> run-axel-test_I_3_1
           (and (not run-axel-test_E_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       (=> run-axel-test_E_3_1
           (and (not run-axel-test_I_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       a!1
       a!2))); Constraint 132 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_1); Constraint 133 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_1 run-axel-test_PostCondition_3_1)
    run-axel-test_F_3_2)); Constraint 134 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_1 run-axel-test_U_3_2)
     (=> run-axel-test_U_3_2 run-axel-test_U_3_1))); Constraint 135 , Source: formula5.6
(assert (=> run-axel-test_F_3_1 run-axel-test_F_3_2)); Constraint 136 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_1); Constraint 137 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_1 put-on-sensor_PreCondition_3_1)
    put-on-sensor_E_3_2)); Constraint 138 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_1)
    (and (=> put-on-sensor_I_3_1 put-on-sensor_I_3_2)
         (=> put-on-sensor_I_3_2 put-on-sensor_I_3_1)))); Constraint 139 , Source: formula5.2
(assert (or put-on-sensor_I_3_1
    put-on-sensor_E_3_1
    put-on-sensor_F_3_1
    put-on-sensor_U_3_1)); Constraint 140 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_U_3_1))))
      (a!2 (=> put-on-sensor_U_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_F_3_1)))))
  (and (=> put-on-sensor_I_3_1
           (and (not put-on-sensor_E_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       (=> put-on-sensor_E_3_1
           (and (not put-on-sensor_I_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       a!1
       a!2))); Constraint 141 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_1); Constraint 142 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_1 put-on-sensor_PostCondition_3_1)
    put-on-sensor_F_3_2)); Constraint 143 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_1 put-on-sensor_U_3_2)
     (=> put-on-sensor_U_3_2 put-on-sensor_U_3_1))); Constraint 144 , Source: formula5.6
(assert (=> put-on-sensor_F_3_1 put-on-sensor_F_3_2)); Constraint 145 , Source: formula5.7
(declare-const run-axel-test_I_3_3 Bool)
(declare-const run-axel-test_E_3_3 Bool)
(declare-const run-axel-test_F_3_3 Bool)
(declare-const run-axel-test_U_3_3 Bool)
(declare-const run-axel-test_PreCondition_3_3 Bool)
(declare-const run-axel-test_PostCondition_3_3 Bool)
(declare-const put-on-sensor_I_3_3 Bool)
(declare-const put-on-sensor_E_3_3 Bool)
(declare-const put-on-sensor_F_3_3 Bool)
(declare-const put-on-sensor_U_3_3 Bool)
(declare-const put-on-sensor_PreCondition_3_3 Bool)
(declare-const put-on-sensor_PostCondition_3_3 Bool)
(declare-const remove-sensor_I_0_2 Bool)
(declare-const remove-sensor_E_0_2 Bool)
(declare-const remove-sensor_F_0_2 Bool)
(declare-const remove-sensor_U_0_2 Bool)
(assert axel-test); Constraint 146 , Source: GroupCardinality
(assert axel1); Constraint 147 , Source: GroupCardinality
(assert Virtual-V); Constraint 148 , Source: GroupCardinality
(assert axel1); Constraint 149 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 150 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 151 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 152 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 153 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 154 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 155 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 156 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 157 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_2 put-on-sensor_F_3_2) run-axel-test_E_3_3)); Constraint 158 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_2 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_2 run-axel-test_I_3_3)
         (=> run-axel-test_I_3_3 run-axel-test_I_3_2)))); Constraint 159 , Source: formula5.2
(assert (or run-axel-test_I_3_2
    run-axel-test_E_3_2
    run-axel-test_F_3_2
    run-axel-test_U_3_2)); Constraint 160 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_U_3_2))))
      (a!2 (=> run-axel-test_U_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_F_3_2)))))
  (and (=> run-axel-test_I_3_2
           (and (not run-axel-test_E_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       (=> run-axel-test_E_3_2
           (and (not run-axel-test_I_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       a!1
       a!2))); Constraint 161 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_2); Constraint 162 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_2 run-axel-test_PostCondition_3_2)
    run-axel-test_F_3_3)); Constraint 163 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_2 run-axel-test_U_3_3)
     (=> run-axel-test_U_3_3 run-axel-test_U_3_2))); Constraint 164 , Source: formula5.6
(assert (=> run-axel-test_F_3_2 run-axel-test_F_3_3)); Constraint 165 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_2); Constraint 166 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_2 put-on-sensor_PreCondition_3_2)
    put-on-sensor_E_3_3)); Constraint 167 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_2)
    (and (=> put-on-sensor_I_3_2 put-on-sensor_I_3_3)
         (=> put-on-sensor_I_3_3 put-on-sensor_I_3_2)))); Constraint 168 , Source: formula5.2
(assert (or put-on-sensor_I_3_2
    put-on-sensor_E_3_2
    put-on-sensor_F_3_2
    put-on-sensor_U_3_2)); Constraint 169 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_U_3_2))))
      (a!2 (=> put-on-sensor_U_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_F_3_2)))))
  (and (=> put-on-sensor_I_3_2
           (and (not put-on-sensor_E_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       (=> put-on-sensor_E_3_2
           (and (not put-on-sensor_I_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       a!1
       a!2))); Constraint 170 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_2); Constraint 171 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_2 put-on-sensor_PostCondition_3_2)
    put-on-sensor_F_3_3)); Constraint 172 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_2 put-on-sensor_U_3_3)
     (=> put-on-sensor_U_3_3 put-on-sensor_U_3_2))); Constraint 173 , Source: formula5.6
(assert (=> put-on-sensor_F_3_2 put-on-sensor_F_3_3)); Constraint 174 , Source: formula5.7
(assert run-axel-test_PostCondition_3_2); Constraint 175 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_2); Constraint 176 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_2); Constraint 177 , Source: formula7-Postcondition
(assert (and (or (and (not put-on-sensor_F_3_2) run-axel-test_I_3_2)
         (and (not run-axel-test_PostCondition_3_2) run-axel-test_E_3_2)
         run-axel-test_F_3_2
         run-axel-test_U_3_2)
     (or (and (not put-on-sensor_PreCondition_3_2) put-on-sensor_I_3_2)
         (and (not put-on-sensor_PostCondition_3_2) put-on-sensor_E_3_2)
         put-on-sensor_F_3_2
         put-on-sensor_U_3_2)
     (or run-axel-test_I_3_2
         run-axel-test_E_3_2
         put-on-sensor_I_3_2
         put-on-sensor_E_3_2))); Constraint 178 , Source: overallGoal
(assert axel-test); Constraint 179 , Source: GroupCardinality
(assert axel1); Constraint 180 , Source: GroupCardinality
(assert Virtual-V); Constraint 181 , Source: GroupCardinality
(assert axel1); Constraint 182 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 183 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 184 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 185 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 186 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 187 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 188 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 189 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 190 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 191 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 192 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 193 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 194 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 195 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 196 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 197 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 198 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 199 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 200 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 201 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 202 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 203 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 204 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 205 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 206 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 207 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 208 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 209 , Source: formula5.7
(assert axel-test); Constraint 210 , Source: GroupCardinality
(assert axel1); Constraint 211 , Source: GroupCardinality
(assert Virtual-V); Constraint 212 , Source: GroupCardinality
(assert axel1); Constraint 213 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 214 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 215 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 216 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 217 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 218 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 219 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 220 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 221 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 222 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 223 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_1)); Constraint 224 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1)
    run-axel-test_E_3_2)); Constraint 225 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1))
    (and (=> run-axel-test_I_3_1 run-axel-test_I_3_2)
         (=> run-axel-test_I_3_2 run-axel-test_I_3_1)))); Constraint 226 , Source: formula5.2
(assert (or run-axel-test_I_3_1
    run-axel-test_E_3_1
    run-axel-test_F_3_1
    run-axel-test_U_3_1)); Constraint 227 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_U_3_1))))
      (a!2 (=> run-axel-test_U_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_F_3_1)))))
  (and (=> run-axel-test_I_3_1
           (and (not run-axel-test_E_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       (=> run-axel-test_E_3_1
           (and (not run-axel-test_I_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       a!1
       a!2))); Constraint 228 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_1); Constraint 229 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_1 run-axel-test_PostCondition_3_1)
    run-axel-test_F_3_2)); Constraint 230 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_1 run-axel-test_U_3_2)
     (=> run-axel-test_U_3_2 run-axel-test_U_3_1))); Constraint 231 , Source: formula5.6
(assert (=> run-axel-test_F_3_1 run-axel-test_F_3_2)); Constraint 232 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_1); Constraint 233 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_1 put-on-sensor_PreCondition_3_1)
    put-on-sensor_E_3_2)); Constraint 234 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_1)
    (and (=> put-on-sensor_I_3_1 put-on-sensor_I_3_2)
         (=> put-on-sensor_I_3_2 put-on-sensor_I_3_1)))); Constraint 235 , Source: formula5.2
(assert (or put-on-sensor_I_3_1
    put-on-sensor_E_3_1
    put-on-sensor_F_3_1
    put-on-sensor_U_3_1)); Constraint 236 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_U_3_1))))
      (a!2 (=> put-on-sensor_U_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_F_3_1)))))
  (and (=> put-on-sensor_I_3_1
           (and (not put-on-sensor_E_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       (=> put-on-sensor_E_3_1
           (and (not put-on-sensor_I_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       a!1
       a!2))); Constraint 237 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_1); Constraint 238 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_1 put-on-sensor_PostCondition_3_1)
    put-on-sensor_F_3_2)); Constraint 239 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_1 put-on-sensor_U_3_2)
     (=> put-on-sensor_U_3_2 put-on-sensor_U_3_1))); Constraint 240 , Source: formula5.6
(assert (=> put-on-sensor_F_3_1 put-on-sensor_F_3_2)); Constraint 241 , Source: formula5.7
(assert axel-test); Constraint 242 , Source: GroupCardinality
(assert axel1); Constraint 243 , Source: GroupCardinality
(assert Virtual-V); Constraint 244 , Source: GroupCardinality
(assert axel1); Constraint 245 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 246 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 247 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 248 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 249 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 250 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 251 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 252 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 253 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 254 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 255 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 256 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_2 put-on-sensor_F_3_2) run-axel-test_E_3_3)); Constraint 257 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_2 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_2 run-axel-test_I_3_3)
         (=> run-axel-test_I_3_3 run-axel-test_I_3_2)))); Constraint 258 , Source: formula5.2
(assert (or run-axel-test_I_3_2
    run-axel-test_E_3_2
    run-axel-test_F_3_2
    run-axel-test_U_3_2)); Constraint 259 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_U_3_2))))
      (a!2 (=> run-axel-test_U_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_F_3_2)))))
  (and (=> run-axel-test_I_3_2
           (and (not run-axel-test_E_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       (=> run-axel-test_E_3_2
           (and (not run-axel-test_I_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       a!1
       a!2))); Constraint 260 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_2); Constraint 261 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_2 run-axel-test_PostCondition_3_2)
    run-axel-test_F_3_3)); Constraint 262 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_2 run-axel-test_U_3_3)
     (=> run-axel-test_U_3_3 run-axel-test_U_3_2))); Constraint 263 , Source: formula5.6
(assert (=> run-axel-test_F_3_2 run-axel-test_F_3_3)); Constraint 264 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_2); Constraint 265 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_2 put-on-sensor_PreCondition_3_2)
    put-on-sensor_E_3_3)); Constraint 266 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_2)
    (and (=> put-on-sensor_I_3_2 put-on-sensor_I_3_3)
         (=> put-on-sensor_I_3_3 put-on-sensor_I_3_2)))); Constraint 267 , Source: formula5.2
(assert (or put-on-sensor_I_3_2
    put-on-sensor_E_3_2
    put-on-sensor_F_3_2
    put-on-sensor_U_3_2)); Constraint 268 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_U_3_2))))
      (a!2 (=> put-on-sensor_U_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_F_3_2)))))
  (and (=> put-on-sensor_I_3_2
           (and (not put-on-sensor_E_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       (=> put-on-sensor_E_3_2
           (and (not put-on-sensor_I_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       a!1
       a!2))); Constraint 269 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_2); Constraint 270 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_2 put-on-sensor_PostCondition_3_2)
    put-on-sensor_F_3_3)); Constraint 271 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_2 put-on-sensor_U_3_3)
     (=> put-on-sensor_U_3_3 put-on-sensor_U_3_2))); Constraint 272 , Source: formula5.6
(assert (=> put-on-sensor_F_3_2 put-on-sensor_F_3_3)); Constraint 273 , Source: formula5.7
(declare-const run-axel-test_I_3_4 Bool)
(declare-const run-axel-test_E_3_4 Bool)
(declare-const run-axel-test_F_3_4 Bool)
(declare-const run-axel-test_U_3_4 Bool)
(declare-const run-axel-test_PreCondition_3_4 Bool)
(declare-const run-axel-test_PostCondition_3_4 Bool)
(declare-const put-on-sensor_I_3_4 Bool)
(declare-const put-on-sensor_E_3_4 Bool)
(declare-const put-on-sensor_F_3_4 Bool)
(declare-const put-on-sensor_U_3_4 Bool)
(declare-const put-on-sensor_PreCondition_3_4 Bool)
(declare-const put-on-sensor_PostCondition_3_4 Bool)
(declare-const remove-sensor_I_0_3 Bool)
(declare-const remove-sensor_E_0_3 Bool)
(declare-const remove-sensor_F_0_3 Bool)
(declare-const remove-sensor_U_0_3 Bool)
(assert axel-test); Constraint 274 , Source: GroupCardinality
(assert axel1); Constraint 275 , Source: GroupCardinality
(assert Virtual-V); Constraint 276 , Source: GroupCardinality
(assert axel1); Constraint 277 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 278 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 279 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 280 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 281 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 282 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 283 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 284 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 285 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 286 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 287 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 288 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 289 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_3 put-on-sensor_F_3_2) run-axel-test_E_3_4)); Constraint 290 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_3 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_3 run-axel-test_I_3_4)
         (=> run-axel-test_I_3_4 run-axel-test_I_3_3)))); Constraint 291 , Source: formula5.2
(assert (or run-axel-test_I_3_3
    run-axel-test_E_3_3
    run-axel-test_F_3_3
    run-axel-test_U_3_3)); Constraint 292 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_3
               (and (and (not run-axel-test_I_3_3) (not run-axel-test_E_3_3))
                    (not run-axel-test_U_3_3))))
      (a!2 (=> run-axel-test_U_3_3
               (and (and (not run-axel-test_I_3_3) (not run-axel-test_E_3_3))
                    (not run-axel-test_F_3_3)))))
  (and (=> run-axel-test_I_3_3
           (and (not run-axel-test_E_3_3)
                (not run-axel-test_F_3_3)
                (not run-axel-test_U_3_3)))
       (=> run-axel-test_E_3_3
           (and (not run-axel-test_I_3_3)
                (not run-axel-test_F_3_3)
                (not run-axel-test_U_3_3)))
       a!1
       a!2))); Constraint 293 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_3); Constraint 294 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_3 run-axel-test_PostCondition_3_3)
    run-axel-test_F_3_4)); Constraint 295 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_3 run-axel-test_U_3_4)
     (=> run-axel-test_U_3_4 run-axel-test_U_3_3))); Constraint 296 , Source: formula5.6
(assert (=> run-axel-test_F_3_3 run-axel-test_F_3_4)); Constraint 297 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_3); Constraint 298 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_3 put-on-sensor_PreCondition_3_3)
    put-on-sensor_E_3_4)); Constraint 299 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_3)
    (and (=> put-on-sensor_I_3_3 put-on-sensor_I_3_4)
         (=> put-on-sensor_I_3_4 put-on-sensor_I_3_3)))); Constraint 300 , Source: formula5.2
(assert (or put-on-sensor_I_3_3
    put-on-sensor_E_3_3
    put-on-sensor_F_3_3
    put-on-sensor_U_3_3)); Constraint 301 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_3
               (and (and (not put-on-sensor_I_3_3) (not put-on-sensor_E_3_3))
                    (not put-on-sensor_U_3_3))))
      (a!2 (=> put-on-sensor_U_3_3
               (and (and (not put-on-sensor_I_3_3) (not put-on-sensor_E_3_3))
                    (not put-on-sensor_F_3_3)))))
  (and (=> put-on-sensor_I_3_3
           (and (not put-on-sensor_E_3_3)
                (not put-on-sensor_F_3_3)
                (not put-on-sensor_U_3_3)))
       (=> put-on-sensor_E_3_3
           (and (not put-on-sensor_I_3_3)
                (not put-on-sensor_F_3_3)
                (not put-on-sensor_U_3_3)))
       a!1
       a!2))); Constraint 302 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_3); Constraint 303 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_3 put-on-sensor_PostCondition_3_3)
    put-on-sensor_F_3_4)); Constraint 304 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_3 put-on-sensor_U_3_4)
     (=> put-on-sensor_U_3_4 put-on-sensor_U_3_3))); Constraint 305 , Source: formula5.6
(assert (=> put-on-sensor_F_3_3 put-on-sensor_F_3_4)); Constraint 306 , Source: formula5.7
(assert run-axel-test_PostCondition_3_3); Constraint 307 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_3); Constraint 308 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_3); Constraint 309 , Source: formula7-Postcondition
(assert (and (or (and (not put-on-sensor_F_3_2) run-axel-test_I_3_3)
         (and (not run-axel-test_PostCondition_3_3) run-axel-test_E_3_3)
         run-axel-test_F_3_3
         run-axel-test_U_3_3)
     (or (and (not put-on-sensor_PreCondition_3_3) put-on-sensor_I_3_3)
         (and (not put-on-sensor_PostCondition_3_3) put-on-sensor_E_3_3)
         put-on-sensor_F_3_3
         put-on-sensor_U_3_3)
     (or run-axel-test_I_3_3
         run-axel-test_E_3_3
         put-on-sensor_I_3_3
         put-on-sensor_E_3_3))); Constraint 310 , Source: overallGoal
