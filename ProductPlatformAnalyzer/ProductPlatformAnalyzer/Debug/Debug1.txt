(declare-const axel1 Bool)
(declare-const axel-test Bool)
(declare-const Virtual-V Bool)
(declare-const run-axel-test_I_3_0 Bool)
(declare-const run-axel-test_E_3_0 Bool)
(declare-const run-axel-test_F_3_0 Bool)
(declare-const run-axel-test_U_3_0 Bool)
(declare-const run-axel-test_PreCondition_3_0 Bool)
(declare-const run-axel-test_PostCondition_3_0 Bool)
(declare-const run-axel-test_I_3_1 Bool)
(declare-const run-axel-test_E_3_1 Bool)
(declare-const run-axel-test_F_3_1 Bool)
(declare-const run-axel-test_U_3_1 Bool)
(declare-const run-axel-test_PreCondition_3_1 Bool)
(declare-const run-axel-test_PostCondition_3_1 Bool)
(declare-const put-on-sensor_I_3_0 Bool)
(declare-const put-on-sensor_E_3_0 Bool)
(declare-const put-on-sensor_F_3_0 Bool)
(declare-const put-on-sensor_U_3_0 Bool)
(declare-const put-on-sensor_PreCondition_3_0 Bool)
(declare-const put-on-sensor_PostCondition_3_0 Bool)
(declare-const put-on-sensor_I_3_1 Bool)
(declare-const put-on-sensor_E_3_1 Bool)
(declare-const put-on-sensor_F_3_1 Bool)
(declare-const put-on-sensor_U_3_1 Bool)
(declare-const put-on-sensor_PreCondition_3_1 Bool)
(declare-const put-on-sensor_PostCondition_3_1 Bool)
(declare-const remove-sensor_I_0_0 Bool)
(declare-const remove-sensor_E_0_0 Bool)
(declare-const remove-sensor_F_0_0 Bool)
(declare-const remove-sensor_U_0_0 Bool)
(assert axel-test); Constraint 1 , Source: GroupCardinality
(assert axel1); Constraint 2 , Source: GroupCardinality
(assert Virtual-V); Constraint 3 , Source: GroupCardinality
(assert axel1); Constraint 4 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 5 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 6 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 7 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 8 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 9 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 10 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 11 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 12 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 13 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 14 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 15 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 16 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 17 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 18 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 19 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 20 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 21 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 22 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 23 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 24 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 25 , Source: formula5.7
(assert (not run-axel-test_PreCondition_3_0)); Constraint 26 , Source: formula7-Precondition
(assert run-axel-test_PostCondition_3_0); Constraint 27 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_0); Constraint 28 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_0); Constraint 29 , Source: formula7-Postcondition
(assert (and (or (and (not run-axel-test_PreCondition_3_0) run-axel-test_I_3_0)
         (and (not run-axel-test_PostCondition_3_0) run-axel-test_E_3_0)
         run-axel-test_F_3_0
         run-axel-test_U_3_0)
     (or (and (not put-on-sensor_PreCondition_3_0) put-on-sensor_I_3_0)
         (and (not put-on-sensor_PostCondition_3_0) put-on-sensor_E_3_0)
         put-on-sensor_F_3_0
         put-on-sensor_U_3_0)
     (or run-axel-test_I_3_0
         run-axel-test_E_3_0
         put-on-sensor_I_3_0
         put-on-sensor_E_3_0))); Constraint 30 , Source: overallGoal
(assert axel-test); Constraint 31 , Source: GroupCardinality
(assert axel1); Constraint 32 , Source: GroupCardinality
(assert Virtual-V); Constraint 33 , Source: GroupCardinality
(assert axel1); Constraint 34 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 35 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 36 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 37 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 38 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 39 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 40 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 41 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 42 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 43 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 44 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 45 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 46 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 47 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 48 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 49 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 50 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 51 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 52 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 53 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 54 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 55 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 56 , Source: formula5.7
(declare-const run-axel-test_I_3_2 Bool)
(declare-const run-axel-test_E_3_2 Bool)
(declare-const run-axel-test_F_3_2 Bool)
(declare-const run-axel-test_U_3_2 Bool)
(declare-const run-axel-test_PreCondition_3_2 Bool)
(declare-const run-axel-test_PostCondition_3_2 Bool)
(declare-const put-on-sensor_I_3_2 Bool)
(declare-const put-on-sensor_E_3_2 Bool)
(declare-const put-on-sensor_F_3_2 Bool)
(declare-const put-on-sensor_U_3_2 Bool)
(declare-const put-on-sensor_PreCondition_3_2 Bool)
(declare-const put-on-sensor_PostCondition_3_2 Bool)
(declare-const remove-sensor_I_0_1 Bool)
(declare-const remove-sensor_E_0_1 Bool)
(declare-const remove-sensor_F_0_1 Bool)
(declare-const remove-sensor_U_0_1 Bool)
(assert axel-test); Constraint 57 , Source: GroupCardinality
(assert axel1); Constraint 58 , Source: GroupCardinality
(assert Virtual-V); Constraint 59 , Source: GroupCardinality
(assert axel1); Constraint 60 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 61 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 62 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 63 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 64 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 65 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_1)); Constraint 66 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1)
    run-axel-test_E_3_2)); Constraint 67 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1))
    (and (=> run-axel-test_I_3_1 run-axel-test_I_3_2)
         (=> run-axel-test_I_3_2 run-axel-test_I_3_1)))); Constraint 68 , Source: formula5.2
(assert (or run-axel-test_I_3_1
    run-axel-test_E_3_1
    run-axel-test_F_3_1
    run-axel-test_U_3_1)); Constraint 69 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_U_3_1))))
      (a!2 (=> run-axel-test_U_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_F_3_1)))))
  (and (=> run-axel-test_I_3_1
           (and (not run-axel-test_E_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       (=> run-axel-test_E_3_1
           (and (not run-axel-test_I_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       a!1
       a!2))); Constraint 70 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_1); Constraint 71 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_1 run-axel-test_PostCondition_3_1)
    run-axel-test_F_3_2)); Constraint 72 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_1 run-axel-test_U_3_2)
     (=> run-axel-test_U_3_2 run-axel-test_U_3_1))); Constraint 73 , Source: formula5.6
(assert (=> run-axel-test_F_3_1 run-axel-test_F_3_2)); Constraint 74 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_1); Constraint 75 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_1 put-on-sensor_PreCondition_3_1)
    put-on-sensor_E_3_2)); Constraint 76 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_1)
    (and (=> put-on-sensor_I_3_1 put-on-sensor_I_3_2)
         (=> put-on-sensor_I_3_2 put-on-sensor_I_3_1)))); Constraint 77 , Source: formula5.2
(assert (or put-on-sensor_I_3_1
    put-on-sensor_E_3_1
    put-on-sensor_F_3_1
    put-on-sensor_U_3_1)); Constraint 78 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_U_3_1))))
      (a!2 (=> put-on-sensor_U_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_F_3_1)))))
  (and (=> put-on-sensor_I_3_1
           (and (not put-on-sensor_E_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       (=> put-on-sensor_E_3_1
           (and (not put-on-sensor_I_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       a!1
       a!2))); Constraint 79 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_1); Constraint 80 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_1 put-on-sensor_PostCondition_3_1)
    put-on-sensor_F_3_2)); Constraint 81 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_1 put-on-sensor_U_3_2)
     (=> put-on-sensor_U_3_2 put-on-sensor_U_3_1))); Constraint 82 , Source: formula5.6
(assert (=> put-on-sensor_F_3_1 put-on-sensor_F_3_2)); Constraint 83 , Source: formula5.7
(assert (not run-axel-test_PreCondition_3_1)); Constraint 84 , Source: formula7-Precondition
(assert run-axel-test_PostCondition_3_1); Constraint 85 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_1); Constraint 86 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_1); Constraint 87 , Source: formula7-Postcondition
(assert (and (or (and (not run-axel-test_PreCondition_3_1) run-axel-test_I_3_1)
         (and (not run-axel-test_PostCondition_3_1) run-axel-test_E_3_1)
         run-axel-test_F_3_1
         run-axel-test_U_3_1)
     (or (and (not put-on-sensor_PreCondition_3_1) put-on-sensor_I_3_1)
         (and (not put-on-sensor_PostCondition_3_1) put-on-sensor_E_3_1)
         put-on-sensor_F_3_1
         put-on-sensor_U_3_1)
     (or run-axel-test_I_3_1
         run-axel-test_E_3_1
         put-on-sensor_I_3_1
         put-on-sensor_E_3_1))); Constraint 88 , Source: overallGoal
