(declare-const axel1 Bool)
(declare-const axel2 Bool)
(declare-const inspect-axel Bool)
(declare-const break-test Bool)
(declare-const VirtualV1 Bool)
(declare-const VirtualV2 Bool)
(declare-const inspect_I_5_0 Bool)
(declare-const inspect_E_5_0 Bool)
(declare-const inspect_F_5_0 Bool)
(declare-const inspect_U_5_0 Bool)
(declare-const inspect_PreCondition_5_0 Bool)
(declare-const inspect_PostCondition_5_0 Bool)
(declare-const inspect_I_5_1 Bool)
(declare-const inspect_E_5_1 Bool)
(declare-const inspect_F_5_1 Bool)
(declare-const inspect_U_5_1 Bool)
(declare-const inspect_PreCondition_5_1 Bool)
(declare-const inspect_PostCondition_5_1 Bool)
(declare-const run-break-test_I_6_0 Bool)
(declare-const run-break-test_E_6_0 Bool)
(declare-const run-break-test_F_6_0 Bool)
(declare-const run-break-test_U_6_0 Bool)
(declare-const run-break-test_PreCondition_6_0 Bool)
(declare-const run-break-test_PostCondition_6_0 Bool)
(declare-const run-break-test_I_6_1 Bool)
(declare-const run-break-test_E_6_1 Bool)
(declare-const run-break-test_F_6_1 Bool)
(declare-const run-break-test_U_6_1 Bool)
(declare-const run-break-test_PreCondition_6_1 Bool)
(declare-const run-break-test_PostCondition_6_1 Bool)
(assert (or break-test inspect-axel)); Constraint 1 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 2 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 3 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 4 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 5 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 6 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 7 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_0); Constraint 8 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 9 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 10 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 11 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 12 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 13 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 14 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 15 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 16 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 17 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 18 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 19 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 20 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 21 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 22 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 23 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 24 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 25 , Source: formula5.7
(assert inspect_PreCondition_5_0); Constraint 26 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 27 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 28 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 29 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 30 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 31 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 32 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 33 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 34 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 35 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 36 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 37 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 38 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 39 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 40 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 41 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 42 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 43 , Source: formula5.7
(assert inspect_PreCondition_5_0); Constraint 44 , Source: formula7-Precondition
(assert inspect_PostCondition_5_0); Constraint 45 , Source: formula7-Postcondition
(assert run-break-test_PreCondition_6_0); Constraint 46 , Source: formula7-Precondition
(assert run-break-test_PostCondition_6_0); Constraint 47 , Source: formula7-Postcondition
(assert (and (or (and (not inspect_PreCondition_5_0) inspect_I_5_0)
         (and (not inspect_PostCondition_5_0) inspect_E_5_0)
         inspect_F_5_0
         inspect_U_5_0)
     (or (and (not run-break-test_PreCondition_6_0) run-break-test_I_6_0)
         (and (not run-break-test_PostCondition_6_0) run-break-test_E_6_0)
         run-break-test_F_6_0
         run-break-test_U_6_0)
     (or inspect_I_5_0 inspect_E_5_0 run-break-test_I_6_0 run-break-test_E_6_0))); Constraint 48 , Source: overallGoal
(assert (or break-test inspect-axel)); Constraint 49 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 50 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 51 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 52 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 53 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 54 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 55 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_0); Constraint 56 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 57 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 58 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 59 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 60 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 61 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 62 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 63 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 64 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 65 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 66 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 67 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 68 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 69 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 70 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 71 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 72 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 73 , Source: formula5.7
(assert inspect_PreCondition_5_0); Constraint 74 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_0 inspect_PreCondition_5_0) inspect_E_5_1)); Constraint 75 , Source: formula5.1
(assert (=> (not inspect_I_5_0)
    (and (=> inspect_I_5_0 inspect_I_5_1) (=> inspect_I_5_1 inspect_I_5_0)))); Constraint 76 , Source: formula5.2
(assert (or inspect_I_5_0 inspect_E_5_0 inspect_F_5_0 inspect_U_5_0)); Constraint 77 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_U_5_0))))
      (a!2 (=> inspect_U_5_0
               (and (and (not inspect_I_5_0) (not inspect_E_5_0))
                    (not inspect_F_5_0)))))
  (and (=> inspect_I_5_0
           (and (not inspect_E_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       (=> inspect_E_5_0
           (and (not inspect_I_5_0) (not inspect_F_5_0) (not inspect_U_5_0)))
       a!1
       a!2))); Constraint 78 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_0); Constraint 79 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_0 inspect_PostCondition_5_0) inspect_F_5_1)); Constraint 80 , Source: formula5.4
(assert (and (=> inspect_U_5_0 inspect_U_5_1) (=> inspect_U_5_1 inspect_U_5_0))); Constraint 81 , Source: formula5.6
(assert (=> inspect_F_5_0 inspect_F_5_1)); Constraint 82 , Source: formula5.7
(assert run-break-test_PreCondition_6_0); Constraint 83 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_0 run-break-test_PreCondition_6_0)
    run-break-test_E_6_1)); Constraint 84 , Source: formula5.1
(assert (=> (not run-break-test_I_6_0)
    (and (=> run-break-test_I_6_0 run-break-test_I_6_1)
         (=> run-break-test_I_6_1 run-break-test_I_6_0)))); Constraint 85 , Source: formula5.2
(assert (or run-break-test_I_6_0
    run-break-test_E_6_0
    run-break-test_F_6_0
    run-break-test_U_6_0)); Constraint 86 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_U_6_0))))
      (a!2 (=> run-break-test_U_6_0
               (and (and (not run-break-test_I_6_0) (not run-break-test_E_6_0))
                    (not run-break-test_F_6_0)))))
  (and (=> run-break-test_I_6_0
           (and (not run-break-test_E_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       (=> run-break-test_E_6_0
           (and (not run-break-test_I_6_0)
                (not run-break-test_F_6_0)
                (not run-break-test_U_6_0)))
       a!1
       a!2))); Constraint 87 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_0); Constraint 88 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_0 run-break-test_PostCondition_6_0)
    run-break-test_F_6_1)); Constraint 89 , Source: formula5.4
(assert (and (=> run-break-test_U_6_0 run-break-test_U_6_1)
     (=> run-break-test_U_6_1 run-break-test_U_6_0))); Constraint 90 , Source: formula5.6
(assert (=> run-break-test_F_6_0 run-break-test_F_6_1)); Constraint 91 , Source: formula5.7
(declare-const inspect_I_5_2 Bool)
(declare-const inspect_E_5_2 Bool)
(declare-const inspect_F_5_2 Bool)
(declare-const inspect_U_5_2 Bool)
(declare-const inspect_PreCondition_5_2 Bool)
(declare-const inspect_PostCondition_5_2 Bool)
(declare-const run-break-test_I_6_2 Bool)
(declare-const run-break-test_E_6_2 Bool)
(declare-const run-break-test_F_6_2 Bool)
(declare-const run-break-test_U_6_2 Bool)
(declare-const run-break-test_PreCondition_6_2 Bool)
(declare-const run-break-test_PostCondition_6_2 Bool)
(assert (or break-test inspect-axel)); Constraint 92 , Source: GroupCardinality
(assert (or axel1 axel2)); Constraint 93 , Source: GroupCardinality
(assert (and VirtualV1 VirtualV2)); Constraint 94 , Source: GroupCardinality
(assert (or (not (and axel1 inspect-axel)) (and VirtualV1 (and axel1 inspect-axel)))); Constraint 95 , Source: formula3
(assert (or (not (and axel1 break-test)) (and VirtualV2 (and axel1 break-test)))); Constraint 96 , Source: formula3
(assert (and (=> inspect_I_5_0 VirtualV1)
     (=> VirtualV1 inspect_I_5_0)
     (not inspect_E_5_0)
     (not inspect_F_5_0)
     (=> inspect_U_5_0 (not VirtualV1))
     (=> (not VirtualV1) inspect_U_5_0))); Constraint 97 , Source: formula4-ActiveOperations
(assert (and (=> run-break-test_I_6_0 VirtualV2)
     (=> VirtualV2 run-break-test_I_6_0)
     (not run-break-test_E_6_0)
     (not run-break-test_F_6_0)
     (=> run-break-test_U_6_0 (not VirtualV2))
     (=> (not VirtualV2) run-break-test_U_6_0))); Constraint 98 , Source: formula4-ActiveOperations
(assert inspect_PreCondition_5_1); Constraint 99 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_1 inspect_PreCondition_5_1) inspect_E_5_2)); Constraint 100 , Source: formula5.1
(assert (=> (not inspect_I_5_1)
    (and (=> inspect_I_5_1 inspect_I_5_2) (=> inspect_I_5_2 inspect_I_5_1)))); Constraint 101 , Source: formula5.2
(assert (or inspect_I_5_1 inspect_E_5_1 inspect_F_5_1 inspect_U_5_1)); Constraint 102 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_U_5_1))))
      (a!2 (=> inspect_U_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_F_5_1)))))
  (and (=> inspect_I_5_1
           (and (not inspect_E_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       (=> inspect_E_5_1
           (and (not inspect_I_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       a!1
       a!2))); Constraint 103 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_1); Constraint 104 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_1 inspect_PostCondition_5_1) inspect_F_5_2)); Constraint 105 , Source: formula5.4
(assert (and (=> inspect_U_5_1 inspect_U_5_2) (=> inspect_U_5_2 inspect_U_5_1))); Constraint 106 , Source: formula5.6
(assert (=> inspect_F_5_1 inspect_F_5_2)); Constraint 107 , Source: formula5.7
(assert run-break-test_PreCondition_6_1); Constraint 108 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_1 run-break-test_PreCondition_6_1)
    run-break-test_E_6_2)); Constraint 109 , Source: formula5.1
(assert (=> (not run-break-test_I_6_1)
    (and (=> run-break-test_I_6_1 run-break-test_I_6_2)
         (=> run-break-test_I_6_2 run-break-test_I_6_1)))); Constraint 110 , Source: formula5.2
(assert (or run-break-test_I_6_1
    run-break-test_E_6_1
    run-break-test_F_6_1
    run-break-test_U_6_1)); Constraint 111 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_U_6_1))))
      (a!2 (=> run-break-test_U_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_F_6_1)))))
  (and (=> run-break-test_I_6_1
           (and (not run-break-test_E_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       (=> run-break-test_E_6_1
           (and (not run-break-test_I_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       a!1
       a!2))); Constraint 112 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_1); Constraint 113 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_1 run-break-test_PostCondition_6_1)
    run-break-test_F_6_2)); Constraint 114 , Source: formula5.4
(assert (and (=> run-break-test_U_6_1 run-break-test_U_6_2)
     (=> run-break-test_U_6_2 run-break-test_U_6_1))); Constraint 115 , Source: formula5.6
(assert (=> run-break-test_F_6_1 run-break-test_F_6_2)); Constraint 116 , Source: formula5.7
(assert inspect_PreCondition_5_1); Constraint 117 , Source: formula5-Precondition
(assert (=> (and inspect_I_5_1 inspect_PreCondition_5_1) inspect_E_5_2)); Constraint 118 , Source: formula5.1
(assert (=> (not inspect_I_5_1)
    (and (=> inspect_I_5_1 inspect_I_5_2) (=> inspect_I_5_2 inspect_I_5_1)))); Constraint 119 , Source: formula5.2
(assert (or inspect_I_5_1 inspect_E_5_1 inspect_F_5_1 inspect_U_5_1)); Constraint 120 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> inspect_F_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_U_5_1))))
      (a!2 (=> inspect_U_5_1
               (and (and (not inspect_I_5_1) (not inspect_E_5_1))
                    (not inspect_F_5_1)))))
  (and (=> inspect_I_5_1
           (and (not inspect_E_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       (=> inspect_E_5_1
           (and (not inspect_I_5_1) (not inspect_F_5_1) (not inspect_U_5_1)))
       a!1
       a!2))); Constraint 121 , Source: formula5.3-Secondpart
(assert inspect_PostCondition_5_1); Constraint 122 , Source: formula5.4-Postcondition
(assert (=> (and inspect_E_5_1 inspect_PostCondition_5_1) inspect_F_5_2)); Constraint 123 , Source: formula5.4
(assert (and (=> inspect_U_5_1 inspect_U_5_2) (=> inspect_U_5_2 inspect_U_5_1))); Constraint 124 , Source: formula5.6
(assert (=> inspect_F_5_1 inspect_F_5_2)); Constraint 125 , Source: formula5.7
(assert run-break-test_PreCondition_6_1); Constraint 126 , Source: formula5-Precondition
(assert (=> (and run-break-test_I_6_1 run-break-test_PreCondition_6_1)
    run-break-test_E_6_2)); Constraint 127 , Source: formula5.1
(assert (=> (not run-break-test_I_6_1)
    (and (=> run-break-test_I_6_1 run-break-test_I_6_2)
         (=> run-break-test_I_6_2 run-break-test_I_6_1)))); Constraint 128 , Source: formula5.2
(assert (or run-break-test_I_6_1
    run-break-test_E_6_1
    run-break-test_F_6_1
    run-break-test_U_6_1)); Constraint 129 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-break-test_F_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_U_6_1))))
      (a!2 (=> run-break-test_U_6_1
               (and (and (not run-break-test_I_6_1) (not run-break-test_E_6_1))
                    (not run-break-test_F_6_1)))))
  (and (=> run-break-test_I_6_1
           (and (not run-break-test_E_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       (=> run-break-test_E_6_1
           (and (not run-break-test_I_6_1)
                (not run-break-test_F_6_1)
                (not run-break-test_U_6_1)))
       a!1
       a!2))); Constraint 130 , Source: formula5.3-Secondpart
(assert run-break-test_PostCondition_6_1); Constraint 131 , Source: formula5.4-Postcondition
(assert (=> (and run-break-test_E_6_1 run-break-test_PostCondition_6_1)
    run-break-test_F_6_2)); Constraint 132 , Source: formula5.4
(assert (and (=> run-break-test_U_6_1 run-break-test_U_6_2)
     (=> run-break-test_U_6_2 run-break-test_U_6_1))); Constraint 133 , Source: formula5.6
(assert (=> run-break-test_F_6_1 run-break-test_F_6_2)); Constraint 134 , Source: formula5.7
(assert inspect_PreCondition_5_1); Constraint 135 , Source: formula7-Precondition
(assert inspect_PostCondition_5_1); Constraint 136 , Source: formula7-Postcondition
(assert run-break-test_PreCondition_6_1); Constraint 137 , Source: formula7-Precondition
(assert run-break-test_PostCondition_6_1); Constraint 138 , Source: formula7-Postcondition
(assert (and (or (and (not inspect_PreCondition_5_1) inspect_I_5_1)
         (and (not inspect_PostCondition_5_1) inspect_E_5_1)
         inspect_F_5_1
         inspect_U_5_1)
     (or (and (not run-break-test_PreCondition_6_1) run-break-test_I_6_1)
         (and (not run-break-test_PostCondition_6_1) run-break-test_E_6_1)
         run-break-test_F_6_1
         run-break-test_U_6_1)
     (or inspect_I_5_1 inspect_E_5_1 run-break-test_I_6_1 run-break-test_E_6_1))); Constraint 139 , Source: overallGoal
