(declare-const axel1 Bool)
(declare-const axel-test Bool)
(declare-const Virtual-V Bool)
(declare-const run-axel-test_I_3_0 Bool)
(declare-const run-axel-test_E_3_0 Bool)
(declare-const run-axel-test_F_3_0 Bool)
(declare-const run-axel-test_U_3_0 Bool)
(declare-const run-axel-test_PreCondition_3_0 Bool)
(declare-const run-axel-test_PostCondition_3_0 Bool)
(declare-const run-axel-test_I_3_1 Bool)
(declare-const run-axel-test_E_3_1 Bool)
(declare-const run-axel-test_F_3_1 Bool)
(declare-const run-axel-test_U_3_1 Bool)
(declare-const run-axel-test_PreCondition_3_1 Bool)
(declare-const run-axel-test_PostCondition_3_1 Bool)
(declare-const put-on-sensor_I_3_0 Bool)
(declare-const put-on-sensor_E_3_0 Bool)
(declare-const put-on-sensor_F_3_0 Bool)
(declare-const put-on-sensor_U_3_0 Bool)
(declare-const put-on-sensor_PreCondition_3_0 Bool)
(declare-const put-on-sensor_PostCondition_3_0 Bool)
(declare-const put-on-sensor_I_3_1 Bool)
(declare-const put-on-sensor_E_3_1 Bool)
(declare-const put-on-sensor_F_3_1 Bool)
(declare-const put-on-sensor_U_3_1 Bool)
(declare-const put-on-sensor_PreCondition_3_1 Bool)
(declare-const put-on-sensor_PostCondition_3_1 Bool)
(declare-const remove-sensor_I_0_0 Bool)
(declare-const remove-sensor_E_0_0 Bool)
(declare-const remove-sensor_F_0_0 Bool)
(declare-const remove-sensor_U_0_0 Bool)
(assert axel-test); Constraint 1 , Source: GroupCardinality
(assert axel1); Constraint 2 , Source: GroupCardinality
(assert Virtual-V); Constraint 3 , Source: GroupCardinality
(assert axel1); Constraint 4 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 5 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 6 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 7 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 8 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 9 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 10 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 11 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 12 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 13 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 14 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 15 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 16 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 17 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 18 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 19 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 20 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 21 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 22 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 23 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 24 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 25 , Source: formula5.7
(assert (not run-axel-test_PreCondition_3_0)); Constraint 26 , Source: formula7-Precondition
(assert run-axel-test_PostCondition_3_0); Constraint 27 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_0); Constraint 28 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_0); Constraint 29 , Source: formula7-Postcondition
(assert (and (or (and (not run-axel-test_PreCondition_3_0) run-axel-test_I_3_0)
         (and (not run-axel-test_PostCondition_3_0) run-axel-test_E_3_0)
         run-axel-test_F_3_0
         run-axel-test_U_3_0)
     (or (and (not put-on-sensor_PreCondition_3_0) put-on-sensor_I_3_0)
         (and (not put-on-sensor_PostCondition_3_0) put-on-sensor_E_3_0)
         put-on-sensor_F_3_0
         put-on-sensor_U_3_0)
     (or run-axel-test_I_3_0
         run-axel-test_E_3_0
         put-on-sensor_I_3_0
         put-on-sensor_E_3_0))); Constraint 30 , Source: overallGoal
(assert axel-test); Constraint 31 , Source: GroupCardinality
(assert axel1); Constraint 32 , Source: GroupCardinality
(assert Virtual-V); Constraint 33 , Source: GroupCardinality
(assert axel1); Constraint 34 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 35 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 36 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 37 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 38 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 39 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 40 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 41 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 42 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 43 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 44 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 45 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 46 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 47 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 48 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 49 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 50 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 51 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 52 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 53 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 54 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 55 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 56 , Source: formula5.7
(declare-const run-axel-test_I_3_2 Bool)
(declare-const run-axel-test_E_3_2 Bool)
(declare-const run-axel-test_F_3_2 Bool)
(declare-const run-axel-test_U_3_2 Bool)
(declare-const run-axel-test_PreCondition_3_2 Bool)
(declare-const run-axel-test_PostCondition_3_2 Bool)
(declare-const put-on-sensor_I_3_2 Bool)
(declare-const put-on-sensor_E_3_2 Bool)
(declare-const put-on-sensor_F_3_2 Bool)
(declare-const put-on-sensor_U_3_2 Bool)
(declare-const put-on-sensor_PreCondition_3_2 Bool)
(declare-const put-on-sensor_PostCondition_3_2 Bool)
(declare-const remove-sensor_I_0_1 Bool)
(declare-const remove-sensor_E_0_1 Bool)
(declare-const remove-sensor_F_0_1 Bool)
(declare-const remove-sensor_U_0_1 Bool)
(assert axel-test); Constraint 57 , Source: GroupCardinality
(assert axel1); Constraint 58 , Source: GroupCardinality
(assert Virtual-V); Constraint 59 , Source: GroupCardinality
(assert axel1); Constraint 60 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 61 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 62 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 63 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 64 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 65 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_1)); Constraint 66 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1)
    run-axel-test_E_3_2)); Constraint 67 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1))
    (and (=> run-axel-test_I_3_1 run-axel-test_I_3_2)
         (=> run-axel-test_I_3_2 run-axel-test_I_3_1)))); Constraint 68 , Source: formula5.2
(assert (or run-axel-test_I_3_1
    run-axel-test_E_3_1
    run-axel-test_F_3_1
    run-axel-test_U_3_1)); Constraint 69 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_U_3_1))))
      (a!2 (=> run-axel-test_U_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_F_3_1)))))
  (and (=> run-axel-test_I_3_1
           (and (not run-axel-test_E_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       (=> run-axel-test_E_3_1
           (and (not run-axel-test_I_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       a!1
       a!2))); Constraint 70 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_1); Constraint 71 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_1 run-axel-test_PostCondition_3_1)
    run-axel-test_F_3_2)); Constraint 72 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_1 run-axel-test_U_3_2)
     (=> run-axel-test_U_3_2 run-axel-test_U_3_1))); Constraint 73 , Source: formula5.6
(assert (=> run-axel-test_F_3_1 run-axel-test_F_3_2)); Constraint 74 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_1); Constraint 75 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_1 put-on-sensor_PreCondition_3_1)
    put-on-sensor_E_3_2)); Constraint 76 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_1)
    (and (=> put-on-sensor_I_3_1 put-on-sensor_I_3_2)
         (=> put-on-sensor_I_3_2 put-on-sensor_I_3_1)))); Constraint 77 , Source: formula5.2
(assert (or put-on-sensor_I_3_1
    put-on-sensor_E_3_1
    put-on-sensor_F_3_1
    put-on-sensor_U_3_1)); Constraint 78 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_U_3_1))))
      (a!2 (=> put-on-sensor_U_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_F_3_1)))))
  (and (=> put-on-sensor_I_3_1
           (and (not put-on-sensor_E_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       (=> put-on-sensor_E_3_1
           (and (not put-on-sensor_I_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       a!1
       a!2))); Constraint 79 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_1); Constraint 80 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_1 put-on-sensor_PostCondition_3_1)
    put-on-sensor_F_3_2)); Constraint 81 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_1 put-on-sensor_U_3_2)
     (=> put-on-sensor_U_3_2 put-on-sensor_U_3_1))); Constraint 82 , Source: formula5.6
(assert (=> put-on-sensor_F_3_1 put-on-sensor_F_3_2)); Constraint 83 , Source: formula5.7
(assert (not run-axel-test_PreCondition_3_1)); Constraint 84 , Source: formula7-Precondition
(assert run-axel-test_PostCondition_3_1); Constraint 85 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_1); Constraint 86 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_1); Constraint 87 , Source: formula7-Postcondition
(assert (and (or (and (not run-axel-test_PreCondition_3_1) run-axel-test_I_3_1)
         (and (not run-axel-test_PostCondition_3_1) run-axel-test_E_3_1)
         run-axel-test_F_3_1
         run-axel-test_U_3_1)
     (or (and (not put-on-sensor_PreCondition_3_1) put-on-sensor_I_3_1)
         (and (not put-on-sensor_PostCondition_3_1) put-on-sensor_E_3_1)
         put-on-sensor_F_3_1
         put-on-sensor_U_3_1)
     (or run-axel-test_I_3_1
         run-axel-test_E_3_1
         put-on-sensor_I_3_1
         put-on-sensor_E_3_1))); Constraint 88 , Source: overallGoal
(assert axel-test); Constraint 89 , Source: GroupCardinality
(assert axel1); Constraint 90 , Source: GroupCardinality
(assert Virtual-V); Constraint 91 , Source: GroupCardinality
(assert axel1); Constraint 92 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 93 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 94 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 95 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 96 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 97 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 98 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 99 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 100 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 101 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 102 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 103 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 104 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 105 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 106 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 107 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 108 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 109 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 110 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 111 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 112 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 113 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 114 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 115 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 116 , Source: formula5.7
(assert axel-test); Constraint 117 , Source: GroupCardinality
(assert axel1); Constraint 118 , Source: GroupCardinality
(assert Virtual-V); Constraint 119 , Source: GroupCardinality
(assert axel1); Constraint 120 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 121 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 122 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 123 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 124 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 125 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 126 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 127 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_1)); Constraint 128 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1)
    run-axel-test_E_3_2)); Constraint 129 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1))
    (and (=> run-axel-test_I_3_1 run-axel-test_I_3_2)
         (=> run-axel-test_I_3_2 run-axel-test_I_3_1)))); Constraint 130 , Source: formula5.2
(assert (or run-axel-test_I_3_1
    run-axel-test_E_3_1
    run-axel-test_F_3_1
    run-axel-test_U_3_1)); Constraint 131 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_U_3_1))))
      (a!2 (=> run-axel-test_U_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_F_3_1)))))
  (and (=> run-axel-test_I_3_1
           (and (not run-axel-test_E_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       (=> run-axel-test_E_3_1
           (and (not run-axel-test_I_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       a!1
       a!2))); Constraint 132 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_1); Constraint 133 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_1 run-axel-test_PostCondition_3_1)
    run-axel-test_F_3_2)); Constraint 134 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_1 run-axel-test_U_3_2)
     (=> run-axel-test_U_3_2 run-axel-test_U_3_1))); Constraint 135 , Source: formula5.6
(assert (=> run-axel-test_F_3_1 run-axel-test_F_3_2)); Constraint 136 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_1); Constraint 137 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_1 put-on-sensor_PreCondition_3_1)
    put-on-sensor_E_3_2)); Constraint 138 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_1)
    (and (=> put-on-sensor_I_3_1 put-on-sensor_I_3_2)
         (=> put-on-sensor_I_3_2 put-on-sensor_I_3_1)))); Constraint 139 , Source: formula5.2
(assert (or put-on-sensor_I_3_1
    put-on-sensor_E_3_1
    put-on-sensor_F_3_1
    put-on-sensor_U_3_1)); Constraint 140 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_U_3_1))))
      (a!2 (=> put-on-sensor_U_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_F_3_1)))))
  (and (=> put-on-sensor_I_3_1
           (and (not put-on-sensor_E_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       (=> put-on-sensor_E_3_1
           (and (not put-on-sensor_I_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       a!1
       a!2))); Constraint 141 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_1); Constraint 142 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_1 put-on-sensor_PostCondition_3_1)
    put-on-sensor_F_3_2)); Constraint 143 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_1 put-on-sensor_U_3_2)
     (=> put-on-sensor_U_3_2 put-on-sensor_U_3_1))); Constraint 144 , Source: formula5.6
(assert (=> put-on-sensor_F_3_1 put-on-sensor_F_3_2)); Constraint 145 , Source: formula5.7
(declare-const run-axel-test_I_3_3 Bool)
(declare-const run-axel-test_E_3_3 Bool)
(declare-const run-axel-test_F_3_3 Bool)
(declare-const run-axel-test_U_3_3 Bool)
(declare-const run-axel-test_PreCondition_3_3 Bool)
(declare-const run-axel-test_PostCondition_3_3 Bool)
(declare-const put-on-sensor_I_3_3 Bool)
(declare-const put-on-sensor_E_3_3 Bool)
(declare-const put-on-sensor_F_3_3 Bool)
(declare-const put-on-sensor_U_3_3 Bool)
(declare-const put-on-sensor_PreCondition_3_3 Bool)
(declare-const put-on-sensor_PostCondition_3_3 Bool)
(declare-const remove-sensor_I_0_2 Bool)
(declare-const remove-sensor_E_0_2 Bool)
(declare-const remove-sensor_F_0_2 Bool)
(declare-const remove-sensor_U_0_2 Bool)
(assert axel-test); Constraint 146 , Source: GroupCardinality
(assert axel1); Constraint 147 , Source: GroupCardinality
(assert Virtual-V); Constraint 148 , Source: GroupCardinality
(assert axel1); Constraint 149 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 150 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 151 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 152 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 153 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 154 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 155 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 156 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 157 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_2 put-on-sensor_F_3_2) run-axel-test_E_3_3)); Constraint 158 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_2 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_2 run-axel-test_I_3_3)
         (=> run-axel-test_I_3_3 run-axel-test_I_3_2)))); Constraint 159 , Source: formula5.2
(assert (or run-axel-test_I_3_2
    run-axel-test_E_3_2
    run-axel-test_F_3_2
    run-axel-test_U_3_2)); Constraint 160 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_U_3_2))))
      (a!2 (=> run-axel-test_U_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_F_3_2)))))
  (and (=> run-axel-test_I_3_2
           (and (not run-axel-test_E_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       (=> run-axel-test_E_3_2
           (and (not run-axel-test_I_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       a!1
       a!2))); Constraint 161 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_2); Constraint 162 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_2 run-axel-test_PostCondition_3_2)
    run-axel-test_F_3_3)); Constraint 163 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_2 run-axel-test_U_3_3)
     (=> run-axel-test_U_3_3 run-axel-test_U_3_2))); Constraint 164 , Source: formula5.6
(assert (=> run-axel-test_F_3_2 run-axel-test_F_3_3)); Constraint 165 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_2); Constraint 166 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_2 put-on-sensor_PreCondition_3_2)
    put-on-sensor_E_3_3)); Constraint 167 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_2)
    (and (=> put-on-sensor_I_3_2 put-on-sensor_I_3_3)
         (=> put-on-sensor_I_3_3 put-on-sensor_I_3_2)))); Constraint 168 , Source: formula5.2
(assert (or put-on-sensor_I_3_2
    put-on-sensor_E_3_2
    put-on-sensor_F_3_2
    put-on-sensor_U_3_2)); Constraint 169 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_U_3_2))))
      (a!2 (=> put-on-sensor_U_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_F_3_2)))))
  (and (=> put-on-sensor_I_3_2
           (and (not put-on-sensor_E_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       (=> put-on-sensor_E_3_2
           (and (not put-on-sensor_I_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       a!1
       a!2))); Constraint 170 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_2); Constraint 171 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_2 put-on-sensor_PostCondition_3_2)
    put-on-sensor_F_3_3)); Constraint 172 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_2 put-on-sensor_U_3_3)
     (=> put-on-sensor_U_3_3 put-on-sensor_U_3_2))); Constraint 173 , Source: formula5.6
(assert (=> put-on-sensor_F_3_2 put-on-sensor_F_3_3)); Constraint 174 , Source: formula5.7
(assert run-axel-test_PostCondition_3_2); Constraint 175 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_2); Constraint 176 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_2); Constraint 177 , Source: formula7-Postcondition
(assert (and (or (and (not put-on-sensor_F_3_2) run-axel-test_I_3_2)
         (and (not run-axel-test_PostCondition_3_2) run-axel-test_E_3_2)
         run-axel-test_F_3_2
         run-axel-test_U_3_2)
     (or (and (not put-on-sensor_PreCondition_3_2) put-on-sensor_I_3_2)
         (and (not put-on-sensor_PostCondition_3_2) put-on-sensor_E_3_2)
         put-on-sensor_F_3_2
         put-on-sensor_U_3_2)
     (or run-axel-test_I_3_2
         run-axel-test_E_3_2
         put-on-sensor_I_3_2
         put-on-sensor_E_3_2))); Constraint 178 , Source: overallGoal
(assert axel-test); Constraint 179 , Source: GroupCardinality
(assert axel1); Constraint 180 , Source: GroupCardinality
(assert Virtual-V); Constraint 181 , Source: GroupCardinality
(assert axel1); Constraint 182 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 183 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 184 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 185 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 186 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 187 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 188 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 189 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 190 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 191 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 192 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 193 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 194 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 195 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 196 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 197 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 198 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 199 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 200 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 201 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 202 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 203 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 204 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 205 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 206 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 207 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 208 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 209 , Source: formula5.7
(assert axel-test); Constraint 210 , Source: GroupCardinality
(assert axel1); Constraint 211 , Source: GroupCardinality
(assert Virtual-V); Constraint 212 , Source: GroupCardinality
(assert axel1); Constraint 213 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 214 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 215 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 216 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 217 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 218 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 219 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 220 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 221 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 222 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 223 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_1)); Constraint 224 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1)
    run-axel-test_E_3_2)); Constraint 225 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1))
    (and (=> run-axel-test_I_3_1 run-axel-test_I_3_2)
         (=> run-axel-test_I_3_2 run-axel-test_I_3_1)))); Constraint 226 , Source: formula5.2
(assert (or run-axel-test_I_3_1
    run-axel-test_E_3_1
    run-axel-test_F_3_1
    run-axel-test_U_3_1)); Constraint 227 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_U_3_1))))
      (a!2 (=> run-axel-test_U_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_F_3_1)))))
  (and (=> run-axel-test_I_3_1
           (and (not run-axel-test_E_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       (=> run-axel-test_E_3_1
           (and (not run-axel-test_I_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       a!1
       a!2))); Constraint 228 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_1); Constraint 229 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_1 run-axel-test_PostCondition_3_1)
    run-axel-test_F_3_2)); Constraint 230 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_1 run-axel-test_U_3_2)
     (=> run-axel-test_U_3_2 run-axel-test_U_3_1))); Constraint 231 , Source: formula5.6
(assert (=> run-axel-test_F_3_1 run-axel-test_F_3_2)); Constraint 232 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_1); Constraint 233 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_1 put-on-sensor_PreCondition_3_1)
    put-on-sensor_E_3_2)); Constraint 234 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_1)
    (and (=> put-on-sensor_I_3_1 put-on-sensor_I_3_2)
         (=> put-on-sensor_I_3_2 put-on-sensor_I_3_1)))); Constraint 235 , Source: formula5.2
(assert (or put-on-sensor_I_3_1
    put-on-sensor_E_3_1
    put-on-sensor_F_3_1
    put-on-sensor_U_3_1)); Constraint 236 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_U_3_1))))
      (a!2 (=> put-on-sensor_U_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_F_3_1)))))
  (and (=> put-on-sensor_I_3_1
           (and (not put-on-sensor_E_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       (=> put-on-sensor_E_3_1
           (and (not put-on-sensor_I_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       a!1
       a!2))); Constraint 237 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_1); Constraint 238 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_1 put-on-sensor_PostCondition_3_1)
    put-on-sensor_F_3_2)); Constraint 239 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_1 put-on-sensor_U_3_2)
     (=> put-on-sensor_U_3_2 put-on-sensor_U_3_1))); Constraint 240 , Source: formula5.6
(assert (=> put-on-sensor_F_3_1 put-on-sensor_F_3_2)); Constraint 241 , Source: formula5.7
(assert axel-test); Constraint 242 , Source: GroupCardinality
(assert axel1); Constraint 243 , Source: GroupCardinality
(assert Virtual-V); Constraint 244 , Source: GroupCardinality
(assert axel1); Constraint 245 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 246 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 247 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 248 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 249 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 250 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 251 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 252 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 253 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 254 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 255 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 256 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_2 put-on-sensor_F_3_2) run-axel-test_E_3_3)); Constraint 257 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_2 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_2 run-axel-test_I_3_3)
         (=> run-axel-test_I_3_3 run-axel-test_I_3_2)))); Constraint 258 , Source: formula5.2
(assert (or run-axel-test_I_3_2
    run-axel-test_E_3_2
    run-axel-test_F_3_2
    run-axel-test_U_3_2)); Constraint 259 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_U_3_2))))
      (a!2 (=> run-axel-test_U_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_F_3_2)))))
  (and (=> run-axel-test_I_3_2
           (and (not run-axel-test_E_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       (=> run-axel-test_E_3_2
           (and (not run-axel-test_I_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       a!1
       a!2))); Constraint 260 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_2); Constraint 261 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_2 run-axel-test_PostCondition_3_2)
    run-axel-test_F_3_3)); Constraint 262 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_2 run-axel-test_U_3_3)
     (=> run-axel-test_U_3_3 run-axel-test_U_3_2))); Constraint 263 , Source: formula5.6
(assert (=> run-axel-test_F_3_2 run-axel-test_F_3_3)); Constraint 264 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_2); Constraint 265 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_2 put-on-sensor_PreCondition_3_2)
    put-on-sensor_E_3_3)); Constraint 266 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_2)
    (and (=> put-on-sensor_I_3_2 put-on-sensor_I_3_3)
         (=> put-on-sensor_I_3_3 put-on-sensor_I_3_2)))); Constraint 267 , Source: formula5.2
(assert (or put-on-sensor_I_3_2
    put-on-sensor_E_3_2
    put-on-sensor_F_3_2
    put-on-sensor_U_3_2)); Constraint 268 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_U_3_2))))
      (a!2 (=> put-on-sensor_U_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_F_3_2)))))
  (and (=> put-on-sensor_I_3_2
           (and (not put-on-sensor_E_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       (=> put-on-sensor_E_3_2
           (and (not put-on-sensor_I_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       a!1
       a!2))); Constraint 269 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_2); Constraint 270 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_2 put-on-sensor_PostCondition_3_2)
    put-on-sensor_F_3_3)); Constraint 271 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_2 put-on-sensor_U_3_3)
     (=> put-on-sensor_U_3_3 put-on-sensor_U_3_2))); Constraint 272 , Source: formula5.6
(assert (=> put-on-sensor_F_3_2 put-on-sensor_F_3_3)); Constraint 273 , Source: formula5.7
(declare-const run-axel-test_I_3_4 Bool)
(declare-const run-axel-test_E_3_4 Bool)
(declare-const run-axel-test_F_3_4 Bool)
(declare-const run-axel-test_U_3_4 Bool)
(declare-const run-axel-test_PreCondition_3_4 Bool)
(declare-const run-axel-test_PostCondition_3_4 Bool)
(declare-const put-on-sensor_I_3_4 Bool)
(declare-const put-on-sensor_E_3_4 Bool)
(declare-const put-on-sensor_F_3_4 Bool)
(declare-const put-on-sensor_U_3_4 Bool)
(declare-const put-on-sensor_PreCondition_3_4 Bool)
(declare-const put-on-sensor_PostCondition_3_4 Bool)
(declare-const remove-sensor_I_0_3 Bool)
(declare-const remove-sensor_E_0_3 Bool)
(declare-const remove-sensor_F_0_3 Bool)
(declare-const remove-sensor_U_0_3 Bool)
(assert axel-test); Constraint 274 , Source: GroupCardinality
(assert axel1); Constraint 275 , Source: GroupCardinality
(assert Virtual-V); Constraint 276 , Source: GroupCardinality
(assert axel1); Constraint 277 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 278 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 279 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 280 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 281 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 282 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 283 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 284 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 285 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 286 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 287 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 288 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 289 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_3 put-on-sensor_F_3_2) run-axel-test_E_3_4)); Constraint 290 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_3 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_3 run-axel-test_I_3_4)
         (=> run-axel-test_I_3_4 run-axel-test_I_3_3)))); Constraint 291 , Source: formula5.2
(assert (or run-axel-test_I_3_3
    run-axel-test_E_3_3
    run-axel-test_F_3_3
    run-axel-test_U_3_3)); Constraint 292 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_3
               (and (and (not run-axel-test_I_3_3) (not run-axel-test_E_3_3))
                    (not run-axel-test_U_3_3))))
      (a!2 (=> run-axel-test_U_3_3
               (and (and (not run-axel-test_I_3_3) (not run-axel-test_E_3_3))
                    (not run-axel-test_F_3_3)))))
  (and (=> run-axel-test_I_3_3
           (and (not run-axel-test_E_3_3)
                (not run-axel-test_F_3_3)
                (not run-axel-test_U_3_3)))
       (=> run-axel-test_E_3_3
           (and (not run-axel-test_I_3_3)
                (not run-axel-test_F_3_3)
                (not run-axel-test_U_3_3)))
       a!1
       a!2))); Constraint 293 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_3); Constraint 294 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_3 run-axel-test_PostCondition_3_3)
    run-axel-test_F_3_4)); Constraint 295 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_3 run-axel-test_U_3_4)
     (=> run-axel-test_U_3_4 run-axel-test_U_3_3))); Constraint 296 , Source: formula5.6
(assert (=> run-axel-test_F_3_3 run-axel-test_F_3_4)); Constraint 297 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_3); Constraint 298 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_3 put-on-sensor_PreCondition_3_3)
    put-on-sensor_E_3_4)); Constraint 299 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_3)
    (and (=> put-on-sensor_I_3_3 put-on-sensor_I_3_4)
         (=> put-on-sensor_I_3_4 put-on-sensor_I_3_3)))); Constraint 300 , Source: formula5.2
(assert (or put-on-sensor_I_3_3
    put-on-sensor_E_3_3
    put-on-sensor_F_3_3
    put-on-sensor_U_3_3)); Constraint 301 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_3
               (and (and (not put-on-sensor_I_3_3) (not put-on-sensor_E_3_3))
                    (not put-on-sensor_U_3_3))))
      (a!2 (=> put-on-sensor_U_3_3
               (and (and (not put-on-sensor_I_3_3) (not put-on-sensor_E_3_3))
                    (not put-on-sensor_F_3_3)))))
  (and (=> put-on-sensor_I_3_3
           (and (not put-on-sensor_E_3_3)
                (not put-on-sensor_F_3_3)
                (not put-on-sensor_U_3_3)))
       (=> put-on-sensor_E_3_3
           (and (not put-on-sensor_I_3_3)
                (not put-on-sensor_F_3_3)
                (not put-on-sensor_U_3_3)))
       a!1
       a!2))); Constraint 302 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_3); Constraint 303 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_3 put-on-sensor_PostCondition_3_3)
    put-on-sensor_F_3_4)); Constraint 304 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_3 put-on-sensor_U_3_4)
     (=> put-on-sensor_U_3_4 put-on-sensor_U_3_3))); Constraint 305 , Source: formula5.6
(assert (=> put-on-sensor_F_3_3 put-on-sensor_F_3_4)); Constraint 306 , Source: formula5.7
(assert run-axel-test_PostCondition_3_3); Constraint 307 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_3); Constraint 308 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_3); Constraint 309 , Source: formula7-Postcondition
(assert (and (or (and (not put-on-sensor_F_3_2) run-axel-test_I_3_3)
         (and (not run-axel-test_PostCondition_3_3) run-axel-test_E_3_3)
         run-axel-test_F_3_3
         run-axel-test_U_3_3)
     (or (and (not put-on-sensor_PreCondition_3_3) put-on-sensor_I_3_3)
         (and (not put-on-sensor_PostCondition_3_3) put-on-sensor_E_3_3)
         put-on-sensor_F_3_3
         put-on-sensor_U_3_3)
     (or run-axel-test_I_3_3
         run-axel-test_E_3_3
         put-on-sensor_I_3_3
         put-on-sensor_E_3_3))); Constraint 310 , Source: overallGoal
(assert axel-test); Constraint 311 , Source: GroupCardinality
(assert axel1); Constraint 312 , Source: GroupCardinality
(assert Virtual-V); Constraint 313 , Source: GroupCardinality
(assert axel1); Constraint 314 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 315 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 316 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 317 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 318 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 319 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 320 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 321 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 322 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 323 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 324 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 325 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 326 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 327 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 328 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 329 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 330 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 331 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 332 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 333 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 334 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 335 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 336 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 337 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 338 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 339 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 340 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 341 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 342 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 343 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 344 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 345 , Source: formula5.7
(assert axel-test); Constraint 346 , Source: GroupCardinality
(assert axel1); Constraint 347 , Source: GroupCardinality
(assert Virtual-V); Constraint 348 , Source: GroupCardinality
(assert axel1); Constraint 349 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 350 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 351 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 352 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 353 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 354 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 355 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 356 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 357 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 358 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 359 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 360 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 361 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 362 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 363 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_1)); Constraint 364 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1)
    run-axel-test_E_3_2)); Constraint 365 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1))
    (and (=> run-axel-test_I_3_1 run-axel-test_I_3_2)
         (=> run-axel-test_I_3_2 run-axel-test_I_3_1)))); Constraint 366 , Source: formula5.2
(assert (or run-axel-test_I_3_1
    run-axel-test_E_3_1
    run-axel-test_F_3_1
    run-axel-test_U_3_1)); Constraint 367 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_U_3_1))))
      (a!2 (=> run-axel-test_U_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_F_3_1)))))
  (and (=> run-axel-test_I_3_1
           (and (not run-axel-test_E_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       (=> run-axel-test_E_3_1
           (and (not run-axel-test_I_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       a!1
       a!2))); Constraint 368 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_1); Constraint 369 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_1 run-axel-test_PostCondition_3_1)
    run-axel-test_F_3_2)); Constraint 370 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_1 run-axel-test_U_3_2)
     (=> run-axel-test_U_3_2 run-axel-test_U_3_1))); Constraint 371 , Source: formula5.6
(assert (=> run-axel-test_F_3_1 run-axel-test_F_3_2)); Constraint 372 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_1); Constraint 373 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_1 put-on-sensor_PreCondition_3_1)
    put-on-sensor_E_3_2)); Constraint 374 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_1)
    (and (=> put-on-sensor_I_3_1 put-on-sensor_I_3_2)
         (=> put-on-sensor_I_3_2 put-on-sensor_I_3_1)))); Constraint 375 , Source: formula5.2
(assert (or put-on-sensor_I_3_1
    put-on-sensor_E_3_1
    put-on-sensor_F_3_1
    put-on-sensor_U_3_1)); Constraint 376 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_U_3_1))))
      (a!2 (=> put-on-sensor_U_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_F_3_1)))))
  (and (=> put-on-sensor_I_3_1
           (and (not put-on-sensor_E_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       (=> put-on-sensor_E_3_1
           (and (not put-on-sensor_I_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       a!1
       a!2))); Constraint 377 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_1); Constraint 378 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_1 put-on-sensor_PostCondition_3_1)
    put-on-sensor_F_3_2)); Constraint 379 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_1 put-on-sensor_U_3_2)
     (=> put-on-sensor_U_3_2 put-on-sensor_U_3_1))); Constraint 380 , Source: formula5.6
(assert (=> put-on-sensor_F_3_1 put-on-sensor_F_3_2)); Constraint 381 , Source: formula5.7
(assert axel-test); Constraint 382 , Source: GroupCardinality
(assert axel1); Constraint 383 , Source: GroupCardinality
(assert Virtual-V); Constraint 384 , Source: GroupCardinality
(assert axel1); Constraint 385 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 386 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 387 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 388 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 389 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 390 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 391 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 392 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 393 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 394 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 395 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 396 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 397 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 398 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 399 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 400 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_2 put-on-sensor_F_3_2) run-axel-test_E_3_3)); Constraint 401 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_2 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_2 run-axel-test_I_3_3)
         (=> run-axel-test_I_3_3 run-axel-test_I_3_2)))); Constraint 402 , Source: formula5.2
(assert (or run-axel-test_I_3_2
    run-axel-test_E_3_2
    run-axel-test_F_3_2
    run-axel-test_U_3_2)); Constraint 403 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_U_3_2))))
      (a!2 (=> run-axel-test_U_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_F_3_2)))))
  (and (=> run-axel-test_I_3_2
           (and (not run-axel-test_E_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       (=> run-axel-test_E_3_2
           (and (not run-axel-test_I_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       a!1
       a!2))); Constraint 404 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_2); Constraint 405 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_2 run-axel-test_PostCondition_3_2)
    run-axel-test_F_3_3)); Constraint 406 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_2 run-axel-test_U_3_3)
     (=> run-axel-test_U_3_3 run-axel-test_U_3_2))); Constraint 407 , Source: formula5.6
(assert (=> run-axel-test_F_3_2 run-axel-test_F_3_3)); Constraint 408 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_2); Constraint 409 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_2 put-on-sensor_PreCondition_3_2)
    put-on-sensor_E_3_3)); Constraint 410 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_2)
    (and (=> put-on-sensor_I_3_2 put-on-sensor_I_3_3)
         (=> put-on-sensor_I_3_3 put-on-sensor_I_3_2)))); Constraint 411 , Source: formula5.2
(assert (or put-on-sensor_I_3_2
    put-on-sensor_E_3_2
    put-on-sensor_F_3_2
    put-on-sensor_U_3_2)); Constraint 412 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_U_3_2))))
      (a!2 (=> put-on-sensor_U_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_F_3_2)))))
  (and (=> put-on-sensor_I_3_2
           (and (not put-on-sensor_E_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       (=> put-on-sensor_E_3_2
           (and (not put-on-sensor_I_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       a!1
       a!2))); Constraint 413 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_2); Constraint 414 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_2 put-on-sensor_PostCondition_3_2)
    put-on-sensor_F_3_3)); Constraint 415 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_2 put-on-sensor_U_3_3)
     (=> put-on-sensor_U_3_3 put-on-sensor_U_3_2))); Constraint 416 , Source: formula5.6
(assert (=> put-on-sensor_F_3_2 put-on-sensor_F_3_3)); Constraint 417 , Source: formula5.7
(assert axel-test); Constraint 418 , Source: GroupCardinality
(assert axel1); Constraint 419 , Source: GroupCardinality
(assert Virtual-V); Constraint 420 , Source: GroupCardinality
(assert axel1); Constraint 421 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 422 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 423 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 424 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 425 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 426 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 427 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 428 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 429 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 430 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 431 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 432 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 433 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 434 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 435 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 436 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 437 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_3 put-on-sensor_F_3_2) run-axel-test_E_3_4)); Constraint 438 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_3 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_3 run-axel-test_I_3_4)
         (=> run-axel-test_I_3_4 run-axel-test_I_3_3)))); Constraint 439 , Source: formula5.2
(assert (or run-axel-test_I_3_3
    run-axel-test_E_3_3
    run-axel-test_F_3_3
    run-axel-test_U_3_3)); Constraint 440 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_3
               (and (and (not run-axel-test_I_3_3) (not run-axel-test_E_3_3))
                    (not run-axel-test_U_3_3))))
      (a!2 (=> run-axel-test_U_3_3
               (and (and (not run-axel-test_I_3_3) (not run-axel-test_E_3_3))
                    (not run-axel-test_F_3_3)))))
  (and (=> run-axel-test_I_3_3
           (and (not run-axel-test_E_3_3)
                (not run-axel-test_F_3_3)
                (not run-axel-test_U_3_3)))
       (=> run-axel-test_E_3_3
           (and (not run-axel-test_I_3_3)
                (not run-axel-test_F_3_3)
                (not run-axel-test_U_3_3)))
       a!1
       a!2))); Constraint 441 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_3); Constraint 442 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_3 run-axel-test_PostCondition_3_3)
    run-axel-test_F_3_4)); Constraint 443 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_3 run-axel-test_U_3_4)
     (=> run-axel-test_U_3_4 run-axel-test_U_3_3))); Constraint 444 , Source: formula5.6
(assert (=> run-axel-test_F_3_3 run-axel-test_F_3_4)); Constraint 445 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_3); Constraint 446 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_3 put-on-sensor_PreCondition_3_3)
    put-on-sensor_E_3_4)); Constraint 447 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_3)
    (and (=> put-on-sensor_I_3_3 put-on-sensor_I_3_4)
         (=> put-on-sensor_I_3_4 put-on-sensor_I_3_3)))); Constraint 448 , Source: formula5.2
(assert (or put-on-sensor_I_3_3
    put-on-sensor_E_3_3
    put-on-sensor_F_3_3
    put-on-sensor_U_3_3)); Constraint 449 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_3
               (and (and (not put-on-sensor_I_3_3) (not put-on-sensor_E_3_3))
                    (not put-on-sensor_U_3_3))))
      (a!2 (=> put-on-sensor_U_3_3
               (and (and (not put-on-sensor_I_3_3) (not put-on-sensor_E_3_3))
                    (not put-on-sensor_F_3_3)))))
  (and (=> put-on-sensor_I_3_3
           (and (not put-on-sensor_E_3_3)
                (not put-on-sensor_F_3_3)
                (not put-on-sensor_U_3_3)))
       (=> put-on-sensor_E_3_3
           (and (not put-on-sensor_I_3_3)
                (not put-on-sensor_F_3_3)
                (not put-on-sensor_U_3_3)))
       a!1
       a!2))); Constraint 450 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_3); Constraint 451 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_3 put-on-sensor_PostCondition_3_3)
    put-on-sensor_F_3_4)); Constraint 452 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_3 put-on-sensor_U_3_4)
     (=> put-on-sensor_U_3_4 put-on-sensor_U_3_3))); Constraint 453 , Source: formula5.6
(assert (=> put-on-sensor_F_3_3 put-on-sensor_F_3_4)); Constraint 454 , Source: formula5.7
(declare-const run-axel-test_I_3_5 Bool)
(declare-const run-axel-test_E_3_5 Bool)
(declare-const run-axel-test_F_3_5 Bool)
(declare-const run-axel-test_U_3_5 Bool)
(declare-const run-axel-test_PreCondition_3_5 Bool)
(declare-const run-axel-test_PostCondition_3_5 Bool)
(declare-const put-on-sensor_I_3_5 Bool)
(declare-const put-on-sensor_E_3_5 Bool)
(declare-const put-on-sensor_F_3_5 Bool)
(declare-const put-on-sensor_U_3_5 Bool)
(declare-const put-on-sensor_PreCondition_3_5 Bool)
(declare-const put-on-sensor_PostCondition_3_5 Bool)
(declare-const remove-sensor_I_0_4 Bool)
(declare-const remove-sensor_E_0_4 Bool)
(declare-const remove-sensor_F_0_4 Bool)
(declare-const remove-sensor_U_0_4 Bool)
(assert axel-test); Constraint 455 , Source: GroupCardinality
(assert axel1); Constraint 456 , Source: GroupCardinality
(assert Virtual-V); Constraint 457 , Source: GroupCardinality
(assert axel1); Constraint 458 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 459 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 460 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 461 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 462 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 463 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 464 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 465 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 466 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 467 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 468 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 469 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 470 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 471 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 472 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 473 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 474 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 475 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_4 put-on-sensor_F_3_2) run-axel-test_E_3_5)); Constraint 476 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_4 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_4 run-axel-test_I_3_5)
         (=> run-axel-test_I_3_5 run-axel-test_I_3_4)))); Constraint 477 , Source: formula5.2
(assert (or run-axel-test_I_3_4
    run-axel-test_E_3_4
    run-axel-test_F_3_4
    run-axel-test_U_3_4)); Constraint 478 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_4
               (and (and (not run-axel-test_I_3_4) (not run-axel-test_E_3_4))
                    (not run-axel-test_U_3_4))))
      (a!2 (=> run-axel-test_U_3_4
               (and (and (not run-axel-test_I_3_4) (not run-axel-test_E_3_4))
                    (not run-axel-test_F_3_4)))))
  (and (=> run-axel-test_I_3_4
           (and (not run-axel-test_E_3_4)
                (not run-axel-test_F_3_4)
                (not run-axel-test_U_3_4)))
       (=> run-axel-test_E_3_4
           (and (not run-axel-test_I_3_4)
                (not run-axel-test_F_3_4)
                (not run-axel-test_U_3_4)))
       a!1
       a!2))); Constraint 479 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_4); Constraint 480 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_4 run-axel-test_PostCondition_3_4)
    run-axel-test_F_3_5)); Constraint 481 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_4 run-axel-test_U_3_5)
     (=> run-axel-test_U_3_5 run-axel-test_U_3_4))); Constraint 482 , Source: formula5.6
(assert (=> run-axel-test_F_3_4 run-axel-test_F_3_5)); Constraint 483 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_4); Constraint 484 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_4 put-on-sensor_PreCondition_3_4)
    put-on-sensor_E_3_5)); Constraint 485 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_4)
    (and (=> put-on-sensor_I_3_4 put-on-sensor_I_3_5)
         (=> put-on-sensor_I_3_5 put-on-sensor_I_3_4)))); Constraint 486 , Source: formula5.2
(assert (or put-on-sensor_I_3_4
    put-on-sensor_E_3_4
    put-on-sensor_F_3_4
    put-on-sensor_U_3_4)); Constraint 487 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_4
               (and (and (not put-on-sensor_I_3_4) (not put-on-sensor_E_3_4))
                    (not put-on-sensor_U_3_4))))
      (a!2 (=> put-on-sensor_U_3_4
               (and (and (not put-on-sensor_I_3_4) (not put-on-sensor_E_3_4))
                    (not put-on-sensor_F_3_4)))))
  (and (=> put-on-sensor_I_3_4
           (and (not put-on-sensor_E_3_4)
                (not put-on-sensor_F_3_4)
                (not put-on-sensor_U_3_4)))
       (=> put-on-sensor_E_3_4
           (and (not put-on-sensor_I_3_4)
                (not put-on-sensor_F_3_4)
                (not put-on-sensor_U_3_4)))
       a!1
       a!2))); Constraint 488 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_4); Constraint 489 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_4 put-on-sensor_PostCondition_3_4)
    put-on-sensor_F_3_5)); Constraint 490 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_4 put-on-sensor_U_3_5)
     (=> put-on-sensor_U_3_5 put-on-sensor_U_3_4))); Constraint 491 , Source: formula5.6
(assert (=> put-on-sensor_F_3_4 put-on-sensor_F_3_5)); Constraint 492 , Source: formula5.7
(assert run-axel-test_PostCondition_3_4); Constraint 493 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_4); Constraint 494 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_4); Constraint 495 , Source: formula7-Postcondition
(assert (and (or (and (not put-on-sensor_F_3_2) run-axel-test_I_3_4)
         (and (not run-axel-test_PostCondition_3_4) run-axel-test_E_3_4)
         run-axel-test_F_3_4
         run-axel-test_U_3_4)
     (or (and (not put-on-sensor_PreCondition_3_4) put-on-sensor_I_3_4)
         (and (not put-on-sensor_PostCondition_3_4) put-on-sensor_E_3_4)
         put-on-sensor_F_3_4
         put-on-sensor_U_3_4)
     (or run-axel-test_I_3_4
         run-axel-test_E_3_4
         put-on-sensor_I_3_4
         put-on-sensor_E_3_4))); Constraint 496 , Source: overallGoal
(assert axel-test); Constraint 497 , Source: GroupCardinality
(assert axel1); Constraint 498 , Source: GroupCardinality
(assert Virtual-V); Constraint 499 , Source: GroupCardinality
(assert axel1); Constraint 500 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 501 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 502 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 503 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 504 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 505 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 506 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 507 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 508 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 509 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 510 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 511 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 512 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 513 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 514 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 515 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 516 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 517 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 518 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_0)); Constraint 519 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0)
    run-axel-test_E_3_1)); Constraint 520 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_0 run-axel-test_PreCondition_3_0))
    (and (=> run-axel-test_I_3_0 run-axel-test_I_3_1)
         (=> run-axel-test_I_3_1 run-axel-test_I_3_0)))); Constraint 521 , Source: formula5.2
(assert (or run-axel-test_I_3_0
    run-axel-test_E_3_0
    run-axel-test_F_3_0
    run-axel-test_U_3_0)); Constraint 522 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_U_3_0))))
      (a!2 (=> run-axel-test_U_3_0
               (and (and (not run-axel-test_I_3_0) (not run-axel-test_E_3_0))
                    (not run-axel-test_F_3_0)))))
  (and (=> run-axel-test_I_3_0
           (and (not run-axel-test_E_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       (=> run-axel-test_E_3_0
           (and (not run-axel-test_I_3_0)
                (not run-axel-test_F_3_0)
                (not run-axel-test_U_3_0)))
       a!1
       a!2))); Constraint 523 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_0); Constraint 524 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_0 run-axel-test_PostCondition_3_0)
    run-axel-test_F_3_1)); Constraint 525 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_0 run-axel-test_U_3_1)
     (=> run-axel-test_U_3_1 run-axel-test_U_3_0))); Constraint 526 , Source: formula5.6
(assert (=> run-axel-test_F_3_0 run-axel-test_F_3_1)); Constraint 527 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_0); Constraint 528 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_0 put-on-sensor_PreCondition_3_0)
    put-on-sensor_E_3_1)); Constraint 529 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_0)
    (and (=> put-on-sensor_I_3_0 put-on-sensor_I_3_1)
         (=> put-on-sensor_I_3_1 put-on-sensor_I_3_0)))); Constraint 530 , Source: formula5.2
(assert (or put-on-sensor_I_3_0
    put-on-sensor_E_3_0
    put-on-sensor_F_3_0
    put-on-sensor_U_3_0)); Constraint 531 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_U_3_0))))
      (a!2 (=> put-on-sensor_U_3_0
               (and (and (not put-on-sensor_I_3_0) (not put-on-sensor_E_3_0))
                    (not put-on-sensor_F_3_0)))))
  (and (=> put-on-sensor_I_3_0
           (and (not put-on-sensor_E_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       (=> put-on-sensor_E_3_0
           (and (not put-on-sensor_I_3_0)
                (not put-on-sensor_F_3_0)
                (not put-on-sensor_U_3_0)))
       a!1
       a!2))); Constraint 532 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_0); Constraint 533 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_0 put-on-sensor_PostCondition_3_0)
    put-on-sensor_F_3_1)); Constraint 534 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_0 put-on-sensor_U_3_1)
     (=> put-on-sensor_U_3_1 put-on-sensor_U_3_0))); Constraint 535 , Source: formula5.6
(assert (=> put-on-sensor_F_3_0 put-on-sensor_F_3_1)); Constraint 536 , Source: formula5.7
(assert axel-test); Constraint 537 , Source: GroupCardinality
(assert axel1); Constraint 538 , Source: GroupCardinality
(assert Virtual-V); Constraint 539 , Source: GroupCardinality
(assert axel1); Constraint 540 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 541 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 542 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 543 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 544 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 545 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 546 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 547 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 548 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 549 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 550 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 551 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 552 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 553 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 554 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 555 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 556 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 557 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 558 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 559 , Source: formula4-InactiveOperations
(assert (not run-axel-test_PreCondition_3_1)); Constraint 560 , Source: formula5-Precondition
(assert (=> (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1)
    run-axel-test_E_3_2)); Constraint 561 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_1 run-axel-test_PreCondition_3_1))
    (and (=> run-axel-test_I_3_1 run-axel-test_I_3_2)
         (=> run-axel-test_I_3_2 run-axel-test_I_3_1)))); Constraint 562 , Source: formula5.2
(assert (or run-axel-test_I_3_1
    run-axel-test_E_3_1
    run-axel-test_F_3_1
    run-axel-test_U_3_1)); Constraint 563 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_U_3_1))))
      (a!2 (=> run-axel-test_U_3_1
               (and (and (not run-axel-test_I_3_1) (not run-axel-test_E_3_1))
                    (not run-axel-test_F_3_1)))))
  (and (=> run-axel-test_I_3_1
           (and (not run-axel-test_E_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       (=> run-axel-test_E_3_1
           (and (not run-axel-test_I_3_1)
                (not run-axel-test_F_3_1)
                (not run-axel-test_U_3_1)))
       a!1
       a!2))); Constraint 564 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_1); Constraint 565 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_1 run-axel-test_PostCondition_3_1)
    run-axel-test_F_3_2)); Constraint 566 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_1 run-axel-test_U_3_2)
     (=> run-axel-test_U_3_2 run-axel-test_U_3_1))); Constraint 567 , Source: formula5.6
(assert (=> run-axel-test_F_3_1 run-axel-test_F_3_2)); Constraint 568 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_1); Constraint 569 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_1 put-on-sensor_PreCondition_3_1)
    put-on-sensor_E_3_2)); Constraint 570 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_1)
    (and (=> put-on-sensor_I_3_1 put-on-sensor_I_3_2)
         (=> put-on-sensor_I_3_2 put-on-sensor_I_3_1)))); Constraint 571 , Source: formula5.2
(assert (or put-on-sensor_I_3_1
    put-on-sensor_E_3_1
    put-on-sensor_F_3_1
    put-on-sensor_U_3_1)); Constraint 572 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_U_3_1))))
      (a!2 (=> put-on-sensor_U_3_1
               (and (and (not put-on-sensor_I_3_1) (not put-on-sensor_E_3_1))
                    (not put-on-sensor_F_3_1)))))
  (and (=> put-on-sensor_I_3_1
           (and (not put-on-sensor_E_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       (=> put-on-sensor_E_3_1
           (and (not put-on-sensor_I_3_1)
                (not put-on-sensor_F_3_1)
                (not put-on-sensor_U_3_1)))
       a!1
       a!2))); Constraint 573 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_1); Constraint 574 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_1 put-on-sensor_PostCondition_3_1)
    put-on-sensor_F_3_2)); Constraint 575 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_1 put-on-sensor_U_3_2)
     (=> put-on-sensor_U_3_2 put-on-sensor_U_3_1))); Constraint 576 , Source: formula5.6
(assert (=> put-on-sensor_F_3_1 put-on-sensor_F_3_2)); Constraint 577 , Source: formula5.7
(assert axel-test); Constraint 578 , Source: GroupCardinality
(assert axel1); Constraint 579 , Source: GroupCardinality
(assert Virtual-V); Constraint 580 , Source: GroupCardinality
(assert axel1); Constraint 581 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 582 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 583 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 584 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 585 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 586 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 587 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 588 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 589 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 590 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 591 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 592 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 593 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 594 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 595 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 596 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 597 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 598 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 599 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 600 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 601 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_2 put-on-sensor_F_3_2) run-axel-test_E_3_3)); Constraint 602 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_2 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_2 run-axel-test_I_3_3)
         (=> run-axel-test_I_3_3 run-axel-test_I_3_2)))); Constraint 603 , Source: formula5.2
(assert (or run-axel-test_I_3_2
    run-axel-test_E_3_2
    run-axel-test_F_3_2
    run-axel-test_U_3_2)); Constraint 604 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_U_3_2))))
      (a!2 (=> run-axel-test_U_3_2
               (and (and (not run-axel-test_I_3_2) (not run-axel-test_E_3_2))
                    (not run-axel-test_F_3_2)))))
  (and (=> run-axel-test_I_3_2
           (and (not run-axel-test_E_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       (=> run-axel-test_E_3_2
           (and (not run-axel-test_I_3_2)
                (not run-axel-test_F_3_2)
                (not run-axel-test_U_3_2)))
       a!1
       a!2))); Constraint 605 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_2); Constraint 606 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_2 run-axel-test_PostCondition_3_2)
    run-axel-test_F_3_3)); Constraint 607 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_2 run-axel-test_U_3_3)
     (=> run-axel-test_U_3_3 run-axel-test_U_3_2))); Constraint 608 , Source: formula5.6
(assert (=> run-axel-test_F_3_2 run-axel-test_F_3_3)); Constraint 609 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_2); Constraint 610 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_2 put-on-sensor_PreCondition_3_2)
    put-on-sensor_E_3_3)); Constraint 611 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_2)
    (and (=> put-on-sensor_I_3_2 put-on-sensor_I_3_3)
         (=> put-on-sensor_I_3_3 put-on-sensor_I_3_2)))); Constraint 612 , Source: formula5.2
(assert (or put-on-sensor_I_3_2
    put-on-sensor_E_3_2
    put-on-sensor_F_3_2
    put-on-sensor_U_3_2)); Constraint 613 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_U_3_2))))
      (a!2 (=> put-on-sensor_U_3_2
               (and (and (not put-on-sensor_I_3_2) (not put-on-sensor_E_3_2))
                    (not put-on-sensor_F_3_2)))))
  (and (=> put-on-sensor_I_3_2
           (and (not put-on-sensor_E_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       (=> put-on-sensor_E_3_2
           (and (not put-on-sensor_I_3_2)
                (not put-on-sensor_F_3_2)
                (not put-on-sensor_U_3_2)))
       a!1
       a!2))); Constraint 614 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_2); Constraint 615 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_2 put-on-sensor_PostCondition_3_2)
    put-on-sensor_F_3_3)); Constraint 616 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_2 put-on-sensor_U_3_3)
     (=> put-on-sensor_U_3_3 put-on-sensor_U_3_2))); Constraint 617 , Source: formula5.6
(assert (=> put-on-sensor_F_3_2 put-on-sensor_F_3_3)); Constraint 618 , Source: formula5.7
(assert axel-test); Constraint 619 , Source: GroupCardinality
(assert axel1); Constraint 620 , Source: GroupCardinality
(assert Virtual-V); Constraint 621 , Source: GroupCardinality
(assert axel1); Constraint 622 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 623 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 624 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 625 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 626 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 627 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 628 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 629 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 630 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 631 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 632 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 633 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 634 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 635 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 636 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 637 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 638 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 639 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 640 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 641 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 642 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 643 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_3 put-on-sensor_F_3_2) run-axel-test_E_3_4)); Constraint 644 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_3 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_3 run-axel-test_I_3_4)
         (=> run-axel-test_I_3_4 run-axel-test_I_3_3)))); Constraint 645 , Source: formula5.2
(assert (or run-axel-test_I_3_3
    run-axel-test_E_3_3
    run-axel-test_F_3_3
    run-axel-test_U_3_3)); Constraint 646 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_3
               (and (and (not run-axel-test_I_3_3) (not run-axel-test_E_3_3))
                    (not run-axel-test_U_3_3))))
      (a!2 (=> run-axel-test_U_3_3
               (and (and (not run-axel-test_I_3_3) (not run-axel-test_E_3_3))
                    (not run-axel-test_F_3_3)))))
  (and (=> run-axel-test_I_3_3
           (and (not run-axel-test_E_3_3)
                (not run-axel-test_F_3_3)
                (not run-axel-test_U_3_3)))
       (=> run-axel-test_E_3_3
           (and (not run-axel-test_I_3_3)
                (not run-axel-test_F_3_3)
                (not run-axel-test_U_3_3)))
       a!1
       a!2))); Constraint 647 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_3); Constraint 648 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_3 run-axel-test_PostCondition_3_3)
    run-axel-test_F_3_4)); Constraint 649 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_3 run-axel-test_U_3_4)
     (=> run-axel-test_U_3_4 run-axel-test_U_3_3))); Constraint 650 , Source: formula5.6
(assert (=> run-axel-test_F_3_3 run-axel-test_F_3_4)); Constraint 651 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_3); Constraint 652 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_3 put-on-sensor_PreCondition_3_3)
    put-on-sensor_E_3_4)); Constraint 653 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_3)
    (and (=> put-on-sensor_I_3_3 put-on-sensor_I_3_4)
         (=> put-on-sensor_I_3_4 put-on-sensor_I_3_3)))); Constraint 654 , Source: formula5.2
(assert (or put-on-sensor_I_3_3
    put-on-sensor_E_3_3
    put-on-sensor_F_3_3
    put-on-sensor_U_3_3)); Constraint 655 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_3
               (and (and (not put-on-sensor_I_3_3) (not put-on-sensor_E_3_3))
                    (not put-on-sensor_U_3_3))))
      (a!2 (=> put-on-sensor_U_3_3
               (and (and (not put-on-sensor_I_3_3) (not put-on-sensor_E_3_3))
                    (not put-on-sensor_F_3_3)))))
  (and (=> put-on-sensor_I_3_3
           (and (not put-on-sensor_E_3_3)
                (not put-on-sensor_F_3_3)
                (not put-on-sensor_U_3_3)))
       (=> put-on-sensor_E_3_3
           (and (not put-on-sensor_I_3_3)
                (not put-on-sensor_F_3_3)
                (not put-on-sensor_U_3_3)))
       a!1
       a!2))); Constraint 656 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_3); Constraint 657 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_3 put-on-sensor_PostCondition_3_3)
    put-on-sensor_F_3_4)); Constraint 658 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_3 put-on-sensor_U_3_4)
     (=> put-on-sensor_U_3_4 put-on-sensor_U_3_3))); Constraint 659 , Source: formula5.6
(assert (=> put-on-sensor_F_3_3 put-on-sensor_F_3_4)); Constraint 660 , Source: formula5.7
(assert axel-test); Constraint 661 , Source: GroupCardinality
(assert axel1); Constraint 662 , Source: GroupCardinality
(assert Virtual-V); Constraint 663 , Source: GroupCardinality
(assert axel1); Constraint 664 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 665 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 666 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 667 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 668 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 669 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 670 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 671 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 672 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 673 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 674 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 675 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 676 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 677 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 678 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 679 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 680 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 681 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 682 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 683 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 684 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 685 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 686 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_4 put-on-sensor_F_3_2) run-axel-test_E_3_5)); Constraint 687 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_4 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_4 run-axel-test_I_3_5)
         (=> run-axel-test_I_3_5 run-axel-test_I_3_4)))); Constraint 688 , Source: formula5.2
(assert (or run-axel-test_I_3_4
    run-axel-test_E_3_4
    run-axel-test_F_3_4
    run-axel-test_U_3_4)); Constraint 689 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_4
               (and (and (not run-axel-test_I_3_4) (not run-axel-test_E_3_4))
                    (not run-axel-test_U_3_4))))
      (a!2 (=> run-axel-test_U_3_4
               (and (and (not run-axel-test_I_3_4) (not run-axel-test_E_3_4))
                    (not run-axel-test_F_3_4)))))
  (and (=> run-axel-test_I_3_4
           (and (not run-axel-test_E_3_4)
                (not run-axel-test_F_3_4)
                (not run-axel-test_U_3_4)))
       (=> run-axel-test_E_3_4
           (and (not run-axel-test_I_3_4)
                (not run-axel-test_F_3_4)
                (not run-axel-test_U_3_4)))
       a!1
       a!2))); Constraint 690 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_4); Constraint 691 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_4 run-axel-test_PostCondition_3_4)
    run-axel-test_F_3_5)); Constraint 692 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_4 run-axel-test_U_3_5)
     (=> run-axel-test_U_3_5 run-axel-test_U_3_4))); Constraint 693 , Source: formula5.6
(assert (=> run-axel-test_F_3_4 run-axel-test_F_3_5)); Constraint 694 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_4); Constraint 695 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_4 put-on-sensor_PreCondition_3_4)
    put-on-sensor_E_3_5)); Constraint 696 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_4)
    (and (=> put-on-sensor_I_3_4 put-on-sensor_I_3_5)
         (=> put-on-sensor_I_3_5 put-on-sensor_I_3_4)))); Constraint 697 , Source: formula5.2
(assert (or put-on-sensor_I_3_4
    put-on-sensor_E_3_4
    put-on-sensor_F_3_4
    put-on-sensor_U_3_4)); Constraint 698 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_4
               (and (and (not put-on-sensor_I_3_4) (not put-on-sensor_E_3_4))
                    (not put-on-sensor_U_3_4))))
      (a!2 (=> put-on-sensor_U_3_4
               (and (and (not put-on-sensor_I_3_4) (not put-on-sensor_E_3_4))
                    (not put-on-sensor_F_3_4)))))
  (and (=> put-on-sensor_I_3_4
           (and (not put-on-sensor_E_3_4)
                (not put-on-sensor_F_3_4)
                (not put-on-sensor_U_3_4)))
       (=> put-on-sensor_E_3_4
           (and (not put-on-sensor_I_3_4)
                (not put-on-sensor_F_3_4)
                (not put-on-sensor_U_3_4)))
       a!1
       a!2))); Constraint 699 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_4); Constraint 700 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_4 put-on-sensor_PostCondition_3_4)
    put-on-sensor_F_3_5)); Constraint 701 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_4 put-on-sensor_U_3_5)
     (=> put-on-sensor_U_3_5 put-on-sensor_U_3_4))); Constraint 702 , Source: formula5.6
(assert (=> put-on-sensor_F_3_4 put-on-sensor_F_3_5)); Constraint 703 , Source: formula5.7
(declare-const run-axel-test_I_3_6 Bool)
(declare-const run-axel-test_E_3_6 Bool)
(declare-const run-axel-test_F_3_6 Bool)
(declare-const run-axel-test_U_3_6 Bool)
(declare-const run-axel-test_PreCondition_3_6 Bool)
(declare-const run-axel-test_PostCondition_3_6 Bool)
(declare-const put-on-sensor_I_3_6 Bool)
(declare-const put-on-sensor_E_3_6 Bool)
(declare-const put-on-sensor_F_3_6 Bool)
(declare-const put-on-sensor_U_3_6 Bool)
(declare-const put-on-sensor_PreCondition_3_6 Bool)
(declare-const put-on-sensor_PostCondition_3_6 Bool)
(declare-const remove-sensor_I_0_5 Bool)
(declare-const remove-sensor_E_0_5 Bool)
(declare-const remove-sensor_F_0_5 Bool)
(declare-const remove-sensor_U_0_5 Bool)
(assert axel-test); Constraint 704 , Source: GroupCardinality
(assert axel1); Constraint 705 , Source: GroupCardinality
(assert Virtual-V); Constraint 706 , Source: GroupCardinality
(assert axel1); Constraint 707 , Source: formula3
(assert (and (=> run-axel-test_I_3_0 Virtual-V)
     (=> Virtual-V run-axel-test_I_3_0)
     (not run-axel-test_E_3_0)
     (not run-axel-test_F_3_0)
     (=> run-axel-test_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) run-axel-test_U_3_0))); Constraint 708 , Source: formula4-ActiveOperations
(assert (and (=> put-on-sensor_I_3_0 Virtual-V)
     (=> Virtual-V put-on-sensor_I_3_0)
     (not put-on-sensor_E_3_0)
     (not put-on-sensor_F_3_0)
     (=> put-on-sensor_U_3_0 (not Virtual-V))
     (=> (not Virtual-V) put-on-sensor_U_3_0))); Constraint 709 , Source: formula4-ActiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 710 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 711 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 712 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 713 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 714 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 715 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 716 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 717 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 718 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 719 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 720 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 721 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 722 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 723 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 724 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 725 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 726 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 727 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 728 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 729 , Source: formula4-InactiveOperations
(assert (and (not remove-sensor_I_0_0)
     (not remove-sensor_E_0_0)
     (not remove-sensor_F_0_0)
     remove-sensor_U_0_0)); Constraint 730 , Source: formula4-InactiveOperations
(assert (=> (and run-axel-test_I_3_5 put-on-sensor_F_3_2) run-axel-test_E_3_6)); Constraint 731 , Source: formula5.1
(assert (=> (not (and run-axel-test_I_3_5 put-on-sensor_F_3_2))
    (and (=> run-axel-test_I_3_5 run-axel-test_I_3_6)
         (=> run-axel-test_I_3_6 run-axel-test_I_3_5)))); Constraint 732 , Source: formula5.2
(assert (or run-axel-test_I_3_5
    run-axel-test_E_3_5
    run-axel-test_F_3_5
    run-axel-test_U_3_5)); Constraint 733 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> run-axel-test_F_3_5
               (and (and (not run-axel-test_I_3_5) (not run-axel-test_E_3_5))
                    (not run-axel-test_U_3_5))))
      (a!2 (=> run-axel-test_U_3_5
               (and (and (not run-axel-test_I_3_5) (not run-axel-test_E_3_5))
                    (not run-axel-test_F_3_5)))))
  (and (=> run-axel-test_I_3_5
           (and (not run-axel-test_E_3_5)
                (not run-axel-test_F_3_5)
                (not run-axel-test_U_3_5)))
       (=> run-axel-test_E_3_5
           (and (not run-axel-test_I_3_5)
                (not run-axel-test_F_3_5)
                (not run-axel-test_U_3_5)))
       a!1
       a!2))); Constraint 734 , Source: formula5.3-Secondpart
(assert run-axel-test_PostCondition_3_5); Constraint 735 , Source: formula5.4-Postcondition
(assert (=> (and run-axel-test_E_3_5 run-axel-test_PostCondition_3_5)
    run-axel-test_F_3_6)); Constraint 736 , Source: formula5.4
(assert (and (=> run-axel-test_U_3_5 run-axel-test_U_3_6)
     (=> run-axel-test_U_3_6 run-axel-test_U_3_5))); Constraint 737 , Source: formula5.6
(assert (=> run-axel-test_F_3_5 run-axel-test_F_3_6)); Constraint 738 , Source: formula5.7
(assert put-on-sensor_PreCondition_3_5); Constraint 739 , Source: formula5-Precondition
(assert (=> (and put-on-sensor_I_3_5 put-on-sensor_PreCondition_3_5)
    put-on-sensor_E_3_6)); Constraint 740 , Source: formula5.1
(assert (=> (not put-on-sensor_I_3_5)
    (and (=> put-on-sensor_I_3_5 put-on-sensor_I_3_6)
         (=> put-on-sensor_I_3_6 put-on-sensor_I_3_5)))); Constraint 741 , Source: formula5.2
(assert (or put-on-sensor_I_3_5
    put-on-sensor_E_3_5
    put-on-sensor_F_3_5
    put-on-sensor_U_3_5)); Constraint 742 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> put-on-sensor_F_3_5
               (and (and (not put-on-sensor_I_3_5) (not put-on-sensor_E_3_5))
                    (not put-on-sensor_U_3_5))))
      (a!2 (=> put-on-sensor_U_3_5
               (and (and (not put-on-sensor_I_3_5) (not put-on-sensor_E_3_5))
                    (not put-on-sensor_F_3_5)))))
  (and (=> put-on-sensor_I_3_5
           (and (not put-on-sensor_E_3_5)
                (not put-on-sensor_F_3_5)
                (not put-on-sensor_U_3_5)))
       (=> put-on-sensor_E_3_5
           (and (not put-on-sensor_I_3_5)
                (not put-on-sensor_F_3_5)
                (not put-on-sensor_U_3_5)))
       a!1
       a!2))); Constraint 743 , Source: formula5.3-Secondpart
(assert put-on-sensor_PostCondition_3_5); Constraint 744 , Source: formula5.4-Postcondition
(assert (=> (and put-on-sensor_E_3_5 put-on-sensor_PostCondition_3_5)
    put-on-sensor_F_3_6)); Constraint 745 , Source: formula5.4
(assert (and (=> put-on-sensor_U_3_5 put-on-sensor_U_3_6)
     (=> put-on-sensor_U_3_6 put-on-sensor_U_3_5))); Constraint 746 , Source: formula5.6
(assert (=> put-on-sensor_F_3_5 put-on-sensor_F_3_6)); Constraint 747 , Source: formula5.7
(assert run-axel-test_PostCondition_3_5); Constraint 748 , Source: formula7-Postcondition
(assert put-on-sensor_PreCondition_3_5); Constraint 749 , Source: formula7-Precondition
(assert put-on-sensor_PostCondition_3_5); Constraint 750 , Source: formula7-Postcondition
(assert (and (or (and (not put-on-sensor_F_3_2) run-axel-test_I_3_5)
         (and (not run-axel-test_PostCondition_3_5) run-axel-test_E_3_5)
         run-axel-test_F_3_5
         run-axel-test_U_3_5)
     (or (and (not put-on-sensor_PreCondition_3_5) put-on-sensor_I_3_5)
         (and (not put-on-sensor_PostCondition_3_5) put-on-sensor_E_3_5)
         put-on-sensor_F_3_5
         put-on-sensor_U_3_5)
     (or run-axel-test_I_3_5
         run-axel-test_E_3_5
         put-on-sensor_I_3_5
         put-on-sensor_E_3_5))); Constraint 751 , Source: overallGoal
