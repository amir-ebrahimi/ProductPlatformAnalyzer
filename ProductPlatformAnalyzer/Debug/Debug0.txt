(declare-const frame-rigid Bool)
(declare-const frame-tractor Bool)
(declare-const scan-barcode_I_1_0 Bool)
(declare-const scan-barcode_E_1_0 Bool)
(declare-const scan-barcode_F_1_0 Bool)
(declare-const scan-barcode_U_1_0 Bool)
(declare-const scan-barcode_PreCondition_1_0 Bool)
(declare-const scan-barcode_PostCondition_1_0 Bool)
(declare-const scan-barcode_I_1_1 Bool)
(declare-const scan-barcode_E_1_1 Bool)
(declare-const scan-barcode_F_1_1 Bool)
(declare-const scan-barcode_U_1_1 Bool)
(declare-const scan-barcode_PreCondition_1_1 Bool)
(declare-const scan-barcode_PostCondition_1_1 Bool)
(declare-const test-frame-rigid_I_1_0 Bool)
(declare-const test-frame-rigid_E_1_0 Bool)
(declare-const test-frame-rigid_F_1_0 Bool)
(declare-const test-frame-rigid_U_1_0 Bool)
(declare-const test-frame-rigid_PreCondition_1_0 Bool)
(declare-const test-frame-rigid_PostCondition_1_0 Bool)
(declare-const test-frame-rigid_I_1_1 Bool)
(declare-const test-frame-rigid_E_1_1 Bool)
(declare-const test-frame-rigid_F_1_1 Bool)
(declare-const test-frame-rigid_U_1_1 Bool)
(declare-const test-frame-rigid_PreCondition_1_1 Bool)
(declare-const test-frame-rigid_PostCondition_1_1 Bool)
(declare-const mount_I_2_0 Bool)
(declare-const mount_E_2_0 Bool)
(declare-const mount_F_2_0 Bool)
(declare-const mount_U_2_0 Bool)
(declare-const mount_PreCondition_2_0 Bool)
(declare-const mount_PostCondition_2_0 Bool)
(declare-const mount_I_2_1 Bool)
(declare-const mount_E_2_1 Bool)
(declare-const mount_F_2_1 Bool)
(declare-const mount_U_2_1 Bool)
(declare-const mount_PreCondition_2_1 Bool)
(declare-const mount_PostCondition_2_1 Bool)
(assert (or (and frame-rigid (not frame-tractor)) (and (not frame-rigid) frame-tractor))); Constraint 1 , Source: GroupCardinality
(assert frame-rigid); Constraint 2 , Source: formula3
(assert (and (=> scan-barcode_I_1_0 frame-rigid)
     (=> frame-rigid scan-barcode_I_1_0)
     (not scan-barcode_E_1_0)
     (not scan-barcode_F_1_0)
     (=> scan-barcode_U_1_0 (not frame-rigid))
     (=> (not frame-rigid) scan-barcode_U_1_0))); Constraint 3 , Source: formula4-ActiveOperations
(assert (and (=> test-frame-rigid_I_1_0 frame-rigid)
     (=> frame-rigid test-frame-rigid_I_1_0)
     (not test-frame-rigid_E_1_0)
     (not test-frame-rigid_F_1_0)
     (=> test-frame-rigid_U_1_0 (not frame-rigid))
     (=> (not frame-rigid) test-frame-rigid_U_1_0))); Constraint 4 , Source: formula4-ActiveOperations
(assert (and (=> mount_I_2_0 frame-tractor)
     (=> frame-tractor mount_I_2_0)
     (not mount_E_2_0)
     (not mount_F_2_0)
     (=> mount_U_2_0 (not frame-tractor))
     (=> (not frame-tractor) mount_U_2_0))); Constraint 5 , Source: formula4-ActiveOperations
(assert (=> (and scan-barcode_I_1_0 mount_F_2_0) scan-barcode_E_1_1)); Constraint 6 , Source: formula5.1
(assert (=> (not (and scan-barcode_I_1_0 mount_F_2_0))
    (and (=> scan-barcode_I_1_0 scan-barcode_I_1_1)
         (=> scan-barcode_I_1_1 scan-barcode_I_1_0)))); Constraint 7 , Source: formula5.2
(assert (or scan-barcode_I_1_0 scan-barcode_E_1_0 scan-barcode_F_1_0 scan-barcode_U_1_0)); Constraint 8 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> scan-barcode_F_1_0
               (and (and (not scan-barcode_I_1_0) (not scan-barcode_E_1_0))
                    (not scan-barcode_U_1_0))))
      (a!2 (=> scan-barcode_U_1_0
               (and (and (not scan-barcode_I_1_0) (not scan-barcode_E_1_0))
                    (not scan-barcode_F_1_0)))))
  (and (=> scan-barcode_I_1_0
           (and (not scan-barcode_E_1_0)
                (not scan-barcode_F_1_0)
                (not scan-barcode_U_1_0)))
       (=> scan-barcode_E_1_0
           (and (not scan-barcode_I_1_0)
                (not scan-barcode_F_1_0)
                (not scan-barcode_U_1_0)))
       a!1
       a!2))); Constraint 9 , Source: formula5.3-Secondpart
(assert (=> (and scan-barcode_E_1_0 mount_F_2_0) scan-barcode_F_1_1)); Constraint 10 , Source: formula5.4
(assert (and (=> scan-barcode_U_1_0 scan-barcode_U_1_1)
     (=> scan-barcode_U_1_1 scan-barcode_U_1_0))); Constraint 11 , Source: formula5.6
(assert (=> scan-barcode_F_1_0 scan-barcode_F_1_1)); Constraint 12 , Source: formula5.7
(assert (not test-frame-rigid_PreCondition_1_0)); Constraint 13 , Source: formula5-Precondition
(assert (=> (and test-frame-rigid_I_1_0 test-frame-rigid_PreCondition_1_0)
    test-frame-rigid_E_1_1)); Constraint 14 , Source: formula5.1
(assert (=> (not (and test-frame-rigid_I_1_0 test-frame-rigid_PreCondition_1_0))
    (and (=> test-frame-rigid_I_1_0 test-frame-rigid_I_1_1)
         (=> test-frame-rigid_I_1_1 test-frame-rigid_I_1_0)))); Constraint 15 , Source: formula5.2
(assert (or test-frame-rigid_I_1_0
    test-frame-rigid_E_1_0
    test-frame-rigid_F_1_0
    test-frame-rigid_U_1_0)); Constraint 16 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> test-frame-rigid_F_1_0
               (and (and (not test-frame-rigid_I_1_0)
                         (not test-frame-rigid_E_1_0))
                    (not test-frame-rigid_U_1_0))))
      (a!2 (=> test-frame-rigid_U_1_0
               (and (and (not test-frame-rigid_I_1_0)
                         (not test-frame-rigid_E_1_0))
                    (not test-frame-rigid_F_1_0)))))
  (and (=> test-frame-rigid_I_1_0
           (and (not test-frame-rigid_E_1_0)
                (not test-frame-rigid_F_1_0)
                (not test-frame-rigid_U_1_0)))
       (=> test-frame-rigid_E_1_0
           (and (not test-frame-rigid_I_1_0)
                (not test-frame-rigid_F_1_0)
                (not test-frame-rigid_U_1_0)))
       a!1
       a!2))); Constraint 17 , Source: formula5.3-Secondpart
(assert (not test-frame-rigid_PostCondition_1_0)); Constraint 18 , Source: formula5.4-Postcondition
(assert (=> (and test-frame-rigid_E_1_0 (not test-frame-rigid_PostCondition_1_0))
    test-frame-rigid_F_1_1)); Constraint 19 , Source: formula5.4
(assert (and (=> test-frame-rigid_U_1_0 test-frame-rigid_U_1_1)
     (=> test-frame-rigid_U_1_1 test-frame-rigid_U_1_0))); Constraint 20 , Source: formula5.6
(assert (=> test-frame-rigid_F_1_0 test-frame-rigid_F_1_1)); Constraint 21 , Source: formula5.7
(assert mount_PreCondition_2_0); Constraint 22 , Source: formula5-Precondition
(assert (=> (and mount_I_2_0 mount_PreCondition_2_0) mount_E_2_1)); Constraint 23 , Source: formula5.1
(assert (=> (not mount_I_2_0)
    (and (=> mount_I_2_0 mount_I_2_1) (=> mount_I_2_1 mount_I_2_0)))); Constraint 24 , Source: formula5.2
(assert (or mount_I_2_0 mount_E_2_0 mount_F_2_0 mount_U_2_0)); Constraint 25 , Source: formula5.3-Firstpart
(assert (let ((a!1 (=> mount_F_2_0
               (and (and (not mount_I_2_0) (not mount_E_2_0)) (not mount_U_2_0))))
      (a!2 (=> mount_U_2_0
               (and (and (not mount_I_2_0) (not mount_E_2_0)) (not mount_F_2_0)))))
  (and (=> mount_I_2_0
           (and (not mount_E_2_0) (not mount_F_2_0) (not mount_U_2_0)))
       (=> mount_E_2_0
           (and (not mount_I_2_0) (not mount_F_2_0) (not mount_U_2_0)))
       a!1
       a!2))); Constraint 26 , Source: formula5.3-Secondpart
(assert mount_PostCondition_2_0); Constraint 27 , Source: formula5.4-Postcondition
(assert (=> (and mount_E_2_0 mount_PostCondition_2_0) mount_F_2_1)); Constraint 28 , Source: formula5.4
(assert (and (=> mount_U_2_0 mount_U_2_1) (=> mount_U_2_1 mount_U_2_0))); Constraint 29 , Source: formula5.6
(assert (=> mount_F_2_0 mount_F_2_1)); Constraint 30 , Source: formula5.7
(declare-const P0 Bool)
(assert (not test-frame-rigid_PreCondition_1_0)); Constraint 31 , Source: formula7-Precondition
(assert (not test-frame-rigid_PostCondition_1_0)); Constraint 32 , Source: formula7-Postcondition
(assert mount_PreCondition_2_0); Constraint 33 , Source: formula7-Precondition
(assert mount_PostCondition_2_0); Constraint 34 , Source: formula7-Postcondition
(assert (let ((a!1 (and (or (and (not mount_F_2_0) scan-barcode_I_1_0)
                    (and (not mount_F_2_0) scan-barcode_E_1_0)
                    scan-barcode_F_1_0
                    scan-barcode_U_1_0)
                (or (and (not test-frame-rigid_PreCondition_1_0)
                         test-frame-rigid_I_1_0)
                    (and (not test-frame-rigid_PostCondition_1_0)
                         test-frame-rigid_E_1_0)
                    test-frame-rigid_F_1_0
                    test-frame-rigid_U_1_0)
                (or (and (not mount_PreCondition_2_0) mount_I_2_0)
                    (and (not mount_PostCondition_2_0) mount_E_2_0)
                    mount_F_2_0
                    mount_U_2_0)
                (or scan-barcode_I_1_0
                    scan-barcode_E_1_0
                    test-frame-rigid_I_1_0
                    test-frame-rigid_E_1_0
                    mount_I_2_0
                    mount_E_2_0))))
  (=> P0 a!1))); Constraint 35 , Source: overallGoal
