<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AMLEngine</name>
    </assembly>
    <members>
        <member name="T:AMLEngineExtensions.ActionExtensions">
            <summary>
            Helper class containing methods for the enumeration of element collections of CAEXObjects
            and calling actions on each child element
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.FirstOrDefaultFromMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Predicate{``0})">
            <summary>
            Enumerate and call predicate on each Object in the Tree (this method performs a
            recursive descent ) until the predicate is true, then it returns with the found element .
            </summary>
            <typeparam name="T">CAEX-Object-Type</typeparam>
            <param name="source">The source.</param>
            <param name="childrenSelector">The children selector.</param>
            <param name="condition">The condition.</param>
            <returns>The first CAEX-Object found, for which the test predicate gives true.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachCAEXBasicObject``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Enumerate and call action on each CAEXBasicObject in the source collection
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">Enumerable source collection</param>
            <param name="action">Action Delegate</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachCAEXBasicObject``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0},System.Predicate{``0})">
            <summary>
            Enumerate and call action on each CAEXBasicObject in the source collection for which a
            given predicate is true
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">Enumerable source collection</param>
            <param name="action">Action Delegate</param>
            <param name="condition">The condition.</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachExternalInterface(CAEX_ClassModel.SystemUnitClassType,System.Action{CAEX_ClassModel.InterfaceClassType})">
            <summary>
            perform an action on each External Interface in the systemunitClass
            </summary>
            <param name="systemUnitClass">the systemUnitClass</param>
            <param name="action">the action</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachInstanceHierarchy(CAEX_ClassModel.CAEXFileType,System.Action{CAEX_ClassModel.InstanceHierarchyType})">
            <summary>
            perform an action on each InstanceHierarchy in the CaexFile
            </summary>
            <param name="caexFile">the caexFile</param>
            <param name="action">the action</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachInterfaceClass(CAEX_ClassModel.InterfaceFamilyType,System.Action{CAEX_ClassModel.InterfaceFamilyType})">
            <summary>
            perform an action on each child-interfaceClass in the interfaceClass
            </summary>
            <param name="interfaceClass">the interfaceClass</param>
            <param name="action">the action</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachInterfaceClassLib(CAEX_ClassModel.CAEXFileType,System.Action{CAEX_ClassModel.InterfaceClassLibType})">
            <summary>
            perform an action on each InterfaceClassLib in the CaexFile
            </summary>
            <param name="caexFile">the caexFile</param>
            <param name="action">the action</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachInternalElement(CAEX_ClassModel.SystemUnitClassType,System.Action{CAEX_ClassModel.InternalElementType})">
            <summary>
            perform an action on each InternalElement Child in the systemunitClass
            </summary>
            <param name="systemUnitClass">the systemUnitClass</param>
            <param name="action">the action</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachRequiredRoleClass(CAEX_ClassModel.InternalElementType,System.Action{CAEX_ClassModel.RoleRequirementsType})">
            <summary>
            perform an action on each RoleRequirement in the internalElement
            </summary>
            <param name="internalElement">the internalElement</param>
            <param name="action">the action</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachRoleClass(CAEX_ClassModel.RoleFamilyType,System.Action{CAEX_ClassModel.RoleFamilyType})">
            <summary>
            perform an action on each RoleClass-Child in the RoleClass
            </summary>
            <param name="roleClass">the RoleClass</param>
            <param name="action">the action</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachRoleClassLib(CAEX_ClassModel.CAEXFileType,System.Action{CAEX_ClassModel.RoleClassLibType})">
            <summary>
            perform an action on each RoleClassLib in the CaexFile
            </summary>
            <param name="caexFile">the caexFile</param>
            <param name="action">the action</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachSupportedRoleClass(CAEX_ClassModel.SystemUnitClassType,System.Action{CAEX_ClassModel.SupportedRoleClassType})">
            <summary>
            perform an action on each supported RoleClass in the systemUnitClass
            </summary>
            <param name="systemUnitClass">the systemUnitClass</param>
            <param name="action">the action</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachSystemUnitClass(CAEX_ClassModel.SystemUnitFamilyType,System.Action{CAEX_ClassModel.SystemUnitFamilyType})">
            <summary>
            perform an action on each SystemUnitClass - Child in the systemUnitClass
            </summary>
            <param name="systemUnitClass">the systemUnitClass</param>
            <param name="action">the action</param>
        </member>
        <member name="M:AMLEngineExtensions.ActionExtensions.ForEachSystemUnitClassLib(CAEX_ClassModel.CAEXFileType,System.Action{CAEX_ClassModel.SystemUnitClassLibType})">
            <summary>
            perform an action on each SystemUnitClassLib in the CaexFile
            </summary>
            <param name="caexFile">the CaexFile</param>
            <param name="action">the action</param>
        </member>
        <member name="T:AMLEngineExtensions.ChangeMode">
            <summary>
            Enumeration of the ChangeMode
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ChangeMode.Empty">
            <summary>
            no ChangeMode is set
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ChangeMode.State">
            <summary>
            State means the CAEXObject has not changed
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ChangeMode.Create">
            <summary>
            Create means that CAEXObject is new
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ChangeMode.Delete">
            <summary>
            Delete means this CAEX object has been deleted in the source tool
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ChangeMode.Change">
            <summary>
            Change means this CAEX object has changed
            </summary>
        </member>
        <member name="T:AMLEngineExtensions.BasicExtensions">
            <summary>
            Helper class containing useful methods for handling aml documents
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.AddInstance(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.CAEXObject)">
            <summary>
            Inserts a new class instance to the parentInternalElement. If there are existing
            instances of the same Type, the Element is inserted after the last Element of that Type.
            Before Insertion, the Uniqueness of the Name among the siblings of that Type is checked.
            </summary>
            <param name="parentInternalElement">
            The Parent-InternalElement
            </param>
            <param name="newInstanceObject">
            The instance of a class to be inserted at the parentInternalElement. The instance can be
            of type InternalElementType or InterfaceClassType
            </param>
            <returns>
            True if insertion was successful, else false (name is not unique or wrong type of newInstanceObject)
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.AddInternalElement(CAEX_ClassModel.InstanceHierarchyType,CAEX_ClassModel.CAEXObject)">
            <summary>
            Add an internalElement to the parentInstanceHierarchy. If there are existing
            internalElements, the Element is inserted after the last Child. Before Insertion, the
            Uniqueness of the Name among the children is checked.
            </summary>
            <param name="instanceHierarchy">
            the InstanceHierarchy
            </param>
            <param name="internalElement">
            The internalElement to be inserted at the parentInternalElement.
            </param>
            <returns>
            True if insertion was successful, else false (name is not unique or wrong type of internalElement)
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.AddNewInternalElement(CAEX_ClassModel.SystemUnitClassType,System.String)">
            <summary>
            Creates a new InternalElement and inserts it after the last InternalElement of the
            parent if the elementName is unique among the childs. The ChangeMode is set to the Value 'Create'
            </summary>
            <param name="parentInternalElement">
            Parent of the new InternalElement
            </param>
            <param name="elementName">
            Name of the new InternalElement
            </param>
            <returns>
            the new InternalElement or null, if the elementName is not unique
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.AddNewInternalElement(CAEX_ClassModel.InstanceHierarchyType,System.String)">
            <summary>
            Creates a new InternalElement and inserts it after the last InternalElement of the
            parent InstanceHierarchy if the elementName is unique among the childs. The ChangeMode
            is set to the Value 'Create'
            </summary>
            <param name="parentInstanceHierarchy">
            Parent InstanceHierarchy of the new InternalElement
            </param>
            <param name="elementName">
            Name of the new InternalElement
            </param>
            <returns>
            the new InternalElement or null, if the elementName is not unique
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.All(CAEX_ClassModel.IObjectWithAttributes)">
            <summary>
            Returns a flat list of all attributes of an object, nested attributes inclusive.
            </summary>
            <param name="obj">
            an object with attributes
            </param>
            <returns>
            List&lt;AttributeType&gt;.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.ClearMetaInformation(CAEX_ClassModel.CAEXFileType)">
            <summary>
            Removes all "Writer Header" specific meta information out of this CAEX file.
            </summary>
            <param name="myCAEXFile">
            the CAEXFile
            </param>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.Clone_Save``1(CAEX_ClassModel.CAEXObject)">
            <summary>
            Clones a CAEX Object.
            </summary>
            <typeparam name="T">
            Type of Object
            </typeparam>
            <param name="obj">
            The object who will be cloned
            </param>
            <returns>
            The clone object
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.DeleteMetaInformation(CAEX_ClassModel.CAEXFileType,System.String)">
            <summary>
            This function deletes any existing meta information corresponding to the writerID.
            </summary>
            <param name="myCAEXFile">
            this CAEX file
            </param>
            <param name="writerID">
            Writer ID
            </param>
            <returns>
            true if delete succeeded, false if writerID has not been found
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetAllFullRolePathNamesForRequiredRoles(CAEX_ClassModel.InternalElementType)">
            <summary>
            Gets all full role path names of the required roles for the given internal element.
            </summary>
            <param name="IE">
            internal element
            </param>
            <returns>
            IEnumerable&lt;System.String&gt;.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetAllFullRolePathNamesForSupportedRoles(CAEX_ClassModel.InternalElementType)">
            <summary>
            Gets all full role path names of the supported roles for the given internal element.
            </summary>
            <param name="IE">
            internal element
            </param>
            <returns>
            IEnumerable&lt;System.String&gt;.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetAllRoleNamesForRequiredRoles(CAEX_ClassModel.InternalElementType)">
            <summary>
            Gets all role names of the required roles for the given internal element.
            </summary>
            <param name="IE">
            internal element
            </param>
            <returns>
            IEnumerable&lt;System.String&gt;.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetAllRoleNamesForSupportedRoles(CAEX_ClassModel.InternalElementType)">
            <summary>
            Gets all role names of the supported roles for the given internal element.
            </summary>
            <param name="IE">
            internal element
            </param>
            <returns>
            IEnumerable&lt;System.String&gt;.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetAttribute(CAEX_ClassModel.IObjectWithAttributes,System.String)">
            <summary>
            Finds an attribute with a given name.
            </summary>
            <param name="objWithAttr">
            object with list of atributes
            </param>
            <param name="attName">
            attribute name
            </param>
            <returns>
            attribute, null if not successful
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetAttribute(CAEX_ClassModel.MemberElement_Attribute,System.String)">
            <summary>
            Finds an attribute with a given name.
            </summary>
            <param name="attrList">
            list of atributes
            </param>
            <param name="attName">
            attribute name
            </param>
            <returns>
            attribute, null if not successful
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetAttributeValue(CAEX_ClassModel.IObjectWithAttributes,System.String)">
            <summary>
            Returns an attribute value of a given attribute name.
            </summary>
            <param name="objWithAttr">
            Object with attributes
            </param>
            <param name="attName">
            name of attribute
            </param>
            <returns>
            attribute value, "" if attribute does not exist
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetAutomationMLVersion(CAEX_ClassModel.CAEXFileType)">
            <summary>
            Returns the AutomationML Version of CAEX-File. This string is automatically be set by
            the AutomationML engine while creating a new CAEX document.
            </summary>
            <param name="caexFile">
            the CAEXFile
            </param>
            <returns>
            the AutomationML version
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetChangeMode(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
            Returns the change mode out of the given CAEXBasicObject.
            </summary>
            <param name="obj">
            Object
            </param>
            <returns>
            ChangeMode
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetClassName(CAEX_ClassModel.InternalElementType)">
            <summary>
            Returns the class name of the given InternalElement.
            </summary>
            <param name="IE">
            internal element
            </param>
            <returns>
            name of the referenced SystemUnitClass without path information, or an empty string if
            not available
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetClassName(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Returns the class name of the given external interface.
            </summary>
            <param name="IC">
            internal element
            </param>
            <returns>
            name of the referenced InterfaceClass without path information, or an empty string if
            not available
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetFullClassName(CAEX_ClassModel.InternalElementType)">
            <summary>
            Returns the class name of the given InternalElement.
            </summary>
            <param name="internalElement">
            internal element
            </param>
            <returns>
            name of the referenced SystemUnitClass with path information, or an empty string if not available
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetFullClassName(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Returns the full class name of the given external interface.        
            </summary>
            <param name="interfaceClass">external interface or interface class</param>
            <returns>name of the referenced InterfaceClass with
            path information, or an empty string if not available</returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetMetaInformation(CAEX_ClassModel.CAEXFileType)">
            <summary>
            This methods returns an Enumeration of all "WriterHeader" meta information out of an
            existing AutomationML file.
            </summary>
            <param name="myCAEXFile">
            the CAEX file
            </param>
            <returns>
            Enumerable with element containing all meta information, or null if no meta information
            is existing
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetWriterHeader(CAEX_ClassModel.CAEXFileType)">
            <summary>
            This methods returns an Enumeration of all "WriterHeader" meta information out of an
            existing AutomationML file.
            </summary>
            <param name="myCAEXFile">
            the CAEX file
            </param>
            <returns>
            Enumerable with element containing all meta information, or null if no meta information
            is existing
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetMetaInformation(CAEX_ClassModel.CAEXFileType,System.String)">
            <summary>
            This function returns the MetaInformation corresponding to the writerID, otherwise null.
            </summary>
            <param name="myCAEXFile">
            this CAEX file
            </param>
            <param name="writerID">
            the writerID
            </param>
            <returns>
            This function returns the MetaInformation corresponding to the writerID, otherwise null.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetMetaObjectInformation(CAEX_ClassModel.CAEXObject)">
            <summary>
            this methods returns the meta information out of an existing AutomationML file for an
            AutomationML Object
            </summary>
            <param name="caexObject">
            the CAEX Object
            </param>
            <returns>
            an enumerable of all meta information, or null if no meta information is existing
            </returns>
            <seealso cref="M:AMLEngineExtensions.BasicExtensions.SetMetaObjectInformation(CAEX_ClassModel.CAEXObject,AMLEngineExtensions.MetaObjectInformation)">
            </seealso>
            <seealso cref="M:AMLEngineExtensions.BasicExtensions.SetMetaObjectInformation(CAEX_ClassModel.CAEXObject,System.String,System.String,System.String)">
            </seealso>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetMetaObjectInformation(CAEX_ClassModel.CAEXObject,System.String)">
             <summary> this methods returns the meta information out of an existing AutomationML file
             for an AutomationML Object and a specific Writer-ID </summary> <param
             name="caexObject">the CAEX object</param> <param name="writerID">the Writer ID to look
             for</param> <returns>an enumerable MetaObjectInformation containing all meta
             information, or null if no meta information exists</returns> <seealso
             cref="M:AMLEngineExtensions.BasicExtensions.SetMetaObjectInformation(CAEX_ClassModel.CAEXObject,AMLEngineExtensions.MetaObjectInformation)"></seealso>
             <seealso cref="M:AMLEngineExtensions.BasicExtensions.SetMetaObjectInformation(CAEX_ClassModel.CAEXObject,System.String,System.String,System.String)"></seealso>
            
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetParent(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
            Enables every CAEXBasicObject to get its parent object as a CAEX_ClassModel class. You
            must cast the result in your own code.
            </summary>
            <param name="obj">
            This object's parent will be returned
            </param>
            <returns>
            The parent AML object (regarding to the AML-XML hierarchie)
            </returns>
            <exception cref="T:System.ArgumentNullException">
            node
            </exception>
            <exception cref="T:System.Xml.XmlException">
            The object has no parent
            </exception>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetRefBaseClassPath(CAEX_ClassModel.RoleClassType)">
            <summary>
            Get the ClassPath of a RoleClass (Inheritance Relation)
            </summary>
            <param name="roleClass">
            Role Class
            </param>
            <returns>
            name of the referenced Class wit path information, or an empty string if not available
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetRefBaseClassPath(CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Get the ClassPath of a SystemUnitClassType (Inheritance Relation)
            </summary>
            <param name="suc">
            SystemUnit Class
            </param>
            <returns>
            name of the referenced Class wit path information, or an empty string if not available
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetRefBaseClassPath(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Get the RefBaseClassPath of the given external interface.
            </summary>
            <param name="IC">
            Interface Class
            </param>
            <returns>
            name of the referenced InterfaceClass wit path information, or an empty string if not available
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetRefBaseSystemUnitPath(CAEX_ClassModel.InternalElementType)">
            <summary>
            Returns the path of the referenced SystemUnitClass with path information, or an empty
            string if not available.
            </summary>
            <param name="IE">
            internal element
            </param>
            <returns>
            returns the path of the referenced SystemUnitClass with path information, or an empty
            string if not available
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.GetRoleName(CAEX_ClassModel.InternalElementType,System.String@,System.String@)">
            <summary>
            Gets the role name of the given internal element.
            </summary>
            <param name="IE">
            internal element
            </param>
            <param name="RefBaseRoleClassPath">
            role path (out)
            </param>
            <param name="RoleName">
            role name (out)
            </param>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.HasColladaInterface(CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Determines whether the specified systemUnitClass has a collada interface.
            </summary>
            <param name="suc">
            The suc.
            </param>
            <returns>
            <c>true</c> if [has collada representation interface] [the specified suc]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.HasPLCOpenInterface(CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Determines whether the specified systemUnitClass has a PLCOpen interface.
            </summary>
            <param name="suc">
            The suc.
            </param>
            <returns>
            <c>true</c> if [has collada representation interface] [the specified suc]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.HasRoleReference(CAEX_ClassModel.InternalElementType,System.String)">
            <summary>
            Checks, if a role reference with the specified value is present in the RoleRequirements or the
            SupportedRoleClasses of the given internal element. Derived roles are not checked here. If derived
            roles should be checked, use <see cref="M:AMLEngineExtensions.BasicExtensions.HasRole(CAEX_ClassModel.InternalElementType,System.String)"/>.
            </summary>
            <param name="IE">
            internal element
            </param>
            <param name="RefBaseRoleClassPath">
            role path (out)
            </param>
            <returns>
            <c>true</c> if [has role reference] [the specified ie]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.HasRole(CAEX_ClassModel.InternalElementType,System.String)">
            <summary>
            Checks, if a role reference or any derived role of the defined reference with the specified value is present in the RoleRequirements or the
            SupportedRoleClasses of the given internal element.
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.RoleReference(CAEX_ClassModel.InternalElementType,System.String)">
            <summary>
            returns the role reference if it is present in the RoleRequirements or the
            SupportedRoleClasses of the given internal element.
            </summary>
            <param name="IE">
            internal element
            </param>
            <param name="RefBaseRoleClassPath">
            role path (out)
            </param>
            <returns>
            <c>true</c> if [has role reference] [the specified ie]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.HasRoleReference(CAEX_ClassModel.SystemUnitClassType,System.String)">
            <summary>
            Checks, if a role reference is present in the
            SupportedRoleClasses of the given systemUnitClass.
            </summary>
            <param name="Suc">
            system unit class
            </param>
            <param name="RefBaseRoleClassPath">
            role path (out)
            </param>
            <returns>
            <c>true</c> if [has role reference] [the specified ie]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.HasRoleReference(CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.RoleClassType)">
            <summary>
            Checks, if a role reference to the RoleClass is present in the
            SupportedRoleClasses of the given systemUnitClass.
            </summary>
            <param name="Suc">
            system unit class
            </param>
            <param name="RoleClass">
            role
            </param>
            <returns>
            <c>true</c> if [has role reference] [the specified ie]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.Name(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
            Get the Name of the specified object.
            </summary>
            <param name="obj">
            The object.
            </param>
            <returns>
            System.String.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.Remove(Altova.Xml.TypeBase)">
            <summary>
            Deletes the object from the AML document.
            </summary>
            <param name="obj">
            The object itself will be removed from the document
            </param>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.RemoveSubElements``1(CAEX_ClassModel.CAEXObject)">
            <summary>
            Removes all InternalElement and ExternalInterface Elements from a SystemUnit Class.
            </summary>
            <typeparam name="T">
            Type of Object
            </typeparam>
            <param name="obj">
            The object whose subElements will be removed
            </param>
            <returns>
            The object whose subElements have been removed
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.Replace``1(CAEX_ClassModel.CAEXObject,CAEX_ClassModel.CAEXObject)">
            <summary>
            Replaces a CaexObject by another CaexObject
            </summary>
            <typeparam name="T">
            Type of Object to be replaced
            </typeparam>
            <param name="obj">
            The object that will be replaced
            </param>
            <param name="newObj">
            The object that will replace the old object
            </param>
            <returns>
            the new replacement object
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.ReplaceMetaInformation(CAEX_ClassModel.CAEXFileType,System.String,AMLEngineExtensions.MetaInformation)">
            <summary>
            This function replaces any existing meta information corresponding to the identical
            oldWriterID with the new meta information defined in the newMetainformation
            </summary>
            <param name="myCAEXFile">
            My caex file.
            </param>
            <param name="oldWriterID">
            writerID of the old meta information
            </param>
            <param name="newMetainformation">
            substitute for the old version of meta information
            </param>
            <returns>
            true if succeded, false if meta information about the oldWriterID is not found
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.SetAutomationMLVersion(CAEX_ClassModel.CAEXFileType,System.String)">
            <summary>
            Allows setting the AutomationML Version of CAEX-File. The version string is
            automatically be set by the AutomationML engine while creating a new CAEX document.
            </summary>
            <param name="caexFile">
            the CAEXFile
            </param>
            <param name="newAutomationMLVersion">
            the new AutomationML version
            </param>
            <returns>
            true if succeeded, false in case of problems
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.SetChangeMode(CAEX_ClassModel.CAEXBasicObject,AMLEngineExtensions.ChangeMode)">
            <summary>
            Sets or removes the change mode of the given CAEXBasicObject.
            </summary>
            <param name="obj">
            the CAEXBasicObject
            </param>
            <param name="cm">
            the ChangeMode
            </param>
            <returns>
            ChangeMode
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.SetMetaInformation(CAEX_ClassModel.CAEXFileType,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This function sets the meta information required from AutomationML standard. If meta
            information about the same writerID already exists, this meta information is replaced.
            These information comprise source information about the AutomationML file.
            </summary>
            <param name="myCAEXFile">
            the CAEXFile
            </param>
            <param name="writerName">
            the name of the writing tool
            </param>
            <param name="writerID">
            an ID of the writing tool
            </param>
            <param name="writerVendor">
            the tool vendors name
            </param>
            <param name="writerVendorURL">
            the tools vendors URL
            </param>
            <param name="writerVersion">
            the version of the writing tool
            </param>
            <param name="writerRelease">
            the release number of the writing tool
            </param>
            <param name="LastWritingDateTime">
            the date of the last writing time
            </param>
            <param name="writerProjectTitle">
            the title of the written project
            </param>
            <param name="writerProjectID">
            an ID of the written project
            </param>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.SetMetaInformation(CAEX_ClassModel.CAEXFileType,AMLEngineExtensions.MetaInformation)">
            <summary>
            This method is a short version of the setMetaInformation. Metadata with identical
            WriterID is replaced.
            </summary>
            <param name="myCAEXFile">
            the CAEXFile
            </param>
            <param name="m">
            the struct MetaInformation
            </param>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.SetMetaInformationStandardAutomationMLLibrary(CAEX_ClassModel.CAEXFileType)">
            <summary>
            This method labels this CAEX file as a standard AutomationML library coming from the
            AutomationML e.V. It removes all other meta information and should only be used from
            authorized persons in agreement with the AutomationML e.V.
            </summary>
            <param name="myCAEXFile">
            the CAEXFile
            </param>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.SetMetaObjectInformation(CAEX_ClassModel.CAEXObject,AMLEngineExtensions.MetaObjectInformation)">
            <summary>
            this method is a short version of the setMetaInformation for any caex object
            </summary>
            <param name="myCAEXObject">
            the CAEXObject
            </param>
            <param name="m">
            the struct MetaObjectInformation
            </param>
            <seealso cref="M:AMLEngineExtensions.BasicExtensions.GetMetaObjectInformation(CAEX_ClassModel.CAEXObject)">
            </seealso>
            <seealso cref="M:AMLEngineExtensions.BasicExtensions.GetMetaObjectInformation(CAEX_ClassModel.CAEXObject,System.String)">
            </seealso>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.SetMetaObjectInformation(CAEX_ClassModel.CAEXObject,System.String,System.String,System.String)">
            <summary>
            this function sets the meta information to store tool specific object-IDs
            </summary>
            <param name="caexObject">
            the CAEXObject
            </param>
            <param name="writerID">
            an ID of the writing tool
            </param>
            <param name="writerProjectID">
            an ID of the writing project
            </param>
            <param name="writerObjectID">
            an ID of the object
            </param>
            <seealso cref="M:AMLEngineExtensions.BasicExtensions.GetMetaObjectInformation(CAEX_ClassModel.CAEXObject)">
            </seealso>
            <seealso cref="M:AMLEngineExtensions.BasicExtensions.GetMetaObjectInformation(CAEX_ClassModel.CAEXObject,System.String)">
            </seealso>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.SetRole(CAEX_ClassModel.InternalElementType,System.String)">
            <summary>
            Sets the role class path of the provided InternalElement.
            </summary>
            <param name="IE">
            internal element
            </param>
            <param name="RefBaseRoleClassPath">
            role path (out)
            </param>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.ChangeModeToString(AMLEngineExtensions.ChangeMode)">
            <summary>
            Changes the mode to string.
            </summary>
            <param name="changeMode">
            The change mode.
            </param>
            <returns>
            System.String.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            changeMode
            </exception>
        </member>
        <member name="M:AMLEngineExtensions.BasicExtensions.StringToChangeMode(System.String)">
            <summary>
            Strings to change mode.
            </summary>
            <param name="changeMode">
            The change mode.
            </param>
            <returns>
            ChangeMode.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            changeMode
            </exception>
        </member>
        <member name="T:AMLEngineExtensions.MetaInformation">
            <summary>
            Struct for modeling meta information as defined in the AutomationML standard
            </summary>
        </member>
        <member name="P:AMLEngineExtensions.MetaInformation.LastWritingDateTime">
            <summary>
            time stamp of the AutomationML export
            </summary>
            <value>
            The last writing date time.
            </value>
        </member>
        <member name="P:AMLEngineExtensions.MetaInformation.WriterID">
            <summary>
            the ID of the writer tool, maybe identical to the tools name if it is not subject of change
            </summary>
            <value>
            The writer identifier.
            </value>
        </member>
        <member name="P:AMLEngineExtensions.MetaInformation.WriterName">
            <summary>
            the name of the writer tool (e.g. CoDeSys)
            </summary>
            <value>
            The name of the writer.
            </value>
        </member>
        <member name="P:AMLEngineExtensions.MetaInformation.WriterProjectID">
            <summary>
            ID of the project that contains the source engineering data
            </summary>
            <value>
            The writer project identifier.
            </value>
        </member>
        <member name="P:AMLEngineExtensions.MetaInformation.WriterProjectTitle">
            <summary>
            name of the project that contains the source engineering data
            </summary>
            <value>
            The writer project title.
            </value>
        </member>
        <member name="P:AMLEngineExtensions.MetaInformation.WriterRelease">
            <summary>
            release information about the writer tool, e.g. "beta12"
            </summary>
            <value>
            The writer release.
            </value>
        </member>
        <member name="P:AMLEngineExtensions.MetaInformation.WriterVendor">
            <summary>
            the vendor of the writer tool, e.g. "3S"
            </summary>
            <value>
            The writer vendor.
            </value>
        </member>
        <member name="P:AMLEngineExtensions.MetaInformation.WriterVendorURL">
            <summary>
            the web URL of the vendor - helps to get in contact to the vendor
            </summary>
            <value>
            The writer vendor URL.
            </value>
        </member>
        <member name="P:AMLEngineExtensions.MetaInformation.WriterVersion">
            <summary>
            version of the writer tool, e.g. "3.4"
            </summary>
            <value>
            The writer version.
            </value>
        </member>
        <member name="T:AMLEngineExtensions.MetaObjectInformation">
            <summary>
            MetaInformation which could be added to any CAEXObject, which holds information about a
            Writer and a Project. This Information should match with a WriterHeader assigned to the CAEXFileType-Node
            </summary>
            <para>
            Methods:
            <seealso cref="M:AMLEngineExtensions.BasicExtensions.SetMetaObjectInformation(CAEX_ClassModel.CAEXObject,AMLEngineExtensions.MetaObjectInformation)">SetMetaObjectInformation</seealso><seealso cref="M:AMLEngineExtensions.BasicExtensions.GetMetaObjectInformation(CAEX_ClassModel.CAEXObject)">GetMetaObjectInformation</seealso><seealso cref="M:AMLEngineExtensions.BasicExtensions.GetMetaObjectInformation(CAEX_ClassModel.CAEXObject,System.String)">GetMetaObjectInformation
            (related to Writer)</seealso>
            </para>
        </member>
        <member name="P:AMLEngineExtensions.MetaObjectInformation.WriterID">
            <summary>
            Writer specific ID - This ID should match with the Writer-ID found in the
            MetaInformation of the CAEXFile
            </summary>
            <value>
            The writer identifier.
            </value>
        </member>
        <member name="P:AMLEngineExtensions.MetaObjectInformation.WriterObjectID">
            <summary>
            Writer specific Object-ID - This ID is a writer specific identifier for the object
            </summary>
            <value>
            The writer object identifier.
            </value>
        </member>
        <member name="P:AMLEngineExtensions.MetaObjectInformation.WriterProjectID">
            <summary>
            Writer specific ProjectID - This ID should match with the WriterProject-ID found in the
            MetaInformation of the CAEXFile
            </summary>
            <value>
            The writer project identifier.
            </value>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions">
            <summary>
            Extensions of the AMLEngine related to files as loading, saving, splitting, merging
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.absoluteAliasInScopeRegex">
            <summary>
            This pattern is used by the merge methods to expand the aliases into fully qualified
            (and normalized) paths.
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.absoluteAliasNotInScopeRegex">
            <summary>
            This pattern is used by the merge methods to expand the aliases into fully qualified
            (and normalized) paths but keeps the alias inside of the reference.
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.aliasRegex">
            <summary>
            regex to split a reference into alias and rest
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.cutPoints">
            <summary>
            The cut points
            </summary>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions.RefHolderWrapper">
            <summary>
            Interface to generalize the access to CAEX elements holding a reference
            </summary>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.RefHolderWrapper.Value">
            <summary>
            The reference string. With read and write access. It needs to provide a write-thru
            into the xml
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefHolderWrapper.InDoc(CAEX_ClassModel.CAEXFileType)">
            <summary>
            Is the target element referenced by Value present in the given doc???? In the check
            we ignore the alias (makes sense ;-) )
            </summary>
            <param name="f">a CAEXFile</param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.AllReferencedPaths(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            get all paths from all external references and the referenced documents
            </summary>
            <param name="rootPath">a string with a root path</param>
            <param name="MergeComments">List of merge results and comments.</param>
            <returns>an Enmeration with all reference pathes</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.CopyAttributesFrom(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.InternalElementType,System.Boolean)">
            <summary>
            copies all attribute of a given InternalElement to the calling InternalElement including
            childs to another object
            </summary>
            <param name="newIE">the target InternalElement</param>
            <param name="oldIE">the source InternalElement</param>
            <param name="includingValues">true if the copy process should include the attrite values, not recommended for classes</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.CopyAttributesFrom(CAEX_ClassModel.RoleClassType,CAEX_ClassModel.RoleClassType,System.Boolean)">
            <summary>
            copies all attribute and nested attributes of a given RoleClass to the calling RoleClass
            to another object
            </summary>
            <param name="newRole">the target Role</param>
            <param name="oldRole">the source Role</param>
            <param name="includingValues">true if the copy process should include the attrite values, not recommended for classes</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.CopyAttributesFrom(CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.SystemUnitClassType,System.Boolean)">
            <summary>
            copies all attribute including nested attributes of a given SystemUnitClass to the
            calling SystemUnitClass to another object
            </summary>
            <param name="newSUC">the target SystemUnitClass</param>
            <param name="oldSUC">the source SystemUnitClass</param>
            <param name="includingValues">true if the copy process should include the attrite values, not recommended for classes</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.CopyAttributesFrom(CAEX_ClassModel.InterfaceClassType,CAEX_ClassModel.InterfaceClassType,System.Boolean)">
            <summary>
            copies all attribute and nested attributes of a given InterfaceClass to the calling
            InterfaceClass to another object
            </summary>
            <param name="newInterfaceClassType">the target InterfaceClassType</param>
            <param name="oldInterfaceClassType">the source InterfaceClassType</param>
            <param name="includingValues">true if the copy process should include the attrite values, not recommended for classes</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.CopyDataFromInternalElement(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.InternalElementType,System.Boolean,System.Boolean)">
            <summary>
            This function copies all attributes, the role class reference, SUC class reference and
            description from the sourc InternalElement of a given InternalElement to the calling InternalElement
            </summary>
            <param name="newIE">the target InternalElement</param>
            <param name="oldIE">the source InternalElement</param>
            <param name="includingValues">true if the copy process should include the attrite values, not recommended for classes</param>
            <param name="includingID">true if the copy process should include the ID's, not recommended for instances</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.DisposeCutPoints(CAEX_ClassModel.CAEXDocument)">
            <summary>
            Free internal data structures.
            </summary>
            <param name="doc">the CAEX document</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.GetAllInternalElementIDs(CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Returns a list of all internal element IDs from all child internal elements (recursive)
            </summary>
            <param name="systemUnitClass">Root IE</param>
            <returns>List of all IDs (as strings)</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.GetAllInternalElements(CAEX_ClassModel.CAEXFileType)">
            <summary>
            Returns an Enumerable of all internal elements in a CAEXFile from all Instance
            Hierarchies and all SystemUnitClass Libraries
            </summary>
            <param name="caexFile">Caex File</param>
            <returns>List of all IEs</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.GetAllInternalElements(CAEX_ClassModel.SystemUnitClassLibType)">
            <summary>
            Returns an Enumerable of all internal elements in a SystemUnit ClassLib
            </summary>
            <param name="sucLibrary">The suc library.</param>
            <returns>IEnumerable&lt;InternalElementType&gt;.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.GetAllInternalElements(CAEX_ClassModel.InstanceHierarchyType)">
            <summary>
            Returns an Enumerable of all internal elements in an Instance Hierarchy
            </summary>
            <param name="instanceHierarchy">The instance hierarchy.</param>
            <returns>IEnumerable&lt;InternalElementType&gt;.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.GetAllInternalElements(CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Returns an Enumerable of all internal elements below a given system Unit Class element (recursive)
            </summary>
            <param name="systemUnitClass">Root IE</param>
            <returns>List of all IEs</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.GetAllInternalLinks(CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Get all internal links from an internal element and all child internal elements (recursive)
            </summary>
            <param name="systemUnitClass">Root IE to start</param>
            <returns>List of all internal links found</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.GetFileNamePath(CAEX_ClassModel.CAEXDocument)">
            <summary>
            Retrieves the file name including full path out of the CAEX document.
            </summary>
            <param name="doc">a CAEXDocument</param>
            <returns>the file name including full path of the CAEX document</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.GetIDFromReference(System.String)">
            <summary>
            Get the ID part of a reference attribute.
            </summary>
            <param name="reference">the reference,e.g. "part@{123-123-123-123}:MyInterface"</param>
            <returns>The id or an empty string</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.Import_ExternalInterface(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Importing an ExternalInterface from another document context. Unlike method
            Insert_ExternalInterface(..) ExternalInterfaces that are coming from other files can be inserted.
            </summary>
            <param name="ie">The InternalElementType (this) to import to.</param>
            <param name="interfaceElem">The Interface to import.</param>
            <returns>InterfaceClassType.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.Import_ExternalReference(CAEX_ClassModel.CAEXFileType,CAEX_ClassModel.ExternalReferenceType)">
            <summary>
            Importing an InstanceHierarchy from another document context. Unlike method
            Insert_InstanceHierarchy(..) InstanceHierarchies that are coming from other files can be inserted.
            </summary>
            <param name="file">The CAEXFile (this) to import to.</param>
            <param name="extRef">The InstanceHierarchy to import.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.Import_InstanceHierarchy(CAEX_ClassModel.CAEXFileType,CAEX_ClassModel.InstanceHierarchyType)">
            <summary>
            Importing an InternalElement from another document context. Unlike method
            Insert_InternalElement(..) InternalElements that are coming from other files can be inserted.
            </summary>
            <param name="file">The CAEXFile (this) to import to.</param>
            <param name="instHier">The InternalElement to import.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.Import_InternalElement(CAEX_ClassModel.InstanceHierarchyType,CAEX_ClassModel.InternalElementType)">
            <summary>
            Importing an InternalElement from another document context. Unlike method
            Insert_InternalElement(..) InternalElements that are coming from other files can be inserted.
            </summary>
            <param name="instHier">The InstanceHierarchyType (this) to import to.</param>
            <param name="intElem">The InternalElement to import.</param>
            <returns>InternalElementType.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.Import_InternalElement(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.InternalElementType,System.Boolean)">
            <summary>
            Importing an InternalElement from another document context. Unlike method
            Insert_InternalElement(..) InternalElements that are coming from other files can be inserted.
            </summary>
            <param name="ie">The InternalElementeType (this) to import to.</param>
            <param name="intElem">The InternalElement to import.</param>
            <param name="asFirst">if set to <c>true</c> [as first].</param>
            <returns>InternalElementType.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.Insert_ExternalReference(CAEX_ClassModel.CAEXFileType,CAEX_ClassModel.ExternalReferenceType)">
            <summary>
            Insert an existing InstanceHierarchy.
            </summary>
            <param name="file">The CAEXFile (this) to import to.</param>
            <param name="extRef">The ExternalReference to insert</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.Insert_InstanceHierarchy(CAEX_ClassModel.CAEXFileType,CAEX_ClassModel.InstanceHierarchyType)">
            <summary>
            Insert an existing InstanceHierarchy.
            </summary>
            <param name="file">The CAEXFile (this) to import to.</param>
            <param name="instHier">The InstanceHierarchy to insert</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.MakeExternalReferencesRelative(CAEX_ClassModel.CAEXDocument)">
            <summary>
            makes all absolute pathes of external reference relative
            </summary>
            <param name="doc">the CAEXDocument</param>
            <exception cref="T:System.ArgumentException">Unable to get the documents path</exception>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.MakeExternalReferencesRelative(CAEX_ClassModel.CAEXDocument,System.String)">
            <summary>
            makes all absolute pathes of external reference relative
            </summary>
            <param name="doc">the CAEXDocument</param>
            <param name="docPath">the document path</param>
            <exception cref="T:System.ArgumentException">Unable to get the documents path</exception>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.Merge(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.List{System.String}@)">
            <summary>
            Merge an aml document with a set of other documents. Resolves mirror objects, imports
            libraries and cleans up the external references
            </summary>
            <param name="rootDocPath">The root document as the target for the merge</param>
            <param name="amlFilePathsToMerge">The absolute file paths to the parts to merge into the root document</param>
            <param name="MergeComments">List of merge results and comments.</param>
            <returns>True if there was something to merge.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.Merge(CAEX_ClassModel.CAEXDocument,System.Collections.Generic.List{System.String}@)">
            <summary>
            Tries to get the absolute path of an CAEX doc and than merges all referenced AMLs into
            one. The path is examined by looking at
            1. The xml document properties
            2. The CAEXFile - FileName attribute
            </summary>
            <param name="doc">a CAEXDocument</param>
            <param name="MergeComments">List of merge results and comments.</param>
            <returns>True if there was something to merge, false if not.</returns>
            <exception cref="T:System.ArgumentException">Can not get absolute file name</exception>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.MergeAll(System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Takes one aml document, resolves the external references, merges them into one and makes
            it self sufficient.
            </summary>
            <param name="rootDocPath">a string with a root doc path</param>
            <param name="MergeComments">List of merge results and comments.</param>
            <returns>True if there was something to merge.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.MergeAll(CAEX_ClassModel.CAEXDocument,System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            Takes one aml document, resolves the external references, merges them into one and makes
            it self sufficient.
            </summary>
            <param name="doc">the CAEXDocument</param>
            <param name="rootDocPath">a string with a root doc path</param>
            <param name="MergeComments">List of merge results and comments.</param>
            <returns>True if there was something to merge.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RemoveSplitPoint(CAEX_ClassModel.CAEXObject)">
            <summary>
            Remove a split point defined for this object.
            </summary>
            <param name="cObj">(this) The CAEXObject where a split point should be removed.</param>
            <returns>True if not an error.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.SaveSplitModelParts(CAEX_ClassModel.CAEXDocument,System.String,System.Boolean,System.Boolean)">
            <summary>
            Split a model at defined split points, insert the appropriate ExternalReferences and
            proxy objects, save each of the parts split off and the remainder separately to file,
            and re-merge the parts split off for further processing as a whole, removing unneeded
            ExternalReferences again. Returns true if no error occurs.
            </summary>
            <param name="doc">(this) The document to split into parts.</param>
            <param name="filePath">The path where to store the remainder after splitting off at defined split points.</param>
            <param name="saveLibraries">If true, libraries that have split points defined will be split off and saved, too.</param>
            <param name="prettyPrint">If true, indent the XML output.</param>
            <returns>True if not an error.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.SaveSplitModelParts(CAEX_ClassModel.CAEXDocument,System.String,System.Boolean,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Split a model at defined split points, insert the appropriate ExternalReferences and
            proxy objects, save each of the parts split off and the remainder separately to file,
            and re-merge the parts split off for further processing as a whole, removing unneeded
            ExternalReferences again.
            </summary>
            <param name="doc">(this) The document to split into parts.</param>
            <param name="filePath">The path where to store the remainder after splitting off at defined split points.</param>
            <param name="saveLibraries">If true, libraries that have split points defined will be split off and saved, too.</param>
            <param name="prettyPrint">If true, indent the XML output.</param>
            <param name="otherAMLFilesToCheckForConsistencies">Stringlist of other CAEX files that shall be included into the merge procedure.</param>
            <returns>True iff not an error.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.SetSplitPoint(CAEX_ClassModel.InternalElementType,System.String,System.String)">
            <summary>
            Record a split point for this object. Will be split off and written to file only by SaveSplitModelParts().
            </summary>
            <param name="IE">(this) The InternalElement defining the split point.</param>
            <param name="filePath">The path where to store the objects at and below the split point.</param>
            <param name="alias">The alias to use for references into the part split off.</param>
            <returns>True if not an error.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.SetSplitPoint(CAEX_ClassModel.InstanceHierarchyType,System.String,System.String)">
            <summary>
            Record a split point for this object. Returns true if succeeded. Only allowed for
            objects of type InstanceHierarchy, InternalElement, SystemUnitClassLib,
            InterfaceClassLib, RoleClassLib. Will be split off and written to file only by SaveSplitModelParts().
            </summary>
            <param name="IH">(this) The InstanceHierarchy defining the split point.</param>
            <param name="filePath">The path where to store the objects at and below the split point.</param>
            <param name="alias">The alias to use for references into the part split off.</param>
            <returns>True if not an error.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.SetSplitPoint(CAEX_ClassModel.SystemUnitClassLibType,System.String,System.String)">
            <summary>
            Record a split point for this object. Returns true if succeeded. Only allowed for
            objects of type InstanceHierarchy, InternalElement, SystemUnitClassLib,
            InterfaceClassLib, RoleClassLib. Will be split off and written to file only by SaveSplitModelParts().
            </summary>
            <param name="SUCL">(this) The SystemUnitClassLib defining the split point.</param>
            <param name="filePath">The path where to store the objects at and below the split point.</param>
            <param name="alias">The alias to use for references into the part split off.</param>
            <returns>True if not an error.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.SetSplitPoint(CAEX_ClassModel.InterfaceClassLibType,System.String,System.String)">
            <summary>
            Record a split point for this object. Returns true if succeeded. Only allowed for
            objects of type InstanceHierarchy, InternalElement, SystemUnitClassLib,
            InterfaceClassLib, RoleClassLib. Will be split off and written to file only by SaveSplitModelParts().
            </summary>
            <param name="IFCL">(this) The InterfaceClassLib defining the split point.</param>
            <param name="filePath">The path where to store the objects at and below the split point.</param>
            <param name="alias">The alias to use for references into the part split off.</param>
            <returns>True if not an error.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.SetSplitPoint(CAEX_ClassModel.RoleClassLibType,System.String,System.String)">
            <summary>
            Record a split point for this object. Returns true if succeeded. Only allowed for
            objects of type InstanceHierarchy, InternalElement, SystemUnitClassLib,
            InterfaceClassLib, RoleClassLib. Will be split off and written to file only by SaveSplitModelParts().
            </summary>
            <param name="RCLT">(this) The RoleClassLib defining the split point.</param>
            <param name="filePath">The path where to store the objects at and below the split point.</param>
            <param name="alias">The alias to use for references into the part split off.</param>
            <returns>True if not an error.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.SetSplitPointIfPossible(CAEX_ClassModel.CAEXObject,System.String,System.String)">
            <summary>
            Record a split point for this object. Returns true if succeeded. Only allowed for
            objects of type InstanceHierarchy, InternalElement, SystemUnitClassLib,
            InterfaceClassLib, RoleClassLib. Will be split off and written to file only by SaveSplitModelParts().
            </summary>
            <param name="cObj">(this) The CAEXObject defining the split point.</param>
            <param name="filePath">The path where to store the objects at and below the split point.</param>
            <param name="alias">The alias to use for references into the part split off.</param>
            <returns>True if not an error.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.AllReferencedPaths(System.String,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.List{System.String}@)">
            <summary>
            Gets all referenced paths from the external references of the caex document
            </summary>
            <param name="docPath">The document path.</param>
            <param name="paths">The paths.</param>
            <param name="MergeComments">The merge comments.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.DeepCopyAttributes(CAEX_ClassModel.AttributeType,CAEX_ClassModel.IObjectWithAttributes,System.Boolean)">
            <summary>
            performs a copy of attrites and nested attributes
            </summary>
            <param name="oldAttr">object containing the source attributes</param>
            <param name="newAtt">target object</param>
            <param name="includingValues">if true, values are included into copy procedure, not recommended for classes</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.getAliasFromReference(System.String)">
            <summary>
            Get the alias from an aml reference string. Returns "" if no alias is present.
            </summary>
            <param name="reference">The reference to parse</param>
            <returns>The alias</returns>
            <example>
            string alias=getAliasFromReference("myAlias@{1234-12312-1231}:Interface");
            -- &gt; alias== "myAlias"
            </example>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.getEverythingWithoutAliasFromReference(System.String)">
            <summary>
            parse an aml reference string and return everything except the alias and the '@' sign
            </summary>
            <param name="reference">an aml reference string</param>
            <returns>a processed reference</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.handleInternalLinkFromThirdAML(AMLEngineExtensions.ExternalizationExtensions.DocWithPath,System.Collections.Generic.List{AMLEngineExtensions.ExternalizationExtensions.DocWithPath},AMLEngineExtensions.ExternalizationExtensions.DocWithPath,AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide)">
            <summary>
            Handle one reference inside an external aml file
            </summary>
            <param name="origDoc">Remaining document of the original</param>
            <param name="createdDocs">Documents created in this split-action</param>
            <param name="doc">The external document</param>
            <param name="linkRef">The reference to adjust</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.handleInternalLinkInsideSplit(AMLEngineExtensions.ExternalizationExtensions.DocWithPath,System.Collections.Generic.List{AMLEngineExtensions.ExternalizationExtensions.DocWithPath},AMLEngineExtensions.ExternalizationExtensions.DocWithPath,AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide)">
            <summary>
            Handle one reference inside an splitted ("externalized") aml file
            </summary>
            <param name="origDoc">Remaining document of the original</param>
            <param name="createdDocs">Documents created in this split-action</param>
            <param name="doc">The splitted document</param>
            <param name="linkRef">The reference to adjust</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.handleInternalLinkReferenceInOrig(AMLEngineExtensions.ExternalizationExtensions.DocWithPath,AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide,System.Collections.Generic.List{AMLEngineExtensions.ExternalizationExtensions.DocWithPath})">
            <summary>
            Handle one reference inside the remaining aml file
            </summary>
            <param name="origDoc">Remaining document of the original</param>
            <param name="linkRef">The reference to adjust</param>
            <param name="createdDocs">Documents created in this split-action</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.handleRefInCreated(AMLEngineExtensions.ExternalizationExtensions.DocWithPath,AMLEngineExtensions.ExternalizationExtensions.DocWithPath,System.Collections.Generic.List{AMLEngineExtensions.ExternalizationExtensions.DocWithPath},AMLEngineExtensions.ExternalizationExtensions.RefHolderWrapper)">
            <summary>
            repairs a reference in a document that has been created during a split
            </summary>
            <param name="origDoc">a DocWithPath object containing the CAEXDocument</param>
            <param name="thisDoc">a DocWithPath object containing this CAEXDocument</param>
            <param name="createdDocs">a List of DocWithPath objects</param>
            <param name="ie">a RefHolderWrapper object</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.handleRefInOrig(AMLEngineExtensions.ExternalizationExtensions.DocWithPath,System.Collections.Generic.List{AMLEngineExtensions.ExternalizationExtensions.DocWithPath},AMLEngineExtensions.ExternalizationExtensions.RefHolderWrapper)">
            <summary>
            Handle a reference in the original document, so that it references the correct file
            </summary>
            <param name="origDoc">object containing the CAEXDocument</param>
            <param name="createdDocs">object containing the new created CAEXDocument</param>
            <param name="ie">a RefHolderWrapper object</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.IntegrateIFC(CAEX_ClassModel.InterfaceFamilyType,CAEX_ClassModel.InterfaceClassLibType)">
            <summary>
            Integrates the ifc.
            </summary>
            <param name="ifcToIntegrate">The ifc to integrate.</param>
            <param name="listToIntegrateInto">The list to integrate into.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.IntegrateIFC(CAEX_ClassModel.InterfaceFamilyType,CAEX_ClassModel.InterfaceFamilyType)">
            <summary>
            Integrates the ifc.
            </summary>
            <param name="ifcToIntegrate">The ifc to integrate.</param>
            <param name="listToIntegrateInto">The list to integrate into.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.IntegrateRC(CAEX_ClassModel.RoleFamilyType,CAEX_ClassModel.RoleClassLibType)">
            <summary>
            Integrates the rc.
            </summary>
            <param name="rcToIntegrate">The rc to integrate.</param>
            <param name="listToIntegrateInto">The list to integrate into.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.IntegrateRC(CAEX_ClassModel.RoleFamilyType,CAEX_ClassModel.RoleFamilyType)">
            <summary>
            Integrates the rc.
            </summary>
            <param name="rcToIntegrate">The rc to integrate.</param>
            <param name="listToIntegrateInto">The list to integrate into.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.IntegrateSUC(CAEX_ClassModel.SystemUnitFamilyType,CAEX_ClassModel.SystemUnitClassLibType)">
            <summary>
            Integrates the suc.
            </summary>
            <param name="sucToIntegrate">The suc to integrate.</param>
            <param name="listToIntegrateInto">The list to integrate into.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.IntegrateSUC(CAEX_ClassModel.SystemUnitFamilyType,CAEX_ClassModel.SystemUnitFamilyType)">
            <summary>
            Integrates the suc.
            </summary>
            <param name="sucToIntegrate">The suc to integrate.</param>
            <param name="listToIntegrateInto">The list to integrate into.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.IsChildOfXmlNodeName(CAEX_ClassModel.CAEXBasicObject,System.String)">
            <summary>
            Determines whether [is child of XML node name] [the specified object].
            </summary>
            <param name="obj">The object.</param>
            <param name="parentNodeNameTest">The parent node name test.</param>
            <returns><c>true</c> if [is child of XML node name] [the specified object]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.isReferenceWithAlias(System.String)">
            <summary>
            Returns true if an aml reference string contains an alias. (return reference.Contains("@");)
            </summary>
            <param name="reference">Reference to check</param>
            <returns>True if an alias is found</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.makeRelativeFilePath(System.String,System.String)">
            <summary>
            creates a relative file path by subtracting a base directory from an absolute path
            </summary>
            <param name="filePath">a string with a file path</param>
            <param name="newBase">a string representing the base</param>
            <returns>a string with a relative path</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.Merge(CAEX_ClassModel.CAEXDocument,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Collections.Generic.List{System.String}@)">
            <summary>
            Merge an aml document with a set of other documents. Resolves mirror objects, imports
            libraries and cleans up the external references
            </summary>
            <param name="rootCaexDoc">The root document as the target for the merge</param>
            <param name="rootDocPath">The root document path as the target for the merge</param>
            <param name="amlFilePathsToMerge">The absolute file paths to the parts to merge into the root document</param>
            <param name="saveResult">if true, the merge result doc is saved in the given path</param>
            <param name="MergeComments">List of merge results and comments.</param>
            <returns>True if there was something to merge.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.MergeIFCL(CAEX_ClassModel.CAEXDocument,CAEX_ClassModel.InterfaceClassLibType)">
            <summary>
            Merges the ifcl.
            </summary>
            <param name="doc">The document.</param>
            <param name="ifcl">The ifcl.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.MergeRCL(CAEX_ClassModel.CAEXDocument,CAEX_ClassModel.RoleClassLibType)">
            <summary>
            Merges the RCL.
            </summary>
            <param name="doc">The document.</param>
            <param name="rcl">The RCL.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.MergeSCL(CAEX_ClassModel.CAEXDocument,CAEX_ClassModel.SystemUnitClassLibType)">
            <summary>
            Merges the SCL.
            </summary>
            <param name="doc">The document.</param>
            <param name="sucl">The sucl.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.normalizeFilePath(System.String)">
            <summary>
            Normalizes a file path, so it is comparable
            </summary>
            <param name="absolutePath">a string containing an absolute path</param>
            <returns>a string with a normalized file path</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.normalizeFilePath(System.String,System.String)">
            <summary>
            Normalizes a file path and resolves relative paths
            </summary>
            <param name="baseDirectoryPath">a string with the base directory path</param>
            <param name="relativePath">a string with a relative path</param>
            <returns>a normalized file path string</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RepairLinksInFiles(CAEX_ClassModel.CAEXDocument,System.String,System.Collections.Generic.List{AMLEngineExtensions.ExternalizationExtensions.DocWithPath},System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Repairs the InternalLinks in the remaining document, the splitted parts (the resulting
            documents) and referenced documents.
            </summary>
            <param name="remainingDoc">The source document - the splitted parts</param>
            <param name="remainingDocPath">The path of the remaining doc</param>
            <param name="createdDocs">List of all created documents</param>
            <param name="prettyPrint">make it look nice?</param>
            <param name="externalDocsToCheckConsistencies">List of external documents to adjust links that point in the original document</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.ResolveAliases(AMLEngineExtensions.ExternalizationExtensions.DocWithPath,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Replaces all references containing aliases with fully qualified references (internal syntax)
            </summary>
            <param name="doc">a DocWithPath object</param>
            <param name="amlFilePathsToMerge">an Enumeration of string with CAEX file pathes that should be merged</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.SplitModel(CAEX_ClassModel.CAEXDocument,AMLEngineExtensions.ExternalizationExtensions.SplitPoint[],System.Boolean,System.Boolean,System.Collections.Generic.List{AMLEngineExtensions.ExternalizationExtensions.DocWithPath}@)">
            <summary>
            Store subtrees in files as indicated in the cut points.
            </summary>
            <param name="doc">The root object containing the subtrees to save.</param>
            <param name="cutPoints">The cut points indicating the subtrees to save in files.</param>
            <param name="saveLibraries">if false, libraries are removed.</param>
            <param name="prettyPrint">Use indentation in the output if true.</param>
            <param name="createdDocs">List of created documents including pathes.</param>
            <returns>CAEXObject[].</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.SplitModel(CAEX_ClassModel.CAEXObject,CAEX_ClassModel.CAEXDocument,System.String,System.Boolean,System.String,AMLEngineExtensions.ExternalizationExtensions.DocWithPath@)">
            <summary>
            Split off a subtree and store in a file.
            </summary>
            <param name="cutObject">The object (this) at which to split off a subtree.</param>
            <param name="doc">The root object where to add an ExternalReference for the split off subtree.</param>
            <param name="path">The path the file where to store the subtree split off.</param>
            <param name="prettyPrint">Use indentation in the output if true.</param>
            <param name="alias">The alias to use in the ExternalReference and the remaining part.</param>
            <param name="createdAML">Returns a touple with the splitted CAEX document and the path it was saved to</param>
            <returns>CAEXObject.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.UpdateExternalReferences(CAEX_ClassModel.CAEXFileType,CAEX_ClassModel.CAEXFileType)">
            <summary>
            Update ExternalReferences to include only those actually needed. Target may be the same
            as source.
            </summary>
            <param name="targetDoc">Where to update ExternalReferences</param>
            <param name="sourceDoc">Where to take ExternalReferences from for a given alias</param>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions.CutPointComparer">
            <summary>
            Class CutPointComparer.
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.CutPointComparer.Equals(AMLEngineExtensions.ExternalizationExtensions.SplitPoint,AMLEngineExtensions.ExternalizationExtensions.SplitPoint)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type T to compare.</param>
            <param name="y">The second object of type T to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.CutPointComparer.GetHashCode(AMLEngineExtensions.ExternalizationExtensions.SplitPoint)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> for which a hash code is to be returned.</param>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data
            structures like a hash table.</returns>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions.DocWithPath">
            <summary>
            Helper class for the adjustment of internal links and other reference stuff. Works with
            lazy evaluation, only the path is mandatory.
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.Alias">
            <summary>
            The alias used in at least one aml file. We try to reuse it.
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.Path">
            <summary>
            Path of the document
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.WasChanged">
            <summary>
            The was changed
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.aliasToPathMap">
            <summary>
            The alias to path map
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.allInternalElements">
            <summary>
            All internal elements
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.allReferences">
            <summary>
            All references
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.doc">
            <summary>
            The loaded CAEX document, or null if not loaded yet
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.internalElementIDs">
            <summary>
            The internal element i ds
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.internalLinks">
            <summary>
            The internal links
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.pathToAliasMap">
            <summary>
            The path to alias map
            </summary>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.AliasToPathMap">
            <summary>
            Gets the alias to path map.
            </summary>
            <value>The alias to path map.</value>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.AllInternalElements">
            <summary>
            Gets all internal elements.
            </summary>
            <value>All internal elements.</value>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.AllReferences">
            <summary>
            All Reference holder elements, we wrap them to get a common interface
            </summary>
            <value>All references.</value>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.Doc">
            <summary>
            The document content as an lazy loaded CAEXDocument
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.InternalElementIDs">
            <summary>
            All internal element IDs of this document, lazy loaded, cached, hashed
            </summary>
            <value>The internal element i ds.</value>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.InternalLinks">
            <summary>
            All internal-Links of this document, lazy loaded, cached
            </summary>
            <value>The internal links.</value>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.PathToAliasMap">
            <summary>
            path to alias map. Path must be absolute and normalized
            </summary>
            <value>The path to alias map.</value>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.AddReference(System.String,System.String)">
            <summary>
            Adds an ExternalReference to the CAEXFile. It tries to use the alias, but may use
            another one, since it is already used or the file is referenced with another alias.
            </summary>
            <param name="alias">The alias for the new reference</param>
            <param name="path">The path for the reference</param>
            <returns>The used alias</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.ClearCache">
            <summary>
            Clears all caches for lazy "re"evaluation
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.RemoveAllExternalReferences">
            <summary>
            removes all external references from the document
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.Save(System.Boolean)">
            <summary>
            Saves the specified pretty print.
            </summary>
            <param name="prettyPrint">if set to <c>true</c> [pretty print].</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.createReferenceMaps">
            <summary>
            Creates the reference maps.
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.GetAllInternalElementIDs(System.Collections.Generic.List{CAEX_ClassModel.InternalElementType})">
            <summary>
            Gets all internal element i ds.
            </summary>
            <param name="AllInternalElements">All internal elements.</param>
            <returns>IEnumerable&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.DocWithPath.GetAllInternalLinks(System.Collections.Generic.List{CAEX_ClassModel.InternalElementType})">
            <summary>
            Gets all internal links.
            </summary>
            <param name="AllInternalElements">All internal elements.</param>
            <returns>IEnumerable&lt;InternalLinkType&gt;.</returns>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions.LibRef">
            <summary>
            Class LibRef.
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.LibRef.refObjectPath">
            <summary>
            The reference object path
            </summary>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions.LibRefComparer">
            <summary>
            Class LibRefComparer.
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.LibRefComparer.Equals(AMLEngineExtensions.ExternalizationExtensions.LibRef,AMLEngineExtensions.ExternalizationExtensions.LibRef)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type T to compare.</param>
            <param name="y">The second object of type T to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.LibRefComparer.GetHashCode(AMLEngineExtensions.ExternalizationExtensions.LibRef)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> for which a hash code is to be returned.</param>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data
            structures like a hash table.</returns>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide">
            <summary>
            Generalize CAEX object "InternalLinkType" to handle it as an element holding a reference. Works with both,, RefPartnerSideA and RefPartnerSideB.
            Details:
            <see>RefHolderWrapper</see>
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide.sideA">
            <summary>
            The side a
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide.sideB">
            <summary>
            The side b
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide.#ctor(CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideA)">
            <summary>
            Initializes a new instance of the <see cref="T:AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide" /> class.
            </summary>
            <param name="a">A.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide.#ctor(CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideB)">
            <summary>
            Initializes a new instance of the <see cref="T:AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide" /> class.
            </summary>
            <param name="b">The b.</param>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide.Value">
            <summary>
            The reference string. With read and write access. It needs to provide a write-thru
            into the xml
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.OneReferenceSide.InDoc(CAEX_ClassModel.CAEXFileType)">
            <summary>
            Is the target element referenced by Value present in the given doc???? In the check
            we ignore the alias (makes sense ;-) )
            </summary>
            <param name="f">a CAEXFile</param>
            <returns>a boolean value</returns>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper">
            <summary>
            Wrapper for several elements that can have a RefBaseClassPath to generalize the access
            to "my@Reference"
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.b">
            <summary>
            The b
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.c">
            <summary>
            The c
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.d">
            <summary>
            The d
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.e">
            <summary>
            The e
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.f">
            <summary>
            The f
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.g">
            <summary>
            The g
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.#ctor(CAEX_ClassModel.SystemUnitFamilyType)">
            <summary>
            Initializes a new instance of the <see cref="T:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper" /> class.
            </summary>
            <param name="a">A.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.#ctor(CAEX_ClassModel.RoleClassType)">
            <summary>
            Initializes a new instance of the <see cref="T:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper" /> class.
            </summary>
            <param name="a">A.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.#ctor(CAEX_ClassModel.RoleFamilyType)">
            <summary>
            Initializes a new instance of the <see cref="T:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper" /> class.
            </summary>
            <param name="a">A.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.#ctor(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Initializes a new instance of the <see cref="T:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper" /> class.
            </summary>
            <param name="a">A.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.#ctor(CAEX_ClassModel.InterfaceFamilyType)">
            <summary>
            Initializes a new instance of the <see cref="T:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper" /> class.
            </summary>
            <param name="a">A.</param>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.#ctor(CAEX_ClassModel.ExternalInterfaceType)">
            <summary>
            Initializes a new instance of the <see cref="T:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper" /> class.
            </summary>
            <param name="a">A.</param>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.Value">
            <summary>
            The reference string. With read and write access. It needs to provide a write-thru into the xml
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefBaseClassPathHolderWrapper.InDoc(CAEX_ClassModel.CAEXFileType)">
            <summary>
            Is the target element referenced by Value present in the given doc???? In the check
            we ignore the alias (makes sense ;-) )
            </summary>
            <param name="f">a CAEXFile</param>
            <returns>a boolean value</returns>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions.RefBaseRoleClassPathForRoleReq">
            <summary>
            Class RefBaseRoleClassPathForRoleReq.
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.RefBaseRoleClassPathForRoleReq.obj">
            <summary>
            The object
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefBaseRoleClassPathForRoleReq.#ctor(CAEX_ClassModel.RoleRequirementsType)">
            <summary>
            Initializes a new instance of the <see cref="T:AMLEngineExtensions.ExternalizationExtensions.RefBaseRoleClassPathForRoleReq" /> class.
            </summary>
            <param name="toWrap">To wrap.</param>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.RefBaseRoleClassPathForRoleReq.Value">
            <summary>
            The reference string. With read and write access. It needs to provide a write-thru
            into the xml
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefBaseRoleClassPathForRoleReq.InDoc(CAEX_ClassModel.CAEXFileType)">
            <summary>
            Is the target element referenced by Value present in the given doc???? In the check
            we ignore the alias (makes sense ;-) )
            </summary>
            <param name="f">a CAEXFile</param>
            <returns>a boolean value</returns>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions.RefBaseSystemUnitPathForIE">
            <summary>
            Wrapper for &lt;InternalElement RefBaseSystemUnitPath="my@Reference" /&gt; to generalize
            the access to "my@Reference"
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.RefBaseSystemUnitPathForIE.obj">
            <summary>
            The object
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefBaseSystemUnitPathForIE.#ctor(CAEX_ClassModel.InternalElementType)">
            <summary>
            Initializes a new instance of the <see cref="T:AMLEngineExtensions.ExternalizationExtensions.RefBaseSystemUnitPathForIE" /> class.
            </summary>
            <param name="toWrap">To wrap.</param>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.RefBaseSystemUnitPathForIE.Element">
            <summary>
            Gets the element.
            </summary>
            <value>The element.</value>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.RefBaseSystemUnitPathForIE.Value">
            <summary>
            The reference string. With read and write access. It needs to provide a write-thru
            into the xml
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefBaseSystemUnitPathForIE.InDoc(CAEX_ClassModel.CAEXFileType)">
            <summary>
            Is the target of the mirror is present? if not, look for the library path
            </summary>
            <param name="f">the CAEXFile</param>
            <returns>a boolean value</returns>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions.RefRoleClassPathForSupportedRoleClass">
            <summary>
            Wrapper for &lt;SupportedRoleClass RefRoleClassPath="my@Reference" /&gt; to generalize
            the access to "my@Reference"
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.RefRoleClassPathForSupportedRoleClass.obj">
            <summary>
            The object
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefRoleClassPathForSupportedRoleClass.#ctor(CAEX_ClassModel.SupportedRoleClassType)">
            <summary>
            Initializes a new instance of the
            <see cref="T:AMLEngineExtensions.ExternalizationExtensions.RefRoleClassPathForSupportedRoleClass" /> class.
            </summary>
            <param name="toWrap">To wrap.</param>
        </member>
        <member name="P:AMLEngineExtensions.ExternalizationExtensions.RefRoleClassPathForSupportedRoleClass.Value">
            <summary>
            The reference string. With read and write access. It needs to provide a write-thru
            into the xml
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:AMLEngineExtensions.ExternalizationExtensions.RefRoleClassPathForSupportedRoleClass.InDoc(CAEX_ClassModel.CAEXFileType)">
            <summary>
            Is the target element referenced by Value present in the given doc???? In the check
            we ignore the alias (makes sense ;-) )
            </summary>
            <param name="f">a CAEXFile</param>
            <returns>a boolean value</returns>
        </member>
        <member name="T:AMLEngineExtensions.ExternalizationExtensions.SplitPoint">
            <summary>
            Class SplitPoint.
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.SplitPoint.alias">
            <summary>
            The alias
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.SplitPoint.cutObjectPath">
            <summary>
            The cut object path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.ExternalizationExtensions.SplitPoint.filePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="T:AMLEngineExtensions.MappingExtension">
            <summary>
            Specific Extensions for Mappings
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.MappingExtension.AutomationMLPropertySetRoleClassReference">
            <summary>
            the Reference for the standard PropertySet RoleClass in AutomationML
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.MappingExtension.FindCaexObjectByName(System.Collections.IEnumerable,System.String)">
            <summary>
            Find a Caex-Object by Name in the provided Collection of CAEXObjects
            </summary>
            <param name="caexObjectCollection">The caex object collection.</param>
            <param name="name">The name.</param>
            <returns>The System.Boolean.</returns>
            <exception cref="T:System.ArgumentException">Value of input parameter name should not be null or empty</exception>
        </member>
        <member name="M:AMLEngineExtensions.MappingExtension.GetAllInternalElementsDeep(CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Gets all Internal Elements of a SystemUnitClass and its SubElements
            </summary>
            <param name="systemUnitClass">the system Unit Class, which is scanned deep for all Internal Elements</param>
            <returns>The System.Collections.Generic.IEnumerable`1[T - &gt; CAEX_ClassModel.InternalElementType].</returns>
        </member>
        <member name="M:AMLEngineExtensions.MappingExtension.GetAllPropertySetElementsDeep(CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Get all InternalElements of the SystemUnitClass, which are PropertySets, regardless of
            there nesting level
            </summary>
            <param name="systemUnitClass">a SystemUnitClass</param>
            <returns>Enumerator for the PropertySets of the SystemUnitClass</returns>
        </member>
        <member name="M:AMLEngineExtensions.MappingExtension.GetOwnAndDerivedAttributes(CAEX_ClassModel.IObjectWithAttributes)">
            <summary>
            Get all Attributes of the CAEXObjects, including all own and derived attributes
            </summary>
            <param name="objectWithAttributes">a CaexObject which implements the IObjectWithAttributes Interface</param>
            <returns>Enumerator for the all Attributes of the SystemUnitClass (own and derived)</returns>
        </member>
        <member name="M:AMLEngineExtensions.MappingExtension.HasMappingToSystemUnitAttribute(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.AttributeType)">
            <summary>
            An InternalElement is searched for a MappingObject, which has an AttributeNameMapping
            with a SystemUnitAttributeName, which is equal to the name of the input attribute
            </summary>
            <param name="internalElement">the InternalElement which is searched for a mappingObject</param>
            <param name="attribute">the input Attribute for which a matching AttributeNameMapping is searched</param>
            <returns>true, if a matching AttributeNameMapping is found</returns>
            <exception cref="T:System.ArgumentNullException">attribute</exception>
            <exception cref="T:System.ArgumentException">attribute input parameter has no value for name</exception>
        </member>
        <member name="M:AMLEngineExtensions.MappingExtension.InternalElementDirectlyMappsToSystemUnitClass(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Test, if an InternalElements RoleRequirement ist directly supported from any
            SupportedRole of the SystemUnitClass
            </summary>
            <param name="internalElement">The InternalElement which should be mapped on a SystemUnitClass</param>
            <param name="systemUnitClass">The SystemUnitClass, which is tested as a Mapping Candidate</param>
            <returns>The System.Boolean.</returns>
            <exception cref="T:System.ArgumentNullException">systemUnitClass</exception>
        </member>
        <member name="M:AMLEngineExtensions.MappingExtension.InternalElementMappsToSystemUnitClassWithAncestorRole(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.SupportedRoleClassType@)">
            <summary>
            Test, if an InternalElements RoleRequirement is supported from any SupportedRole of the
            SystemUnitClass and the SupportedRole is an Ancestor of the Required Role. The returned
            result is the Ancestor Generation of the Supported Role (-1=no Ancestor, 0=Identical,
            1=Parent, 2=GrandParent, ...)
            </summary>
            <param name="internalElement">The InternalElement which should be mapped on a SystemUnitClass</param>
            <param name="systemUnitClass">The SystemUnitClass, which is tested as a Mapping Candidate</param>
            <param name="supportedRole">The SupportedRole of the SystemUnitClass, which is the nearest generation to the
            required role</param>
            <returns>Ancestor Generation</returns>
            <exception cref="T:System.ArgumentNullException">systemUnitClass</exception>
        </member>
        <member name="M:AMLEngineExtensions.MappingExtension.IsPropertySetElement(CAEX_ClassModel.InternalElementType)">
            <summary>
            An InternalElement is checked, whether its required role is derived from the
            AutomationML PropertySet RoleClass. This RoleClass is identified via its Path which
            should be <see cref="F:AMLEngineExtensions.MappingExtension.AutomationMLPropertySetRoleClassReference" />
            </summary>
            <param name="internalElement">An Internal Element</param>
            <returns>true, if the Internal Elements required Role is derived from the AutomationML
            BaseRoleClass "PropertySet"; false otherwise</returns>
        </member>
        <member name="M:AMLEngineExtensions.MappingExtension.IsPropertySetRoleClass(CAEX_ClassModel.RoleFamilyType)">
            <summary>
            This Methods tests. if a role class is derived from the AutomationMLBaseRoleClass - PropertySet.
            </summary>
            <param name="roleClass">Testcandidate role Class</param>
            <returns>true, if it is a PropertySet</returns>
        </member>
        <member name="M:AMLEngineExtensions.MappingExtension.PropertySetAttributeMapping(CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.AttributeType)">
            <summary>
            This Extension Methods performs a search on the systemUnitClass and its elements for any
            InternalElement with an assigned PropertySet and an assigned MappingObject and
            AttributeNameMapping, which has a SystemUnitAttributeName, which maps to the Name of the
            input attribute. It returns the InternalElement Object, if it is found, otherwise the
            result is null
            </summary>
            <param name="systemUnitClass">The SystemUnitClass to which the input attribute belongs to</param>
            <param name="attribute">The input attribute for which an attribute Name Mapping is searched</param>
            <returns>The InternalElement which has the matching AttributeNameMapping for the input attribute
            or null if not found</returns>
            <exception cref="T:System.ArgumentNullException">attribute</exception>
            <exception cref="T:System.ArgumentException">attribute input parameter has no value for name</exception>
        </member>
        <member name="M:AMLEngineExtensions.MappingExtension.RoleRequirementIsSupportedBySystemUnitClass(CAEX_ClassModel.RoleRequirementsType,CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Test, if RoleRequirement ist directly supported from any SupportedRole of the SystemUnitClass
            </summary>
            <param name="roleRequirement">The RoleRequirement to Test</param>
            <param name="systemUnitClass">The SystemUnitClass, which supported RoleClasses are Tested</param>
            <returns>The System.Boolean.</returns>
            <exception cref="T:System.ArgumentNullException">systemUnitClass</exception>
        </member>
        <member name="T:AMLEngineExtensions.NavigationExtensions">
            <summary>
            Navigation related extensions of the AMLEngine
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.CAEXType(System.Xml.XmlNode)">
            <summary>
            get CAEXType for an XML node
            </summary>
            <param name="node">
            The node.
            </param>
            <returns>
            Type
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.CreateCAEXWrapper``1(System.Xml.XmlNode)">
            <summary>
            Creates a CAEX_ClassModel object from an XmlNode when the correct target data type is provided.
            </summary>
            <typeparam name="T">
            The CAEX_ClassModel class of the expected result
            </typeparam>
            <param name="node">
            The node.
            </param>
            <returns>
            The parent AML object (regarding to the AML-XML hierarchy)
            </returns>
            <exception cref="T:System.ArgumentException">
            Don't know how to wrap XML node of type + node.Name;node or Argument type, +
            typeof(T).FullName + , is not same as type of XML node, + caexTypes[node.Name];node or
            </exception>
            <exception cref="T:System.ArgumentNullException">
            node
            </exception>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.CreateCAEXWrapper(System.Xml.XmlNode)">
            <summary>
            creates CAEX object out of an XML node
            </summary>
            <param name="node">
            The node.
            </param>
            <returns>
            CAEXBasicObject
            </returns>
            <exception cref="T:System.ArgumentException">
            Don't know how to wrap XML node of type + caexTypes[node.Name];node or
            </exception>
            <exception cref="T:System.ArgumentNullException">
            node
            </exception>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.FindByID``1(CAEX_ClassModel.CAEXBasicObject,System.String)">
            <summary>
            Searches an object starting from the given CAEXBasicObject that has the given ID, the
            expected type must be given in angle brackets.
            </summary>
            <typeparam name="T">
            The target type
            </typeparam>
            <param name="obj">
            The parent object. Only children of this object are considered
            </param>
            <param name="guid">
            The ID to search for
            </param>
            <returns>
            The found object from type T or null if none is found
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.FindByID(CAEX_ClassModel.CAEXBasicObject,System.String)">
            <summary>
            Searches an object starting from the given CAEXBasicObject that has the given ID, the
            expected type must be casted in the source code. This search bases on XPath and is slow.
            </summary>
            <param name="obj">
            The parent object. Only children of this object are considered
            </param>
            <param name="guid">
            The ID to search for
            </param>
            <returns>
            The found object from type T or null if none is found
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.FindByXPath``1(CAEX_ClassModel.CAEXFileType,System.String)">
            <summary>
            Searches an object in the whole document that has the given Path. The search bases on
            XPath and is slow. For speed optimization, use FindFastByPath instead. If your CAEX file
            has changed, update the hash tables before using this function using
            updateCAEXObjectHashLists before.
            </summary>
            <typeparam name="T">
            The target type
            </typeparam>
            <param name="caexFile">
            The root of the AML file
            </param>
            <param name="path">
            The absolute path to an object
            </param>
            <returns>
            The object if found, null if not
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.FindByXPath(CAEX_ClassModel.CAEXFileType,System.String)">
            <summary>
            Searches a CAEXBasicObject from the given path.
            The search bases on XPath and is slow. For speed optimization, use FindFastByPath instead.
            If your CAEX file has changed, update the hash tables before using this function using updateCAEXObjectHashLists before.
            </summary>
            <param name="caexFile">The root of the AML file</param>
            <param name="path">The absolute path to an object</param>
            <returns>The object if found, null if not</returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.FindByXPath``1(CAEX_ClassModel.CAEXBasicObject,System.String)">
            <summary>
            Searches a CAEXBasicObject from the given xPath, the type must be given in angle
            brackets. The search bases on XPath and is slow. For speed optimization, use
            FindFastByPath instead. If your CAEX file has changed, update the hash tables before
            using this function using updateCAEXObjectHashLists before.
            </summary>
            <typeparam name="T">
            The target type
            </typeparam>
            <param name="obj">
            The root of the AML subtree to search
            </param>
            <param name="xPath">
            The search path, e.g. "unit/PLC/signal/interface
            </param>
            <returns>
            The object if found, null if not
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.FindByXPath(CAEX_ClassModel.CAEXBasicObject,System.String)">
            <summary>
            Searches a CAEXBasicObject from the given xPath, you must cast the returned
            CAEXBasicObject into the type you expect. The search bases on XPath and is slow. For
            speed optimization, use FindFastByPath instead. If your CAEX file has changed, update
            the hash tables before using this function using updateCAEXObjectHashLists before.
            </summary>
            <param name="obj">
            The root of the AML subtree to search
            </param>
            <param name="xPath">
            The search path
            </param>
            <returns>
            The object if found, null if not
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.FindFastByPath(CAEX_ClassModel.CAEXObject,CAEX_ClassModel.CAEXFileType,System.String)">
            <summary>
            Performs a document wide fast search and returns a CAEXObject given by its ID. It is
            fast due to hash table support. If your CAEX file has changed, update the hash tables
            before using this function using updateCAEXObjectHashLists before.
            </summary>
            <param name="cObj">
            the parent CAEXObject calling the method, not the parent object of the search
            </param>
            <param name="myCAEXFile">
            the CAEX file
            </param>
            <param name="Path">
            the path ob the object which is subject of the search
            </param>
            <returns>
            the found CAEXObject or null if not found
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.FindFastByPath(CAEX_ClassModel.CAEXFileType,CAEX_ClassModel.CAEXObject,System.String)">
            <summary>
            Performs a document wide fast search and returns a CAEXObject given by its ID. It is
            fast due to hash table support. If your CAEX file has changed, update the hash tables
            before using this function using updateCAEXObjectHashLists before.
            </summary>
            <param name="myCAEXFile">
            the CAEX file
            </param>
            <param name="cObj">
            the parent CAEXObject calling the method, not the parent object of the search
            </param>
            <param name="Path">
            the path ob the object which is subject of the search
            </param>
            <returns>
            the found CAEXObject or null if not found
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.GetAllLibraryClasses(CAEX_ClassModel.CAEXObject,System.Collections.Generic.List{CAEX_ClassModel.CAEXObject})">
            <summary>
            Get all library classes withing a given Library object or CAEX-Class Object
            </summary>
            <param name="obj">
            the member element CAEXObject, either SystemUnitClassLib, RoleClassLib or InterfaceClassLib
            </param>
            <param name="ClassesList">
            the list of classes to be returned.
            </param>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.GetAllParentInternalElements(CAEX_ClassModel.CAEXObject)">
            <summary>
            Gets all parents in correct order from root parent element to obj excluding the element itself.
            </summary>
            <param name="obj">
            The object to get the parents from.
            </param>
            <returns>
            Sorted list from root to element with parents in between.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.GetAncestors``1(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
            Gets all Ancestors in the Hierarchy of the specified Caex-Object, which are of Type T
            </summary>
            <typeparam name="T">
            Ancestor Type
            </typeparam>
            <param name="obj">
            The object.
            </param>
            <returns>
            IEnumerable&lt;T&gt;.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.GetClassLibrary``1(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
            Enables every CAEXBasicObject, to get its class Library. You must specify the type of
            the ClassLibrary-Type that you expect.
            </summary>
            <typeparam name="T">
            The ClassLibrary-Type of the expected Library
            </typeparam>
            <param name="obj">
            This object's Library will be returned
            </param>
            <returns>
            The ClassLibrary which contains the object
            </returns>
            <exception cref="T:System.ArgumentNullException">
            node
            </exception>
            <exception cref="T:System.ArgumentException">
            The object is not attached to an XmlNode
            </exception>
            <exception cref="T:System.Xml.XmlException">
            The object has no parent
            </exception>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.GetInternalElementsAndExternalInterfaces(CAEX_ClassModel.CAEXObject,System.Collections.Generic.List{CAEX_ClassModel.CAEXObject})">
            <summary>
            Get all internal elements and interfaces of the given CAEXObject as flat list
            </summary>
            <param name="obj">
            the member element CAEXObject, either internal element or external interface
            </param>
            <param name="IesAndIfs">
            the list to be returned.
            </param>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.GetLibraryOfCaexObject(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
            Gets the library of any caex object.
            </summary>
            <param name="obj">
            The object.
            </param>
            <returns>
            The Library CAEX Object, which contains the object.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.GetParent``1(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
            Enables every CAEXBasicObject to get its parent object as a CAEX_ClassModel class. You
            must specify the type of the CAEX_ClassModel type that you exspect.
            </summary>
            <typeparam name="T">
            The CAEX_ClassModel class of the expected parent
            </typeparam>
            <param name="obj">
            This object's parent will be returned
            </param>
            <returns>
            The parent AML object (regarding to the AML-XML hierarchie)
            </returns>
            <exception cref="T:System.ArgumentNullException">
            node
            </exception>
            <exception cref="T:System.ArgumentException">
            The object is not attached to an XmlNode
            </exception>
            <exception cref="T:System.Xml.XmlException">
            The object has no parent
            </exception>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.GetParentNodeName(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
            Returns the AML node name of the parent
            </summary>
            <param name="obj">
            The child AML object
            </param>
            <returns>
            The AML node name or an empty string in case of an error
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.OwnerDocument(Altova.Xml.TypeBase)">
            <summary>
            returns a CAEXDocument of an XML node
            </summary>
            <param name="elem">
            XML element
            </param>
            <returns>
            CAEXDocument
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.PostorderTraversal``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Non Recursive Function for Postorder Traversal of an Element Tree
            </summary>
            <typeparam name="TSource">
            Type of the CAEXObject
            </typeparam>
            <param name="source">
            The collection to Traverse
            </param>
            <param name="childSelector">
            Function to select children
            </param>
            <returns>
            the nodes of the tree in postorder sequence
            </returns>
            <example>
            This sample shows how to call the Method to parse an Instance Hierachy
            <code>
             foreach
            (InternalElementType element in
            InstanceHierchy.InternalElement.Cast&lt;InternalElementType&gt;().PostorderTraversal
            (element =&gt; element.InternalElement.Cast&lt;InternalElementType&gt;())) { Do Something }
            </code>
            </example>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.PreorderTraversal``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Non Recursive Function for Preorder Traversal of an Element Tree.
            </summary>
            <typeparam name="TSource">
            Type of the CAEXObject
            </typeparam>
            <param name="source">
            The collection to Traverse
            </param>
            <param name="childSelector">
            Function to select children
            </param>
            <returns>
            the nodes of the tree in Preorder sequence
            </returns>
            <example>
            This sample shows how to call the Method to parse an Instance Hierachy
            <code>
             foreach
            (InternalElementType element in
            InstanceHierchy.InternalElement.Cast&lt;InternalElementType&gt;().PreorderTraversal
            (element =&gt; element.InternalElement.Cast&lt;InternalElementType&gt;())) { // Do
            Something }
            </code>
            </example>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.CreateAllCAEXObjectWrapper(CAEX_ClassModel.CAEXFileType)">
            <summary>
            Creates all caex object wrapper.
            </summary>
            <param name="caex">
            The caex.
            </param>
            <returns>
            IEnumerable&lt;CAEXBasicObject&gt;.
            </returns>
        </member>
        <member name="M:AMLEngineExtensions.NavigationExtensions.CreateAllCAEXObjectWrapper(System.Xml.XmlNode)">
            <summary>
            Creates all caex object wrapper.
            </summary>
            <param name="node">
            The node.
            </param>
            <returns>
            IEnumerable&lt;CAEXBasicObject&gt;.
            </returns>
        </member>
        <member name="T:AMLEngineExtensions.SpecificExtensions">
            <summary>
            Specific extensions of the AMLEngine
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.All(CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib)">
            <summary>
            provides the CAEXDocument.RoleClassLib as IEnumerable
            </summary>
            <param name="obj">the member element RoleClassLib, e.g. CAEXDocument.RoleClassLib</param>
            <returns>the IENumerable</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.All(CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib)">
            <summary>
            provides the CAEXDocument.SystemUnitClassLib as IEnumerable
            </summary>
            <param name="obj">the member element SystemUnitClassLib, e.g. CAEXDocument.RoleClassLib</param>
            <returns>the IENumerable</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.All(CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib)">
            <summary>
            provides the CAEXDocument.InterfaceClassLib as IEnumerable
            </summary>
            <param name="obj">the member element InterfaceClassLib, e.g. CAEXDocument.InterfaceClassLib</param>
            <returns>the IENumerable</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.All(CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference)">
            <summary>
            provides the CAEXDocument.ExternalReference as IEnumerable
            </summary>
            <param name="obj">the member element ExternalReference, e.g. CAEXDocument.ExternalReference</param>
            <returns>the IENumerable</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.AppendCorrect(CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy)">
            <summary>
            Append done right.... takes care of the position in the aml file
            </summary>
            <param name="instanceHierarchy">Same access facade as for the old Append()</param>
            <returns>the new instance hierarchie</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.GetAuthorName(CAEX_ClassModel.RevisionType)">
            <summary>
            returns the AuthorName of the current Revision object
            </summary>
            <param name="revision">the Revision object</param>
            <returns>the AuthorName value</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.GetComment(CAEX_ClassModel.RevisionType)">
            <summary>
            returns the Comment of the current Revision object
            </summary>
            <param name="revision">the Revision object</param>
            <returns>the Comment value</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.GetNewVersion(CAEX_ClassModel.RevisionType)">
            <summary>
            returns the NewVersion of the current Revision object
            </summary>
            <param name="revision">the Revision object</param>
            <returns>the NewVersion value</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.GetOldVersion(CAEX_ClassModel.RevisionType)">
            <summary>
            returns the OldVersion of the current Revision object
            </summary>
            <param name="revision">the Revision object</param>
            <returns>the OldVersion value</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.GetRevisionDate(CAEX_ClassModel.RevisionType)">
            <summary>
            returns the RevisionDate of the current Revision object
            </summary>
            <param name="revision">the Revision object</param>
            <returns>the RevisionDate value</returns>
            <exception cref="T:System.ArgumentException">The mandatory element RevisionDate is missing</exception>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.GetValue(CAEX_ClassModel.RevisionType.MemberElement_OldVersion)">
            <summary>
            returns the OldVersion.value of the provided revision object
            </summary>
            <param name="obj">the OldVersion object</param>
            <returns>the value of the old version, "" if not found</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.GetValue(CAEX_ClassModel.RevisionType.MemberElement_NewVersion)">
            <summary>
            returns the NewVersion.value of the provided revision object
            </summary>
            <param name="obj">the NewVersion object</param>
            <returns>the value of the new version, "" if not found</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.GetValue(CAEX_ClassModel.RevisionType.MemberElement_Comment)">
            <summary>
            returns the Comment of the provided revision object
            </summary>
            <param name="obj">the Comment object</param>
            <returns>the value of the comment, "" if not found</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.New_Revision(CAEX_ClassModel.CAEXBasicObject,System.DateTime,System.String,System.Boolean)">
            <summary>
            Creates a new Revision object including dataTime and AuthorName
            </summary>
            <param name="obj">a CAEXBasicObject</param>
            <param name="dateTime">the Revision date and time</param>
            <param name="authorName">the authors name</param>
            <param name="asFirst">if <c>true</c>, the revision is prepended to any existing revisions, otherwise it's appended</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.SetAuthorName(CAEX_ClassModel.RevisionType,System.String)">
            <summary>
            Sets the AuthorName of the current Revision object
            </summary>
            <param name="revision">the Revision object</param>
            <param name="s">the AuthorName string</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.SetComment(CAEX_ClassModel.RevisionType,System.String)">
            <summary>
            Sets the Comment of the current Revision object
            </summary>
            <param name="revision">the Revision object</param>
            <param name="s">the Comment string</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.SetNewVersion(CAEX_ClassModel.RevisionType,System.String)">
            <summary>
            Sets the NewVersion of the current Revision object
            </summary>
            <param name="revision">the Revision object</param>
            <param name="s">the NewVersion string</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.SetOldVersion(CAEX_ClassModel.RevisionType,System.String)">
            <summary>
            Sets the OldVersion of the current Revision object
            </summary>
            <param name="revision">the Revision object</param>
            <param name="s">the OldVersion string</param>
            <returns>the OldVersion value</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.SetRevisionDate(CAEX_ClassModel.RevisionType,System.DateTime)">
            <summary>
            Sets the RevisionDate of the current Revision object
            </summary>
            <param name="revision">the Revision object</param>
            <param name="revDate">the RevisionDate of type DateTime</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.SetValue(CAEX_ClassModel.RevisionType.MemberElement_OldVersion,System.String)">
            <summary>
            sets the OldVersion.value of the provided revision object
            </summary>
            <param name="obj">the OldVersion object</param>
            <param name="value">the desired OldVersion value</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.SetValue(CAEX_ClassModel.RevisionType.MemberElement_NewVersion,System.String)">
            <summary>
            sets the NewVersion.value of the provided revision object
            </summary>
            <param name="obj">the NewVersion object</param>
            <param name="value">the NewVersion value</param>
            <returns>nothing</returns>
        </member>
        <member name="M:AMLEngineExtensions.SpecificExtensions.SetValue(CAEX_ClassModel.RevisionType.MemberElement_Comment,System.String)">
            <summary>
            sets the Comment of the provided revision object
            </summary>
            <param name="obj">the Comment object</param>
            <param name="value">the Comment value</param>
            <returns>nothing</returns>
        </member>
        <member name="T:AMLEngineExtensions.AutomationMLClipboard">
            <summary>
            Class AutomationMLClipboard provides Method to copy and paste caex nodes.
            With the provided methods it is possible, to exchange caex nodes between
            different documents or even between different applications.
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLClipboard.CopyToClipboard(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
            Copies the XML node's outer xml text to the clipboard.
            The Data format string is set to "CAEX".
            </summary>
            <param name="caex">The caex object, which node is copied.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLClipboard.PasteFromClipboard">
            <summary>
            Pastes from clipboard creates a new CAEXObject from
            data, which is found in the clipboard, if the data
            format string is "CAEX" <see cref="M:AMLEngineExtensions.AutomationMLClipboard.CopyToClipboard(CAEX_ClassModel.CAEXBasicObject)"/>.
            The caex object is created in it's own xml document.
            For insertion in a document structure, it has to be
            imported in the caex document first.
            </summary>
            <returns>CAEXBasicObject if clipboard contains CAEX-Data; <c>null</c> otherwise.</returns>
        </member>
        <member name="T:AMLEngineExtensions.CaexObjectComparerResult">
            <summary>
            Comparing Result Enumeration
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.IsEqual">
            <summary>
            The is equal
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.PathDiff">
            <summary>
            The path difference
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.InterfaceClassDiff">
            <summary>
            The interface class difference
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.AttributeDiff">
            <summary>
            The attribute difference
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.AttributeDataTypeDiff">
            <summary>
            The attribute data type difference
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.AttributeUnitDiff">
            <summary>
            The attribute unit difference
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.AttributeCountDiff">
            <summary>
            The attribute count difference
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.RoleClassDiff">
            <summary>
            The role class difference
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.InterfaceCountDiff">
            <summary>
            The interface count difference
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.InternalElementDiff">
            <summary>
            The internal element difference
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.InternalElementCountDiff">
            <summary>
            The internal element count difference
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparerResult.AttributeValueDiff">
            <summary>
            The attribute value difference
            </summary>
        </member>
        <member name="T:AMLEngineExtensions.CaexObjectComparer">
            <summary>
            Caex Comparer Extension Methods and Result Dictionary
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.CaexObjectComparer.CaexComparedObjects">
            <summary>
            Dictionary for Comparing Results
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.AttributeEquals(CAEX_ClassModel.AttributeType,CAEX_ClassModel.AttributeType,System.Boolean)">
            <summary>
            Compare two Attribute Types (CAEXPath, AttributeDataType, AttributeUnit, AttributeValue, Nested Attributes)
            </summary>
            <param name="attribute">The Original Attribute Type</param>
            <param name="compareWith">Object for Comparison with Original</param>
            <param name="UseDictionary">true, if the Result should be saved in a dictionary for later evaluation</param>
            <returns>CaexObjectComparerResult.</returns>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.AttributesEquals(CAEX_ClassModel.CAEXObject,CAEX_ClassModel.CAEXObject,System.Boolean)">
            <summary>
            Compare all Attributes of two Objects with Attributes
            </summary>
            <param name="withAttribute">Original object with attributes</param>
            <param name="compareWith">Object for Comparison with Original</param>
            <param name="UseDictionary">true, if the Result should be saved in a dictionary for later evaluation</param>
            <returns>CaexObjectComparerResult.</returns>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.CaexEquals(CAEX_ClassModel.CAEXObject,CAEX_ClassModel.CAEXObject,System.Boolean)">
            <summary>
            Compare the CAEXPath of two CaexBasicObjects.
            </summary>
            <param name="caexBasicObj">Original</param>
            <param name="compareWith">Object for Comparison with Original</param>
            <param name="UseDictionary">true, if the Result should be saved in a dictionary for later evaluation</param>
            <returns>Comparer Result</returns>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.CaexObjectComparerResultString(AMLEngineExtensions.CaexObjectComparerResult)">
            <summary>
            Caexes the object comparer result string.
            </summary>
            <param name="result">The result.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.DifferentAttributeTypes">
            <summary>
            Get all AttributeType - Tuples and the Compare-Result from the Compare Result-Dictionary with an AttributeDiff-Flag
            </summary>
            <returns>Enumerable with different CAEX-Elements of AttributeType, contained in the ComparerResult-Dictionary</returns>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.DifferentInterfaceClassTypes">
            <summary>
            Get all InterfaceClassType - Tuples and the Compare-Result from the Compare Result-Dictionary with an InterfaceClassDiff-Flag
            </summary>
            <returns>IEnumerable&lt;Tuple&lt;InterfaceClassType, InterfaceClassType, CaexObjectComparerResult&gt;&gt;.</returns>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.DifferentRoleClassTypes">
            <summary>
            Get all RoleClassType - Tuples and the Compare-Result from the Compare Result-Dictionary with a RoleClassDiff-Flag
            </summary>
            <returns>IEnumerable&lt;Tuple&lt;RoleClassType, RoleClassType, CaexObjectComparerResult&gt;&gt;.</returns>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.InterfaceEquals(CAEX_ClassModel.InterfaceClassType,CAEX_ClassModel.InterfaceClassType,System.Boolean)">
            <summary>
            Comparing Interfaces (Attributes and CAEXPath)
            </summary>
            <param name="interfaceClass">Original Interface Class</param>
            <param name="compareWith">Object for Comparison with Original</param>
            <param name="UseDictionary">true, if the Result should be saved in a dictionary for later evaluation</param>
            <returns>CaexObjectComparerResult.</returns>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.InternalElementEquals(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.InternalElementType,System.Boolean)">
            <summary>
            Compare the the Attribute- and Interface-Definitions of two InternalElement Objects
            </summary>
            <param name="internalElement">The Original Internal Element</param>
            <param name="compareWith">Object for Comparison with Original</param>
            <param name="UseDictionary">true, if the Result should be saved in a dictionary for later evaluation</param>
            <returns>CaexObjectComparerResult.</returns>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.ResetComparerResult">
            <summary>
            Reset the Result - Dictionary of the Comparer
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.RoleClassEquals(CAEX_ClassModel.RoleFamilyType,CAEX_ClassModel.RoleFamilyType,System.Boolean)">
            <summary>
            Compare the CAEXPath(), the Attribute- and Interface-Definitions of two RoleClass Objects
            </summary>
            <param name="roleClass">Original RoleClass Object</param>
            <param name="compareWith">Object for Comparison with Original</param>
            <param name="UseDictionary">true, if the Result should be saved in a dictionary for later evaluation</param>
            <returns>CaexObjectComparerResult.</returns>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.BeginCompare(CAEX_ClassModel.CAEXObject,CAEX_ClassModel.CAEXObject)">
            <summary>
            Start Comparing a tuple and add it to the Dictionary
            </summary>
            <param name="caexBasicObj">The caex basic object.</param>
            <param name="compareWith">The compare with.</param>
            <returns>Tuple&lt;CAEXBasicObject, CAEXBasicObject&gt;.</returns>
        </member>
        <member name="M:AMLEngineExtensions.CaexObjectComparer.FindFirstCaexObjectByName``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Finds the first name of the caex object by.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="name">The name.</param>
            <returns>T.</returns>
        </member>
        <member name="T:AMLEngineExtensions.ConsistencyCheckExtensions">
            <summary>
            Consistency check related extensions of the AMLEngine
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ConsistencyCheckExtensions.CheckFastMultipleIDs(CAEX_ClassModel.CAEXDocument,System.Collections.Generic.Dictionary{System.String,CAEX_ClassModel.CAEXBasicObject}@,System.Boolean)">
            <summary>
            Performs a document wide validation check across all object instances
            - missing vendor specific meta information
            - missing or wrong schema location
            - wrong schema name
            - double IDs
            - missing IDs
            - double names
            - warning if forbidden characters are used which are @ : and /
            - checks existence of all external files Validates this CAEX document against missing or
            double ID's, missing vendor specific meta information, wrong schema name, wrong schema
            location Works very fast based on Hash Tables instead of XPath.
            </summary>
            <param name="myDoc">CAEX document to be checked</param>
            <param name="IDAndNameErrorList">list of error information</param>
            <param name="autoRepair">true if errors are automatically fixed if possible</param>
            <returns>number of ID related errors</returns>
            <reamrks>
            Since Version 3.0 the Validation Methods are an integral part of the
            <see cref="T:CAEX_ClassModel.CAEXDocument" />. Validation and Repair Options are avaliable with
            <see cref="M:CAEX_ClassModel.CAEXDocument.ValidateAll" /> and <see cref="M:CAEX_ClassModel.CAEXDocument.Repair(CAEX_ClassModel.Validation.ValidationElement,CAEX_ClassModel.Validation.RepairTypeEnum)" />. This
            Method is provided for downward compatibility.
            </reamrks>
            <remarks>The Validation of Version, Schema and Writer Header is now done in the Validation Method
            itself. The Implementation has been moved to the Validation Namespace <see cref="N:CAEX_ClassModel.Validation" />.</remarks>
        </member>
        <member name="M:AMLEngineExtensions.ConsistencyCheckExtensions.CheckFastReferenceConsistency(CAEX_ClassModel.CAEXDocument,System.Collections.Generic.Dictionary{System.String,CAEX_ClassModel.CAEXBasicObject}@)">
            <summary>
            Performs a document wide reference related consistency check across all Hierarchies and Libraries
            - checks existence of all references
            - checks existence of all external files
            - checks validity of all internal links
            - only works within the current CAEX document, does not perform a merge
            - works very fast based on Hash Tables instead of XPath
            </summary>
            <param name="myDoc">the CAEX document</param>
            <param name="referenceErrorList">a list of objects which caused errors while validation</param>
            <returns>the number of errors found during validation</returns>
            <reamrks>
            Since Version 3.0 the Validation Methods are an integral part of the
            <see cref="T:CAEX_ClassModel.CAEXDocument" />. Validation and Repair Options are avaliable with
            <see cref="M:CAEX_ClassModel.CAEXDocument.ValidateReferences" /> and <see cref="M:CAEX_ClassModel.CAEXDocument.Repair(CAEX_ClassModel.Validation.ValidationElement,CAEX_ClassModel.Validation.RepairTypeEnum)" />.
            This Method is provided for downward compatibility.
            </reamrks>
        </member>
        <member name="M:AMLEngineExtensions.ConsistencyCheckExtensions.AddErrorToIDErrorList(System.Collections.Generic.Dictionary{System.String,CAEX_ClassModel.CAEXBasicObject},System.String,CAEX_ClassModel.CAEXBasicObject)">
            <summary>
            Adds error messages to the IDErrorList in the format "[error number] errormessage"
            </summary>
            <param name="IDErrorList">The identifier error list.</param>
            <param name="newErrorEntry">The new error entry.</param>
            <param name="obj">The object.</param>
        </member>
        <member name="M:AMLEngineExtensions.ConsistencyCheckExtensions.NameIsUnique``1(System.Collections.Generic.IEnumerable{``0},CAEX_ClassModel.CAEXObject)">
            <summary>
            Check if a CAEXObject has an assigned name which is not null or empty and if there is no
            other object in a list of CAEXObjects with an identical name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="caexObjects">The caex objects.</param>
            <param name="caexObject">The caex object.</param>
            <returns><c>true</c> if name is unique, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ConsistencyCheckExtensions.RepairCAEXDoc(CAEX_ClassModel.CAEXDocument,System.Collections.Generic.Dictionary{System.String,CAEX_ClassModel.CAEXBasicObject}@)">
            <summary>
            Repairs this CAEX document against missing or double ID's, missing vendor specific meta
            information, wrong schema name, wrong schema location
            </summary>
            <param name="myDoc">the CAEXDocument</param>
            <param name="repairList">a list of repair comments</param>
            <returns>number of ID related errors</returns>
            <reamrks>
            Since Version 3.0 the Validation Methods are an integral part of the
            <see cref="T:CAEX_ClassModel.CAEXDocument" />. Validation and Repair Options are avaliable with
            <see cref="M:CAEX_ClassModel.CAEXDocument.ValidateAll" /> and <see cref="M:CAEX_ClassModel.CAEXDocument.Repair(CAEX_ClassModel.Validation.ValidationElement,CAEX_ClassModel.Validation.RepairTypeEnum)" />. This
            Method is provided for downward compatibility.
            </reamrks>
        </member>
        <member name="T:AMLEngineExtensions.Interlocking">
            <summary>
            This extensions are used to define interlocking as part of a logic description
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.Interlocking.IsInterlockingSourceGroup(CAEX_ClassModel.InternalElementType)">
            <summary>
            Determines, if the given internal Element represents an interlocking source group
            </summary>
            <param name="internalElement"></param>
            <returns></returns>
        </member>
        <member name="M:AMLEngineExtensions.Interlocking.IsInterlockingTargetGroup(CAEX_ClassModel.InternalElementType)">
            <summary>
            Determines, if the given internal Element represents an interlocking target group
            </summary>
            <param name="internalElement"></param>
            <returns></returns>
        </member>
        <member name="T:AMLEngineExtensions.AutomationMLBaseRoleClassLib">
            <summary>
            Class AutomationMLBaseRoleClassLib.
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.AutomationMLBaseRoleClassLibName">
            <summary>
             The automationml base role class library name
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.AutomationMLBaseRole">
            <summary>
            The AutomationML base role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.Facet">
            <summary>
            The facet role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.Frame">
            <summary>
            The frame role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.Group">
            <summary>
            The group role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.LogicObject">
            <summary>
            The logic object role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.InterlockingSourceGroup">
            <summary>
            The Interlocking Source group role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.InterlockingTargetGroup">
            <summary>
            The Interlocking Source group role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.Port">
            <summary>
            The port role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.Process">
            <summary>
            The process role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.ProcessStructure">
            <summary>
            The process structure role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.Product">
            <summary>
            The product role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.ProductStructure">
            <summary>
            The product structure role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.PropertySet">
            <summary>
            The property set role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.Resource">
            <summary>
            The resource role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.ResourceStructure">
            <summary>
            The resource structure role class path
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLBaseRoleClassLib.Structure">
            <summary>
            The structure role class path
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsAutomationMLBaseRole(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            AutomationMLBaseRole RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsDerivedFromRoleClass(CAEX_ClassModel.IObjectWithRoleReference,System.String)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the role,
            uniquely identifyable by the given role class path. The role class path may contain an alias.
            </summary>
            <param name="roleReference">The role reference - this is a supported role  class or a role requirement.</param>
            <param name="roleClassPath">A classpath of a base role, which is tested for a possible inheritance relation to
            the specified role reference.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsFacet(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            Facet RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsFrame(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            Frame RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsInterlockingSourceGroup(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            InterlockingSourceGroup RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsInterlockingTargetGroup(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            InterlockingTargetGroup RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsGroup(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            Group RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsLogicObject(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            LogicObject RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsPort(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            Port RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsProcess(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            Process RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsProcessStructure(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            ProcessStructure RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsProduct(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            Product RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsProductStructure(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            ProductStructure RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsPropertySet(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            PropertySet RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsResource(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            Resource RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsResourceStructure(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            ResourceStructure RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.IsStructure(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Determines whether the specified role reference defines an inheritance relation from the
            Structure RoleClass
            </summary>
            <param name="role">The role.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakeAutomationMLBaseRole(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the AutomationML base role.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakeFacet(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the facet.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakeGroup(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the group.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakePort(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the port.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakeProcess(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the process.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakeProcessStructure(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the process structure.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakeProduct(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the product.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakeProductStructure(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the product structure.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakePropertySet(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the property set.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakeResource(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the resource.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakeResourceStructure(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the resource structure.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLBaseRoleClassLib.MakeStructure(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
            Makes the structure.
            </summary>
            <param name="usedRole">The used role.</param>
        </member>
        <member name="T:AMLEngineExtensions.AutomationMLInterfaceClassLib">
            <summary>
            Class AutomationMLInterfaceClassLib contains path's to standard interface classes
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.AutomationMLInterfaceClassLibName">
            <summary>
            The AutomationML base interface class library name
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.AttachmentInterface">
            <summary>
            The AttachmentInterface  class path (a Part 3 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.AutomationMLBaseInterface">
            <summary>
            The AutomationML base interface class path (a Part 1 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.BehaviourLogicInterface">
            <summary>
            The behaviour logic interface class path (a Part 4 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.COLLADAInterface">
            <summary>
            The collada interface  class path (a Part 1 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.Communication">
            <summary>
            The communication interface class path (a Part 1 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.ExternalDataConnector">
            <summary>
            The external data connector (a Part 1 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.InterlockingConnector">
            <summary>
            The interlocking connector  interface class path (a Part 1 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.InterlockingLogicInterface">
            <summary>
            The interlocking logic interface class path (a Part 4 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.InterlockingVariableInterface">
            <summary>
            The interlocking variable interface class path (a Part 4 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.LogicInterface">
            <summary>
            The logic interface class path (a Part 4 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.LogicElementInterface">
            <summary>
            The logic element interface class path (a Part 4 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.Order">
            <summary>
            The order  interface class path (a Part 1 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.PLCopenXMLInterface">
            <summary>
            The plcopenXML  interface class path (a Part 1 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.PortConnector">
            <summary>
            The port connector  interface class path (a Part 1 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.PPRConnector">
            <summary>
            The PPR connector  interface class path (a Part 1 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.SequencingBehaviourLogicInterface">
            <summary>
            The sequencing behaviour logic interface class path (a Part 4 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.SequencingLogicInterface">
            <summary>
            The sequencing logic interface class path (a Part 4 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.SignalInterface">
            <summary>
            The signal interface  class path (a Part 1 Interface)
            </summary>
        </member>
        <member name="F:AMLEngineExtensions.AutomationMLInterfaceClassLib.VariableInterface">
            <summary>
            The variable interface class path (a Part 4 Interface)
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsAutomationMLBaseInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            AutomationMLBase interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsCOLLADAInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            COLLADAInterface interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsCommunicationInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            Communication interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsDerivedFormInterfaceClass(CAEX_ClassModel.InterfaceClassType,System.String)">
            <summary>
            Determines whether the specified interface class has an inheritance relation from the interface class,
            uniquely identifyable by the given interface class path. The interface class path may contain an alias.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <param name="interfaceClassPath">Class path of a base interface class which is tested for a
            inheritance relation to the specified interface class, which is the more specific class
            in this relation.</param>
            <returns><c>true</c> if an inheritance relation is resolved; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsExternalDataConnector(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            ExternalDataConnector interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsInterlockingConnector(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            InterlockingConnector interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsOrderInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            Order interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsPLCopenXMLInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            PLCopenXMLInterface interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsPortConnector(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            PortConnector interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsPPRConnector(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            PPRConnector interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsSignalInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            SignalInterface interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.MakeAutomationMLBaseInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Makes the AutomationML base interface.
            </summary>
            <param name="interfaceClass">The interface class.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsInterlockingVariableInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            InterlockingVariableInterface interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsVariableInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            VariableInterface interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsSequencingLogicInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            SequencingLogicInterface interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsInterlockingLogicInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            InterlockingLogicInterface interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsLogicInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            LogicInterface interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsBehaviourLogicInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            BehaviourLogicInterface interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsSequencingBehaviourLogicInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            SequencingBehaviourLogicInterface interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.IsLogicElementInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the specified interface class is derived from the
            LogicElementInterface interface class. The method can resolve alias references anywhere
            in the inheritance hierarchy.
            </summary>
            <param name="interfaceClass">The interface class.</param>
            <returns><c>true</c> if an inheritance relation could be resolved;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.MakeCOLLADAInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Makes the collada interface.
            </summary>
            <param name="interfaceClass">The interface class.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.MakeCommunicationInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Makes the communication interface.
            </summary>
            <param name="interfaceClass">The interface class.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.MakeExternalDataConnector(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Makes the external data connector.
            </summary>
            <param name="interfaceClass">The interface class.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.MakeInterlockingConnector(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Makes the interlocking connector.
            </summary>
            <param name="interfaceClass">The interface class.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.MakeOrderInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Makes the order interface.
            </summary>
            <param name="interfaceClass">The interface class.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.MakePLCopenXMLInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Makes the PLCopen XML interface.
            </summary>
            <param name="interfaceClass">The interface class.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.MakePortConnector(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Makes the port connector.
            </summary>
            <param name="interfaceClass">The interface class.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.MakePPRConnector(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Makes the PPR connector.
            </summary>
            <param name="interfaceClass">The interface class.</param>
        </member>
        <member name="M:AMLEngineExtensions.AutomationMLInterfaceClassLib.MakeSignalInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Makes the signal interface.
            </summary>
            <param name="interfaceClass">The interface class.</param>
        </member>
        <member name="T:AMLEngineExtensions.ExternalReferenceDocumentExtensions">
            <summary>
            Class ExternalReferenceDocumentExtensions contains specific extensions to determine inheritance relations
            where the inheritance tree contains references which are not resolvable in the document but via an alias
            reference resolved in external referenced documents.
            </summary>
        </member>
        <member name="M:AMLEngineExtensions.ExternalReferenceDocumentExtensions.ClassIsDerivedFrom(CAEX_ClassModel.IClassWithBaseClassReference,System.String)">
            <summary>
            Determines, if the specified class is directly or indirectly (across multiple generations)
            a descendant of the class, which is uniquely identified wird the specified baseClass path.
            The base class path or the referenced class path may contain alias identifiers. If alias
            identifiers are present, the method tries to load the externaly referenced document. If a
            referenced document is loaded, it is visible in the <see cref="P:CAEX_ClassModel.CAEXDocument.ReferencedDocuments"/>
            enumeration. This method uses the document tables for a fast identification of classes using
            the caex path
            </summary>
            <param name="classWithReference">The class with reference.</param>
            <param name="baseClassPath">The base class path.</param>
            <returns><c>true</c> if the class is derived, <c>false</c> if it is not. If no value is
            returned, some references could not be resolved to get the answer.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalReferenceDocumentExtensions.ClassIsDerivedFrom(CAEX_ClassModel.CAEXDocument,System.String,System.String)">
            <summary>
            Determines, if the class, specified with the given class path is directly or indirectly (across multiple generations)
            a descendant of the class, which is uniquely identified with the specified baseClass path.
            The base class path or the referenced class path may contain alias identifiers. If alias
            identifiers are present, the method tries to load the externally referenced document. If a
            referenced document is loaded, it is visible in the <see cref="P:CAEX_ClassModel.CAEXDocument.ReferencedDocuments"/>
            enumeration. This method uses the document tables for a fast identification of classes using
            the caex path
            </summary>
            <param name="document">The document where the classes are searched</param>
            <param name="classPath">The class path of the tested class.</param>
            <param name="baseClassPath">The base class path.</param>
            <returns><c>true</c> if the class is derived, <c>false</c> if it is not. If no value is
            returned, some references could not be resolved to get the answer.</returns>
        </member>
        <member name="M:AMLEngineExtensions.ExternalReferenceDocumentExtensions.ClassIsDerivedFrom(CAEX_ClassModel.IClassWithBaseClassReference,CAEX_ClassModel.CAEXObject)">
            <summary>
            Determines, if the specified class is directly or indirectly (across multiple generations)
            a descendant of the specified base class. This method can be used, if the classes are
            distributed over different caex documents, the documents should be referenced by external
            references and alias references. If a
            referenced document needs to be loaded, it is visible in the <see cref="P:CAEX_ClassModel.CAEXDocument.ReferencedDocuments"/>
            enumeration. This method uses the document tables for a fast identification of classes using
            the caex path.
            </summary>
            <param name="classWithReference">The class with reference.</param>
            <param name="baseClass">The base class.</param>
            <returns><c>true</c> if the class is derived, <c>false</c> if it is not. If no value is
            returned, some references could not be resolved to get the answer.</returns>
        </member>
        <member name="T:CAEX_ClassModel.AttributeType">
            <summary>
            Class AttributeType.
            </summary>
            <summary>
            Class AttributeType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.xsdDataTypes">
            <summary>
            The XSD data types which are supported
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.New_FrameAttribute(CAEX_ClassModel.FrameValues)">
            <summary>
            Creates a new frame attribute for this object. Position information is internally stored in more than one CAEX attribute.
            </summary>
            <param name="frameValues">The frame values.</param>
            <returns>FrameAttributeType.</returns>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.FRAME_NAME">
            <summary>
            The frame name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.RX_Name">
            <summary>
            The rx name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.RY_Name">
            <summary>
            The ry name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.RZ_Name">
            <summary>
            The rz name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.X_Name">
            <summary>
            The x name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.Y_Name">
            <summary>
            The y name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.Z_Name">
            <summary>
            The z name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.REF_TYPE_ATTRIBUTE">
            <summary>
            The ref type attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.REF_URI_ATTRIBUTE">
            <summary>
            The ref uri attribute
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.DefaultValue">
            <summary>
            Get and set the DefaultValue of this object. A new DefaultValue object is created when not present.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.FrameAttribute">
            <summary>
            Get and set the Frame attribute
            </summary>
            <value>The frame attribute.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.RefURIAttribute">
            <summary>
            Gets and sets the GeometryReference defined for this object.
            </summary>
            <value>The reference URI attribute.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.Value">
            <summary>
            Field to get and set the value of this attribute. A new Value element is created if not present.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.ClrToXmlType(System.Type)">
            <summary>
            Gets the xmlType type for the specified clr type. The Mapping is done
            according to <see href="https://msdn.microsoft.com/en-us/library/xa669bew(v=vs.110).aspx">Mapping XML Data Types to CLR Types.</see>
            This reverse mapping is not unambiguous. If more than one mapping is possible, the most common used description is generated. 
            If No mapping is defined the 'xs:string' is used.
            </summary>
            <param name="clrType">.Net data Type.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.XmlToClrType(System.String)">
            <summary>
            Gets the clr type for the specified xmlType. The Mapping is done
            according to <see href="https://msdn.microsoft.com/en-us/library/xa669bew(v=vs.110).aspx">Mapping XML Data Types to CLR Types</see>
            </summary>
            <param name="xmlType">Type of the XML.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.GetAttribute(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>AttributeType or null if not found.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.getAttributeField">
            <summary>
            Get the whole attribute field containing a collection of all attributes of this object.
            </summary>
            <returns>CAEX_ClassModel.MemberElement_Attribute.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.GetDerivedAttributes(System.Boolean)">
            <summary>
            An attribute type does not have any class references and therefore no derived attributes. If 
            includeOwn is set to false, the returned list will always be the empty list.
            </summary>
            <param name="includeOwn">If set to true, the own attributes are added to the collection.</param>
            <returns>a list of CAEX attributes</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.Insert_Attribute(CAEX_ClassModel.AttributeType)">
            <summary>
            Appending an attribute element to this class
            </summary>
            <param name="attributeElement">The attribute to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.Insert_Element(Altova.Xml.TypeBase)">
            <summary>
            Inserting an element generically to this object.
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.New_Attribute(System.String)">
            <summary>
            Adding a new attribute child node to this attribute.
            </summary>
            <param name="name">The name of the new attribute</param>
            <returns>The new attribute</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.New_Constraint(System.String)">
            <summary>
            Adding a Constraint node to this attribute. Use this method with caution. A constraint node has to be further specified by one of the three types:
            OrdinalScaledType, NominalScaledType or UnknownType. You can use the appropriate methods New_OrdinalScaledConstraint, New_NominalScaledConstraint or New_UnknownConstraint to
            add a constraint with the desired type in one step.
            If you forget to add a type to this constraint you will be no more conform to the schema!
            </summary>
            <param name="name">The name of the constraint</param>
            <returns>The new constraint node</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.New_DefaultValue">
            <summary>
            A new DefaultValue is added to this attribute.
            </summary>
            <returns>The new DefaultValue element</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A DefaultValue node is already existent. It is not allowed to add more than one DefaultValue node to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.New_NominalScaledConstraint(System.String)">
            <summary>
            A new nominal scaled constraint is added to this attribute.
            </summary>
            <param name="constraintName">Name of the constraint.</param>
            <returns>A new nominal scaled constraint</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.New_OrdinalScaledConstraint(System.String)">
            <summary>
            A new ordinal scaled constraint is added to this attribute.
            </summary>
            <param name="constraintName">Name of the constraint.</param>
            <returns>A new ordinal scaled constraint</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.New_RefSemantic(System.String)">
            <summary>
            Adding a new RefSemantic node to this attribute.
            </summary>
            <param name="CorrespondingAttributePath">The corresponding attribute path for the semantic reference</param>
            <returns>The new RefSemantic element.</returns>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.AttributePath">
            <summary>
            Gets the Attribute Path. For Nested Attributes the Path is a concatenation of all Attribute names of the
            ancestor attributes separated with a dot. For Root Attributes, the Path is identical to the Attribute name.
            </summary>       
            <returns>System.String.</returns>
            <remarks>
            The AttributePath is not the same as the CAEXPath. The CaexPath is the full path which is build, starting
            at the the library containing the attribute.
            The AttributePath is a part of the CAEXPath (the ending part).  
            </remarks>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.RootAttribute">
            <summary>
            Gets the root attribute of a sub attribute. If this instance is a sub attribute of a structured
            attribute, the top level root attribute is returned. If this instance is not a sub attribute,
            the root attribute is identical to this instance.
            </summary>       
            <returns>AttributeType for the root attribute.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.New_UnknownConstraint(System.String)">
            <summary>
            A new unknown constraint is added to this attribute.
            </summary>
            <param name="constraintName">Name of the constraint.</param>
            <returns>A new unknown constraint</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.New_Value">
            <summary>
            Add a new Value element to this attribute.
            </summary>
            <returns>The new Value element.</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A Value node is already existent. It is not allowed to add more than one Value node to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.SetDouble(System.Double)">
            <summary>
            Sets the specified double value as the attribute value. The AttributeDataType is set to xs:double
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.SetDateTime(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
            <summary>
            Sets the specified dateTime value as the attribute value. The AttributeDataType is set to xs:dateTime
            </summary>
            <param name="value">The value.</param>
            <param name="mode">The serialization mode mode, use UTC </param>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.GetDouble">
            <summary>
            Parse the Attribute Value string as double. If the string can not be parsed, a format exception is returned.
            This method uses the XmlConvert <see cref="M:System.Xml.XmlConvert.ToDouble(System.String)"/>  method and a fallback conversion, if the first conversion
            fails. 
            </summary>
            <returns>Double.</returns>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.TryGetDouble(System.Double@)">
            <summary>
            Tries to parse the Attribute Value string as double. 
            This method uses the XmlConvert <see cref="M:System.Xml.XmlConvert.ToDouble(System.String)"/>  method and a fallback conversion, if the first conversion
            fails. 
            </summary>
            <param name="doubleValue">The double value.</param>
            <returns><c>true</c> if success, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.GetDateTime(System.Xml.XmlDateTimeSerializationMode)">
            <summary>
            Parse the Attribute Value string as dateTime. If the string can not be parsed, a format exception is returned.
            This method uses the XmlConvert <see cref="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)"/>  method.
            </summary>   
            <param name="dateTimeOption">The date time option.</param>
            <returns>DateTime.</returns>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.TryGetDateTime(System.Xml.XmlDateTimeSerializationMode,System.DateTime@)">
            <summary>
            Tries to parse the Attribute Value string as dateTime. 
            This method uses the XmlConvert <see cref="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)"/>  method.
            </summary>
            <param name="dateTimeValue">The DateTime value.</param>      
            <param name="dateTimeOption">The date time option.</param>
            <returns><c>true</c> if success, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.GetTypedValue">
            <summary>
            Parse the Attribute Value string with the information, given in the <see cref="F:CAEX_ClassModel.AttributeType.AttributeDataType"/>. If no Datatype is defined,
            the value string is returned. If a Datatype is defined, visit <see href="http://docstore.mik.ua/orelly/xml/schema/ch04_01.htm">XML Datatypes</see> for
            a description of type conversion behavior. As an example, for all DataTypes, which are converted to the .net String Type 
            (xs:string, xs:normalizedString, etc..) whitespace replacement is performed, according to the restrictions defined by 
            the AttributeDataType. For xs:ENTITIES, xs:IDREFS and xs:NMTOKENS the attribute value is converted to a whitespace-separated list of strings with the
            naming restricton of the base type.
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.Attribute">
            <summary>
            The attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.AttributeDataType">
            <summary>
            The attribute data type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.Constraint">
            <summary>
            The constraint
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.RefSemantic">
            <summary>
            The reference semantic
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.Unit">
            <summary>
            The unit
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.DefaultValue2">
            <summary>
            The default value2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.Value2">
            <summary>
            The value2
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXObject" /> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.AttributeType.MemberAttribute_AttributeDataType">
            <summary>
            Class MemberAttribute_AttributeDataType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberAttribute_AttributeDataType.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberAttribute_AttributeDataType.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberAttribute_AttributeDataType.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeType.MemberAttribute_AttributeDataType"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberAttribute_AttributeDataType.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberAttribute_AttributeDataType.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberAttribute_AttributeDataType.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberAttribute_AttributeDataType.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.AttributeType.MemberAttribute_Unit">
            <summary>
            Class MemberAttribute_Unit.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberAttribute_Unit.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberAttribute_Unit.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberAttribute_Unit.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeType.MemberAttribute_Unit"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberAttribute_Unit.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberAttribute_Unit.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberAttribute_Unit.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberAttribute_Unit.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.AttributeType.MemberElement_Constraint">
            <summary>
            Class MemberElement_Constraint.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberElement_Constraint.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberElement_Constraint.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Constraint.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeType.MemberElement_Constraint"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Constraint.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Constraint.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.AttributeType.MemberElement_Constraint"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Constraint.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Constraint.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Constraint.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Constraint.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.AttributeValueRequirementType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>AttributeValueRequirementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Constraint.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>AttributeValueRequirementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Constraint.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>AttributeValueRequirementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Constraint.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Constraint.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Constraint.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue">
            <summary>
            Class MemberElement_DefaultValue.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.anyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_DefaultValue.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic">
            <summary>
            Class MemberElement_RefSemantic.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.RefSemanticType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>RefSemanticType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>RefSemanticType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>RefSemanticType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_RefSemantic.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.AttributeType.MemberElement_Value2">
            <summary>
            Class MemberElement_Value2.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberElement_Value2.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeType.MemberElement_Value2.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Value2.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeType.MemberElement_Value2"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Value2.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Value2.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.AttributeType.MemberElement_Value2"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Value2.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Value2.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Value2.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.MemberElement_Value2.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.anyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Value2.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Value2.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Value2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Value2.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.MemberElement_Value2.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.AttributeType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.AttributeValueRequirementType">
            <summary>
            Class AttributeValueRequirementType.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.New_NominalType">
            <summary>
            A new nominal type is added to this constraint.
            </summary>
            <returns>A new nominal constraint</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.New_OrdinalType">
            <summary>
            A new nominal type is added to this constraint.
            </summary>
            <returns>A new nominal constraint</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.New_UnknownType">
            <summary>
            A new unknown type is added to this constraint.
            </summary>
            <returns>A new unknown constraint</returns>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.NominalScaledType">
            <summary>
            The nominal scaled type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.OrdinalScaledType">
            <summary>
            The ordinal scaled type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.UnknownType">
            <summary>
            The unknown type
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXBasicObject" /> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.AttributeValueRequirementType.MemberAttribute_Name">
            <summary>
            Class MemberAttribute_Name.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.MemberAttribute_Name.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.MemberAttribute_Name.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberAttribute_Name.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeValueRequirementType.MemberAttribute_Name"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberAttribute_Name.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberAttribute_Name.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberAttribute_Name.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberAttribute_Name.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType">
            <summary>
            Class MemberElement_NominalScaledType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.NominalScaledTypeType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>NominalScaledTypeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>NominalScaledTypeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>NominalScaledTypeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_NominalScaledType.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType">
            <summary>
            Class MemberElement_OrdinalScaledType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>OrdinalScaledTypeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>OrdinalScaledTypeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>OrdinalScaledTypeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_OrdinalScaledType.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType">
            <summary>
            Class MemberElement_UnknownType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.UnknownTypeType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>UnknownTypeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>UnknownTypeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>UnknownTypeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.MemberElement_UnknownType.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.AttributeValueRequirementType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeValueRequirementType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeValueRequirementType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.CAEXBasicObject">
            <summary>
            User extensions to the automatic generated class CAEXBasicObject contained in CAEX_ClassModel
            </summary>
            <summary>
            Class CAEXBasicObject.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.PATH_SEPARATOR">
            <summary>
            the separator sign used for separations in path hierarchies
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.NAME_ATTRIBUTE">
            <summary>
            The name of the "Name" attribute
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.Description">
            <summary>
            Get the description of this object. The returned object is null when no description element is found!
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.Version">
            <summary>
            Get the VersionType of this header object.
            </summary>
            <value>The version.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.CreateUniqueName``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
               create a unique name for a new element in a collection
            </summary>
            <typeparam name="T"></typeparam>
            <param name="elements">The elements.</param>
            <param name="name">    The name.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.Copyright">
            <summary>
            Get the CopyrightType of this header object.
            </summary>
            <value>The copyright.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.getLastHeaderNode">
            <summary>
            This methods returns the last XmlNode of this CAEX basic object according to the element order given by the CAEX schema. In this
            context "last" describes the element that is at the end of this header elements.
            </summary>
            <returns>The last header element node</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.getLastAttributeNode">
            <summary>
            Gets the last attribute node.
            </summary>
            <returns>XmlNode.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.New_Description">
            <summary>
            Creating a new description element. An exception is thrown when a description element is already present.
            </summary>
            <returns>A newly created DescriptionType element. An exception of type SchemaConformanceException is thrown when a description element is already present</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A description node is already existent. It is not allowed to add more than one description node to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.New_Version">
            <summary>
            Creating a new version element.  An exception is thrown when a version element is already present. The sibling order according to the CAEX Schema is preserved in that way, that version nodes are
            always inserted after nodes of type DescriptionType
            </summary>
            <returns>A newly created VersionType element. An exception of type SchemaConformanceException is thrown when a version element is already present</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A version node is already existent. It is not allowed to add more than one version node to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.New_Revision(Altova.Types.DateTime,System.String,System.Boolean)">
            <summary>
            Creating a new revision element. According to CAEX schema each revision element must contain at least the two sub elements "RevisionDate" and "AuthorName". They are created with this revision object. The sibling order according to the CAEX Schema is preserved in that way, that revision nodes are
            always inserted  nodes of type VersionType
            </summary>
            <param name="date">The date.</param>
            <param name="author">The author.</param>
            <param name="asFirst">if <c>true</c>, the revision is prepended to any existing revisions, otherwise it's appended</param>
            <returns>A newly created RevisionType element.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.New_Copyright">
            <summary>
            Adding an new Copyright node to this object. If a Copyright node is already existent when calling this method an exception is thrown.
            </summary>
            <returns>A new Copyright node</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A copyright node is already existent. It is not allowed to add more than one copyright node to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.New_AdditionalInformation(System.Boolean)">
            <summary>
            Adding a new AdditionalInformation node to this basic object. It is allowed to insert more than one AdditionalInformation node
            </summary>
            <returns>A new AdditionalInformation node as type anyType</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.RemoveHeader">
            <summary>
            Removing all header elements from this basic object
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.GetParent">
            <summary>
            This method returns the parent CAEXBasicObject of the current CAEXBasicObject.
            </summary>
            <returns>the parent CAEXBasicObject</returns>
            <exception cref="T:System.ArgumentException">The object is not attached to an XmlNode</exception>
            <exception cref="T:System.Xml.XmlException">The object has no parent</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.Equals(System.Object)">
            <summary>
            Determines, if the specified <see cref="T:System.Object" /> and the current <see cref="T:System.Object" /> are equal.
            </summary>
            <param name="obj">the <see cref="T:System.Object" />, to compare with <see cref="T:System.Object" />.</param>
            <returns>true, if the specified <see cref="T:System.Object" /> and the current <see cref="T:System.Object" /> are equal, otherwise false.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.getFullNodePath(System.Xml.XmlNode)">
            <summary>
            Getting the full path from document root to the specified XmlNode. As name of an XmlNode is the value of the contained attribute "name" taken.
            Hierarchies are separated via the path separator (slash '/').
            The name of the document root element CAEXFile is not contained in the path.
            </summary>
            <param name="xmlNode">The XmlNode to get the full path for</param>
            <returns>The full path from the document root element to the given XmlNode. The path contains of values of the "name" attribute of the XmlNodes. If no
            such attribute exists in the current node, the xml tag name is used instead.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.Descendants``1">
            <summary>
            Gets all Descendants of this instance which are of Type T. This returns all subordinate Children and their Descendants.
            </summary>
            <typeparam name="T">The CAEX Wrapper Type of the selected Descendants</typeparam>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.Descendants``1(System.Func{System.Xml.XmlNode,``0})">
            <summary>
            Gets all Descendants of this instance which are of Type T. This returns all subordinate Children and their Descendants.
            </summary>
            <typeparam name="T">The CAEX Wrapper Type of the selected Descendants</typeparam>
            <param name="creator">The Creator Method for the CAEX-Wrapper</param>
            <returns>IEnumerable&lt;T&gt;.</returns>
            <example>
            <code>
             foreach (InstanceHierarchyType ih in MyDocument.CAEXFile.InstanceHierarchies())
             {
               foreach (InternalElementType ie in ih.Descendants &lt;InternalElementType&gt; ( n=>new InternalElementType(n))
               {
                 // do something
               }
            }
            </code>
            </example>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.FirstAncestor``1">
            <summary>
            Gets the first ancestor of the specified type for this CaexObject
            </summary>
            <typeparam name="T">Type of the Ancestor</typeparam>
            <returns>The first ancestor of type T.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.Children``1">
            <summary>
            Gets all Children of this instance which are of Type T. This returns only the direct Children.
            </summary>
            <typeparam name="T">The CAEX Wrapper Type of the selected Children</typeparam>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.Children``1(System.Func{System.Xml.XmlNode,``0})">
            <summary>
            Gets all Children of this instance which are of Type T. This returns only the direct Children.
            </summary>
            <typeparam name="T">The CAEX Wrapper Type of the selected Children</typeparam>
            <param name="creator">The Creator Method for the Wrapper</param>
            <returns>IEnumerable&lt;T&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.Children(System.Type)">
            <summary>
            Gets all Children of this instance which are of the specified childrenType.
            This returns only the direct Children.
            </summary>
            <param name="childrenType">The Type of the Children's</param>
            <returns>IEnumerable&lt;CAEXBasicObject&gt;.</returns>
            <seealso cref="M:CAEX_ClassModel.CAEXBasicObject.Children``1"/>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.Children(System.Type,System.Func{System.Xml.XmlNode,CAEX_ClassModel.CAEXBasicObject})">
            <summary>
            Gets all Children of this instance which are of the specified childrenType.
            This returns only the direct Children.
            </summary>
            <param name="childrenType">The Type of the Children's</param>
            <param name="creator">The Creator Method for the Wrapper</param>
            <returns>IEnumerable&lt;CAEXBasicObject&gt;.</returns>
            <seealso cref="M:CAEX_ClassModel.CAEXBasicObject.Children``1"/>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.Descendants(System.Type)">
            <summary>
            Gets all Descendants of this instance which are of the specified descendantType.
            This returns all subordinate Children and their Descendants.
            </summary>
            <param name="descendantType">The Type of the Descendants</param>
            <returns>IEnumerable&lt;CAEXBasicObject&gt;.</returns>
            <seealso cref="M:CAEX_ClassModel.CAEXBasicObject.Descendants``1"/>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.Descendants(System.Type,System.Func{System.Xml.XmlNode,CAEX_ClassModel.CAEXBasicObject})">
            <summary>
            Gets all Descendants of this instance which are of the specified descendantType.
            This returns all subordinate Children and their Descendants.
            </summary>
            <param name="descendantType">The Type of the Descendants</param>
            <param name="creator">The Creator Method for the Wrapper</param>
            <returns>IEnumerable&lt;CAEXBasicObject&gt;.</returns>
            <seealso cref="M:CAEX_ClassModel.CAEXBasicObject.Descendants``1"/>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.getReferencedRoleClass(System.String)">
            <summary>
            Getting a referenced RoleClass. Use FindFastByPath for speed optimizations.
            </summary>
            <param name="roleClassReference">Full path to a RoleClass</param>
            <returns>The referenced RoleClass</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.getReferencedSystemUnitClass(System.String)">
            <summary>
            Getting a referenced SystemUnitClass. Use FindFastByPath for speed optimizations.
            </summary>
            <param name="systemUnitClassReference">Full path to a SystemUnitClass</param>
            <returns>The referenced SystemUnitClass</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.GetReferenceHierarchy``1(``0)">
            <summary>
            Getting the reference hierarchy. hierarchy is build up as a queue. the most specialized class is first one in queue
            </summary>
            <typeparam name="T">te type of the start element</typeparam>
            <param name="startElement">the element to start with</param>
            <returns>a queue</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.FillHierarchyStack``1(``0,System.Collections.Generic.Queue{CAEX_ClassModel.IClassWithBaseClassReference})">
            <summary>
            Fills the hierarchy stack.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="element">The element.</param>
            <param name="hierarchystack">The hierarchystack.</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.ExtractAndCombineAttributesFromClassHierarchy(System.Collections.Generic.Queue{CAEX_ClassModel.IClassWithBaseClassReference},System.Boolean)">
            <summary>
            Extracts and combines attributes from class hierarchy.
            </summary>
            <param name="referenceHierarchy">The reference hierarchy.</param>
            <param name="includeOwn">if set to <c>true</c> [include own].</param>
            <returns>List&lt;AttributeType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.ExtractAndCombineRoleClassesFromClassHierarchy(System.Collections.Generic.Queue{CAEX_ClassModel.IClassWithBaseClassReference},System.Boolean)">
            <summary>
            Extracts and combines role classes from class hierarchy.
            </summary>
            <param name="referenceHierarchy">The reference hierarchy.</param>
            <param name="includeOwn">if set to <c>true</c> [include own].</param>
            <returns>List&lt;SupportedRoleClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.ExtractAndCombineInterfacesFromClassHierarchy(System.Collections.Generic.Queue{CAEX_ClassModel.IClassWithBaseClassReference},System.Boolean)">
            <summary>
            Extracts and combines interfaces from class hierarchy.
            </summary>
            <param name="referenceHierarchy">The reference hierarchy.</param>
            <param name="includeOwn">if set to <c>true</c> [include own].</param>
            <returns>List&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MergeAttributes(CAEX_ClassModel.AttributeType,CAEX_ClassModel.AttributeType)">
            <summary>
            Merges the attributes.
            </summary>
            <param name="specializedAttribute">The specialized attribute.</param>
            <param name="baseAttribute">The base attribute.</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.getReferencedInterfaceClass(System.String)">
            <summary>
            Getting a referenced InterfaceClass. Use FindFastByPath for speed optimizations.
            </summary>
            <param name="interfaceClassReference">Full path to an InterfaceClass</param>
            <returns>The referenced InterfaceClass.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.getReferencedClass(System.String)">
            <summary>
            Getting the XmlNode for a class path. Use FindFastByPath for speed optimizations.
            </summary>
            <param name="referencedClassPath">The full path to the referenced class. Hierarchies are separated via slash "/"</param>
            <returns>The XmlNode of the desired class, or null if none found. Use FindFastByID for speed optimizations.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.getReferencedInterfaceName(System.String)">
            <summary>
            Getting the name of the referenced Interface. Use FindFastByPath for speed optimizations.
            </summary>
            <param name="reference">A reference to a interface class in form GUID:InterfaceClass</param>
            <returns>The name of the referenced interface class or string.empty if separator char not found in string</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.CAEXPath">
            <summary>
            Get the path to this in the object tree. For all objects, it returns the XML full Node
            Path except for Interface instances, then it returns GUID:InterfaceName.
            </summary>
            <returns>
            For classes, it returns the XML full Node Path. For Interface instances, it returns GUID:InterfaceName.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.getReferencedGUID(System.String)">
            <summary>
            Parsing a string of form GUID:Interface and returning the GUID
            </summary>
            <param name="reference">A reference in form GUID:InterfaceClass</param>
            <returns>The GUID</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.findInternalElement(System.String)">
            <summary>
            Resolve a reference to an InternalElement and return the referenced element if found. Use FindFastByID for speed optimizations.
            </summary>
            <param name="referenceGUID">The GUID of the InternalElement</param>
            <returns>The InternalElement with the specified GUID</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.CreateCAEXWrapper(System.Xml.XmlNode)">
            <summary>
            creates CAEX object out of an XML node, returning CaexBasicObject
            </summary>
            <param name="node">The node.</param>
            <returns>CAEXBasicObject</returns>
            <exception cref="T:System.ArgumentException">Don't know how to wrap XML node of type  + caexTypes[node.Name];node
            or</exception>
            <exception cref="T:System.ArgumentNullException">node</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.CreateAltovaWrapper(System.Xml.XmlNode)">
            <summary>
            Creates CAEX object out of an XML node, returning the altova base type
            </summary>
            <param name="node">The node.</param>
            <returns>TypeBase.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.CreateCAEXWrapper``1(System.Xml.XmlNode)">
            <summary>
            Creates the caex wrapper.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">The node.</param>
            <returns>T.</returns>
            <exception cref="T:System.ArgumentException">
            Don't know how to wrap XML node of type  + node.Name;node
            or
            </exception>
            <exception cref="T:System.ArgumentNullException">node</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.ConsistencyCheck_ClassReference(System.String)">
            <summary>
            Check if the given classPath is a valid path to an existent class in the AML file.
            </summary>
            <param name="classPath">The class path to check for validity.</param>
            <returns>True if a class at the given path exists, else false.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.Insert_TypeBaseElement(Altova.Xml.TypeBase,System.Boolean)">
            <summary>
            Generic method to insert an element of type TypeBase in this object.
            This method could be declared as abstract, but then all inherited classes have to implement this method but not
            all inherited classes use this method.
            </summary>
            <param name="elementToInsert">an object to be inserted</param>
            <param name="asFirst">if <c>true</c>, the element is inserted as the first of it's type, otherwise as the last.</param>
            <returns><c>true</c> if successfully inserted, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.clone">
            <summary>
            Create a clone of this object via reflection. The underlying XMLNode is normally cloned and a new instance of this class is created
            via Activator.CreateInstance with the cloned xml node.
            If an object of type InternalElement should be cloned, the method create_unique copy is called instead of using reflection to automatically get new
            GUIDs assigned.
            </summary>
            <returns>A clone copy of this object</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.CloneNode(System.Boolean)">
            <summary>
            Clones the node.
            </summary>
            <param name="deepClone">if set to <c>true</c> [deep clone].</param>
            <returns>TypeBase.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.CloneNode(System.Boolean,System.Boolean)">
            <summary>
            Clones the node.
            </summary>
            <param name="deepClone">if set to <c>true</c> [deep clone].</param>
            <param name="assignNewGuidsToIEs">if set to <c>true</c> [assign new guids to i es].</param>
            <returns>TypeBase.</returns>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.AdditionalInformation">
            <summary>
            The additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.ChangeMode">
            <summary>
            The change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.Revision">
            <summary>
            The revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.Copyright2">
            <summary>
            The copyright2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.Description2">
            <summary>
            The description2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.Version2">
            <summary>
            The version2
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXBasicObject"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEXBasicObject.MemberAttribute_ChangeMode">
            <summary>
            Class MemberAttribute_ChangeMode.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberAttribute_ChangeMode.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberAttribute_ChangeMode.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberAttribute_ChangeMode.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXBasicObject.MemberAttribute_ChangeMode"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberAttribute_ChangeMode.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberAttribute_ChangeMode.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberAttribute_ChangeMode.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberAttribute_ChangeMode.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation">
            <summary>
            Class MemberElement_AdditionalInformation.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.anyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_AdditionalInformation.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright">
            <summary>
            Class MemberElement_Copyright.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.CopyrightType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>CopyrightType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>CopyrightType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>CopyrightType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Copyright.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description">
            <summary>
            Class MemberElement_Description.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.DescriptionType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>DescriptionType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>DescriptionType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>DescriptionType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Description.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision">
            <summary>
            Class MemberElement_Revision.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.RevisionType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>RevisionType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>RevisionType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>RevisionType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Revision.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version">
            <summary>
            Class MemberElement_Version.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.VersionType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>VersionType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>VersionType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>VersionType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.MemberElement_Version.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEXBasicObject.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXBasicObject.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXBasicObject.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.CAEXDocument">
            <summary>
            Class CAEXDocument is the CAEX-Wrapper for a CAEX-XmlDocument. The CAEXDocument alway has a <see cref="P:CAEX_ClassModel.CAEXDocument.CAEXFile"/> Property, containing
            the wrapped Root Node of the CAEX-XmlDocument. The CAEXDocument also provides access to CAEX-Element Dictionaries <see cref="P:CAEX_ClassModel.CAEXDocument.Tables"/> which
            can be used for key-based fast access to CAEX-Elements. These Tables are also used for Document Validation.
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.CAEXDocument.CurrentDocument">
            <summary>
            Gets or sets the current document.
            </summary>
            <value>The current document.</value>
        </member>
        <member name="F:CAEX_ClassModel.CAEXDocument.caexFile">
            <summary>
            The caex file
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXDocument.caexModel">
            <summary>
            The caex model
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.#ctor(CAEX_ClassModel.CAEX_ClassModel2)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXDocument"/> class.
            </summary>
            <param name="caexModel">The caex model.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXDocument.ReferencedDocuments">
            <summary>
            Gets the referenced documents of this instance. Referenced Documents are all documents, which are referenced in an ExternalReference
            and loaded from externalReferences. The referenced documents can be loaded with <see cref="M:CAEX_ClassModel.ExternalReferenceType.LoadOrGetReferencedDocument"/>. 
            </summary>
            <value>The referenced documents.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXDocument.CAEXFile">
            <summary>
            This is the root element of a CAEX file.
            </summary>
            <value>The caex file.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXDocument.Tables">
            <summary>
            Gets the Tables for fast access to CAEX-Elements. These Tables are also used for
            the Document Validation. To validate a Document, all Tables have to be updated, if they are
            not permanently managed, with a call to <see cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/>. For permanent
            Administration the methods <see cref="M:CAEX_ClassModel.Validation.CAEXTables.AddCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/> and <see cref="M:CAEX_ClassModel.Validation.CAEXTables.RemoveCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/>
            can be used.
            </summary>
            <value>The tables.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.LoadFromBinary(System.Byte[])">
            <summary>
            Loading a CAEX file from the specified Byte-Array.
            </summary>
            <param name="binary">The CAEX file to load</param>
            <returns>A CAEXDocument containing the CAEX-Nodes</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">No root element found! File not valid</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.LoadFromFile(System.String)">
            <summary>
            Loading an CAEX file from the specified location.
            </summary>
            <param name="filename">The CAEX file to load</param>
            <returns>A CAEXDocument containing the file information</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">No root element found! File not valid</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.LoadFromStream(System.IO.Stream)">
            <summary>
            A CAEX_ClassModel is loaded from an Input-Stream with UTF8-Encoding
            </summary>
            <param name="inStream">XML-Formatted Input-Stream</param>
            <returns>A CAEXDocument containing the CAEX-Nodes</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">No root element 'CAEXFile' found! File not valid</exception>
            <exception cref="T:System.ArgumentException">No Input Data to read!</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.LoadFromString(System.String)">
            <summary>
            Loading an CAEX file from the specified string.
            </summary>
            <param name="XmlString">The CAEX file to load</param>
            <returns>A CAEXDocument containing the CAEX-Nodes</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">No root element 'CAEXFile' found! File not valid</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.ValidateAll">
            <summary>
            Get Validation Information for all elements, which have validation issues. The
            <see cref="T:CAEX_ClassModel.Validation.ValidationElement"/> provides detailed information about available Repair
            Options and an additional Information Text. This Method will block, if any
            Update-Tasks are pending in the <see cref="P:CAEX_ClassModel.CAEXDocument.Tables"/> Instance.
            </summary>
            <returns>
            Validation Information for CAEXObjects. An Element may have more than one
            ValidationElement associated to it.
            </returns>
            <example>
            This sample shows how to validate a document and invoke the repair of all
            Elements found with a Double ID
            <code>
            {
             CAEXDocument document = CAEXDocument.LoadFromFile ("myDoc.aml")
             document.Tables.UpdateAllTables();
             foreach ( var isValidated in document.ValidateAll())
             {
                if (isValidated.AvailableRepairOptions.HasFlag (RepairTypeEnum.GenerateUniqueIDForDoubles))
                {
                    document.Repair (isValidated, RepairTypeEnum.GenerateUniqueIDForDoubles);
                }
             }
            }
            </code>
            </example>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.Repair(CAEX_ClassModel.Validation.ValidationElement,CAEX_ClassModel.Validation.RepairTypeEnum)">
            <summary>
            Repairs the specified validated element. This Method will block, if any
            Update-Tasks are pending in the <see cref="P:CAEX_ClassModel.CAEXDocument.Tables"/> Instance.
            </summary>
            <param name="validatedElement">
            The validated element.
            </param>
            <param name="selectedRepairOption">
            The selected repair option.
            </param>
            <returns>
            <c>true</c> if Element has been repaired, <c>false</c> otherwise.
            </returns>
            <seealso cref="M:CAEX_ClassModel.CAEXDocument.ValidateAll"/>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.ValidateIDsAndNames">
            <summary>
            Gets all MetaData-Validation Occurrences, all ID-Validation Occurrences and all
            Path-Validation Occurrences. This Method will block, if any
            Update-Tasks are pending in the <see cref="P:CAEX_ClassModel.CAEXDocument.Tables"/> Instance.
            </summary>
            <returns>
            IEnumerable&lt;ValidationElement&gt;.
            </returns>
            <remarks>This Method should be used instead of the <see cref="M:CAEX_ClassModel.CAEXFileType.UpdateCAEXObjectHashListsWithValidation(System.Collections.Generic.Dictionary{System.String,CAEX_ClassModel.CAEXBasicObject}@,System.Boolean)"/> if
            only ID- and Name related issues should be detected in the CAEX-Document.</remarks>
            <seealso cref="M:CAEX_ClassModel.CAEXDocument.ValidateAll"/>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.ValidateReferences">
            <summary>
            Validates all references to CAEX-Objects via an ID-Attribute or a CAEX-Path. This Method will block, if any
            Update-Tasks are pending in the <see cref="P:CAEX_ClassModel.CAEXDocument.Tables"/> Instance.
            </summary>
            <returns>
            an IEnumerable&lt;ValidationElement&gt; of all detected Reference related validation issues.
            </returns>
            <seealso cref="M:CAEX_ClassModel.CAEXDocument.ValidateAll"/>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.New_CAEXDocument">
            <summary>
            Creation of a new CAEX file. The CAEX root element CAEXFile is automatically added to the document.
            Also adds Additional Information "AutomationMLVersion=2.0"
            </summary>
            <returns>An empty CAEX file with only the root element CAEXFile</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.SaveToFile(System.String,System.Boolean)">
            <summary>
            Saves the current document to the specified file path.
            </summary>
            <param name="filename">The file path to save the document to.</param>
            <param name="prettyPrint">Set to true, if pretty printing is desired</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.SaveToString(System.Boolean)">
            <summary>
            Returns a String, containing the current document's xml text.
            </summary>
            <param name="prettyPrint">Set to true, if pretty printing is desired</param>
            <returns>Ascii string of XML of the Document</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.SaveToStream(System.Boolean)">
            <summary>
            gets a binary Stream, containing the current document's xml with UT8 Encoding.
            </summary>
            <param name="prettyPrint">Set to true, if pretty printing is desired</param>
            <returns>The binary formatted Stream, containing the XML of the Document.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.SaveToByteArray(System.Boolean)">
            <summary>
            gets a Byte Array, containing the current document's xml with UT8 Encoding.
            </summary>
            <param name="prettyPrint">Set to true, if pretty printing is desired</param>
            <returns>Byte Array of XML Text of the Document</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.Dispose">
            <summary>
            Führt anwendungsspezifische Aufgaben durch, die mit der Freigabe, der Zurückgabe oder dem Zurücksetzen von nicht verwalteten Ressourcen zusammenhängen.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:CAEX_ClassModel.CAEXDocument"/> class.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.TablesForDocument(System.Xml.XmlDocument)">
            <summary>
            Gets the Tables for the CAEXDocument, which is a Wrapper around the specified XmlDocument.
            </summary>
            <param name="doc">The XmlDocument </param>
            <returns>Managed CAEXTables for the CAEXDocument, wrapping this XmlDocument.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.CaexDocument(System.Xml.XmlDocument)">
            <summary>
            Gets the CAEXDocument, which is a Wrapper around the specified XmlDocument.
            </summary>
            <param name="doc">The XmlDocument </param>
            <returns>Managed CAEXTables for the CAEXDocument, wrapping this XmlDocument.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXDocument.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="isManaged"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEXFileType">
            <summary>
               The CAEXFileType class is the CAEX-Wrapper around the CAEX-Element 'CAEXFile',
               which is the Root-Element in any <see cref="T:CAEX_ClassModel.CAEXDocument"/>. The CAEXFileType
               provides Methods to insert and order children as it is required by the
               CAEX-Schema. Until Version 2.1 of the AMLEngine, the CAEXFileType has an
               associated set of HashTables for fast access. From version 3.0, these Tables
               have been moved to the <see cref="T:CAEX_ClassModel.CAEXDocument"/>. It is still possible to
               access the tables from here, but the access is internally redirected to the
               CAEXDocument. The CAEXFileType can be set to enable event handling <see
               cref="M:CAEX_ClassModel.CAEXFileType.EnableEventHandling(System.Boolean)"/>. If this is set to true, CAEXObjects
               can be registered
               - as example <see cref="M:CAEX_ClassModel.CAEXFileType.RegisterCaexObjectsForNodeInsertedEvent(System.Xml.XmlNode,System.Boolean,System.Xml.XmlNodeChangedEventHandler)"/>
                 - to receive changed events when the XmlData has been modified.
            </summary>
            <summary>
            Class CAEXFileType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.EventKey">
            <summary>
               The event key
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.EventsEnabled">
            <summary>
               The events enabled
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.RegisteredCaexObjectsForNodeInsertedEvent">
            <summary>
               The registered caex objects for node inserted event
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.RegisteredCaexObjectsForNodeRemovedEvent">
            <summary>
               The registered caex objects for node removed event
            </summary>
        </member>
        <member name="E:CAEX_ClassModel.CAEXFileType.NodeInserted">
            <summary>
               Occurs when [node inserted].
            </summary>
        </member>
        <member name="E:CAEX_ClassModel.CAEXFileType.NodeRemoved">
            <summary>
               Occurs when [node removed].
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.CaexSchemaLocation">
            <summary>
               field for CAEX Schema reference
            </summary>
            <value>The caex schema location.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.IDHashList">
            <summary>
               A list of all CAEX object instances in the whole CAEX-Document which have
               an ID, providing the pair "ID" and "CAEXObject". This was the basis for the
               fast search methods <see cref="M:CAEX_ClassModel.CAEXFileType.FindFastByID(System.String,System.Boolean)"/> until Version 2.1 of the
               AMLEngine. The update of this list is done calling the method <see
               cref="M:CAEX_ClassModel.CAEXFileType.UpdateCAEXObjectHashListsFastWithoutValidation"/> this is not done
               automatically! <remarks>This IDHashList is not used for fast search methods
               anymore. The Fast Search is based on the new <see
               cref="P:CAEX_ClassModel.Validation.CAEXTables.IDTable"/> which contains the XMLElements and not the
               CAEXWrappers around the XmlElements. It is still possible to use this
               Property, it will be rebuild from the IDTable but creates additional
               overhead to build and store the CAEXWrappers around the XmlElements.</remarks>
            </summary>
            <value>The identifier hash list.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.NumberOfAllObjects">
            <summary>
               number of all checked objects
            </summary>
            <value>The number of all objects.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.NumberOfAttributes">
            <summary>
               number of checked Attributes
            </summary>
            <value>The number of attributes.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.NumberOfInterfaceClasses">
            <summary>
               number of checked InterfaceClasses
            </summary>
            <value>The number of interface classes.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.NumberOfInterfaceInstances">
            <summary>
               Gets the number of interface instances.
            </summary>
            <value>The number of interface instances.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.NumberOfInternalElements">
            <summary>
               number of InternalElements
            </summary>
            <value>The number of internal elements.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.NumberOfLinks">
            <summary>
               number of checked Links
            </summary>
            <value>The number of links.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.NumberOfRoleClasses">
            <summary>
               number of checked RoleClasses
            </summary>
            <value>The number of role classes.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.NumberOfSystemUnitClasses">
            <summary>
               number of checked SystemUnitClasses
            </summary>
            <value>The number of system unit classes.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.PathHashList">
            <summary>
               A list of all CAEX object classes in the whole document, providing the pair
               "Path" and <see cref="T:CAEX_ClassModel.CAEXObject"/>. This was the basis for the fast search
               methods <see cref="M:CAEX_ClassModel.CAEXFileType.FindFastByPath(System.String,System.Boolean)"/> until Version 2.1 of the AMLEngine.
               The update of this list is done calling the method <see
               cref="M:CAEX_ClassModel.CAEXFileType.UpdateCAEXObjectHashListsFastWithoutValidation"/> this is not done
               automatically! <remarks>This PathHashList is not used for fast search
               methods anymore. The Fast Search is based on the new <see
               cref="P:CAEX_ClassModel.Validation.CAEXTables.PathTable"/> which contains the XMLElements and not the
               CAEXWrappers around the XmlElements. It is still possible to use this
               Property, it will be rebuild from the PathTable but creates additional
               overhead to build and store the CAEXWrappers around the
               XmlElements.</remarks><value>The path hash list.</value>
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.Tables">
            <summary>
               Gets or sets the tables.
            </summary>
            <value>The tables.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.GetFileNamePath(System.Xml.XmlElement)">
            <summary>
               Retrieves the file name including full path out of the CAEX document.
            </summary>
            <param name="CaexFileNode">The caex file node.</param>
            <returns>the file name including full path of the CAEX document</returns>
            <remarks>copied from externalization extensions</remarks>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.IterateInternalElementsForLinks(CAEX_ClassModel.InternalElementType,System.Collections.Generic.List{CAEX_ClassModel.InternalElementType})">
            <summary>
               Iterating through all InternalElements starting with the given
               InternalElement and collecting all InternalLinks
            </summary>
            <param name="internalElement">     The InternalElement to check for InternalLinks</param>
            <param name="internalElementsList">
               The list that contains a list of InternalLinks for each InternalElement
            </param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.SchemaFileStream">
            <summary>
            Get the file stream for the CAEX Schema.
            </summary>
            <returns>Stream.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.AddObjToHashList(System.Boolean,CAEX_ClassModel.CAEXObject,System.Collections.Generic.Dictionary{System.String,CAEX_ClassModel.CAEXBasicObject},System.Boolean)">
            <summary>
               This method adds a CAEX object to the hash list. If required, it performs
               validation steps and can auto repair some errors.
            </summary>
            <param name="withValidation">
               True if this method should perform validations. This is a little bit slower
               than without validation.
            </param>
            <param name="obj">               the CAEX object</param>
            <param name="iDAndNameErrorList">The i d and name error list.</param>
            <param name="autoRepair">
               true if this method shall automatically repair ID and name related issues
               wherever possible.
            </param>
            <remarks>
               With Version 3.0 of the AMLEngine the Management of the ObjectTables are
               separated from Validation. To add an object to the Tables use <see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.AddCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/>. Validation and Repair can be performed
               with <see cref="M:CAEX_ClassModel.CAEXDocument.ValidateIDsAndNames"/> and <see cref="M:CAEX_ClassModel.CAEXDocument.Repair(CAEX_ClassModel.Validation.ValidationElement,CAEX_ClassModel.Validation.RepairTypeEnum)"/>
            </remarks>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.AllElementsWithInternalLinks">
            <summary>
               Getting an enumerable of all Elements with InternalLinks of all
               InstanceHierarchies and SystemUnitClassLibraries in the CAEXFile. The
               enumeration may return InternalElements or SystemUnitClass elements.
            </summary>
            <returns>An IEnumerable with SystemUnitClasses is returned.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.AllInternalElementsWithInternalLinks">
            <summary>
               Getting an enumerable of InternalElements with InternalLinks of all
               InstanceHierarchies and SystemUnitClassLibraries in the CAEXFile.
            </summary>
            <returns>An IEnumerable with InternalElements is returned.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.CAEXPath(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
               Returns the CAEX path of this object, search able with <see
               cref="M:CAEX_ClassModel.CAEXFileType.FindFastByPath(System.String,System.Boolean)"/> methods. Examples: "plant/unit/tank" or
               GUID:interface. If the full hierarchical Path is required, use the method
               HierarchyPath instead which delivers the full node path.
            </summary>
            <param name="cObj">the CAEX object</param>
            <returns>
               For classes, it returns the XML full Node Path. For Interface Instances, it
               returns GUID:InterfaceName.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.EnableEventHandling(System.Boolean)">
            <summary>
               The XMLDocument NodeInserted and NodeRemoved Events are caught by the
               CAEXFileType Object
            </summary>
            <param name="enable">if true, the Events are caught, false otherwise</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.ExternalReferences">
            <summary>
               Enumeration Method for all ExternalReferences of the CAEXFile.
            </summary>
            <returns>IEnumerable&lt;ExternalReferenceType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.FindFastByID(System.String,System.Boolean)">
            <summary>
               Performs a document wide fast search and returns a CAEXObject given by its
               ID. This method is fast due to table support. If the actual Tables don't
               contain any Object, the <see cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/> method is
               called. If you have made unregistered changes to the document, the update
               method should be called explicit to ensure, that all Objects in the current
               Caex Document are registered.
            </summary>
            <param name="ID">the ID ob the object which is subject of the search</param>
            <param name="includeExternals">new optional parameter to enable this methods (default=<c>false</c>),
            to search in referenced documents also.
            Referenced Documents can only be considered, if they are loaded via the ExternalReference.
            </param>
            <returns>the found CAEXObject or null if not found</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.FindFastByID``1(System.String,System.Boolean)">
            <summary>
               Performs a document wide fast search and returns a CaexWrapper of the specified Parameter Type
               for the Object given by its
               ID. This method is fast due to table support. If the actual Tables don't
               contain any Object, the <see cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/> method is
               called. If you have made unregistered changes to the document, the update
               method should be called explicit to ensure, that all Objects in the current
               Caex Document are registered.
            </summary>
            <param name="ID">the ID ob the object which is subject of the search</param>
            <param name="includeExternals">new optional parameter to enable this methods (default=<c>false</c>),
            to search in referenced documents also.
            Referenced Documents can only be considered, if they are loaded via the ExternalReference.
            <see cref="M:CAEX_ClassModel.ExternalReferenceType.LoadOrGetReferencedDocument"/> </param>
            <returns>a typed CAEXWrapper for the found CAEXObject or null if not found</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.FindFastByPath(System.String,System.Boolean)">
            <summary>
               Performs a document wide fast search and returns a CAEXObject given by its
               Path, e.g. "plant/unit" or "GUID:Interface" If the actual Tables don't
               contain any Object, the <see cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/> method is
               called. If you have made unregistered changes to the document, the update
               method should be called explicit to ensure, that all Objects in the current
               Caex Document are registered.
            </summary>
            <param name="Path">the path of the object which is subject of the search</param>
            <param name="includeExternals">new optional parameter to enable this methods (default=<c>false</c>),
            to search in referenced documents also.
            Referenced Documents can only be considered, if they are loaded via the ExternalReference.
            <see cref="M:CAEX_ClassModel.ExternalReferenceType.LoadOrGetReferencedDocument"/> </param>
            <returns>the found CAEXObject or null if not found</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.FindFastByPath``1(System.String,System.Boolean)">
            <summary>
               Performs a document wide fast search and returns a CaexWrapper of the specified Parameter Type
               for the Object given by its
               Path, e.g. "plant/unit" or "GUID:Interface" If the actual Tables don't
               contain any Object, the <see cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/> method is
               called. If you have made unregistered changes to the document, the update
               method should be called explicit to ensure, that all Objects in the current
               Caex Document are registered.
            </summary>
            <param name="Path">the path of the object which is subject of the search</param>
            <param name="includeExternals">new optional parameter to enable this methods (default=<c>false</c>),
            to search in referenced documents also.
            Referenced Documents can only be considered, if they are loaded via the ExternalReference.
            <see cref="M:CAEX_ClassModel.ExternalReferenceType.LoadOrGetReferencedDocument"/> </param>
            <returns>a typed wrapper for the found CAEXObject or null if not found</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.GetAllAttributes(CAEX_ClassModel.IObjectWithAttributes)">
            <summary>
               Retrieves all attributes and child attributes as a flat list.
            </summary>
            <param name="objWithAttributes">
               The parent object containing Attributes, e.g. an InternalElement.
            </param>
            <returns>A list of Attributes.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.GetAllElementsWithInternalLinks">
            <summary>
               Getting a List of all Elements with InternalLinks of all
               InstanceHierarchies and SystemUnitClassLibraries in the CAEXFile. The List
               may contain InternalElements and SystemUnitClass elements.
            </summary>
            <returns>A List with InternalElements is returned.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.GetAllInternalElementsWithInternalLinks">
            <summary>
               Getting a List of all InternalElements with InternalLinks of all
               InstanceHierarchies and SystemUnitClassLibraries in the CAEXFile.
            </summary>
            <returns>A List with InternalElements is returned.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.GetParent(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
               This method returns the parent CAEXBasicObject of the current CAEXBasicObject.
            </summary>
            <param name="obj">the CAEX Basic Object</param>
            <returns>the parent CAEXBasicObject</returns>
            <exception cref="T:System.ArgumentNullException">node</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.getSchemaLocation">
            <summary>
               Get the CAEX Schema location of this xml document
            </summary>
            <returns>The CAEX Schema location name</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.HierarchyPath(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
               Returns the hierarchical full node path of this object, e. g.
               "plant/unit/tank" or "plant/unit/tank/interface" or
               "plant/unit/tank/attribute". If the CAEXPath is required, use the method
               Path which delivers e.g. GUID:interface.
            </summary>
            <param name="cObj">this</param>
            <returns>
               Returns the XML full Node Path. If the CAEXPath is required, use the method
               Path which delivers e.g. GUID:interface
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.Import_ExternalReference(CAEX_ClassModel.ExternalReferenceType)">
            <summary>
               Importing an ExternalReference from another document context. If another
               externalReference with the same path and the same alias Attribute exists,
               nothing is imported.
            </summary>
            <param name="externalReference">
               The externalReference to import to this document
            </param>
            <returns>New ExternalReferenceType, inserted in the CAEXFile.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.Import_InstanceHierarchy(CAEX_ClassModel.InstanceHierarchyType)">
            <summary>
               Importing an InstanceHierarchy from another document context. Unlike <see
               cref="M:CAEX_ClassModel.CAEXFileType.Insert_InstanceHierarchy(CAEX_ClassModel.InstanceHierarchyType)"/> InstanceHierarchy's that are coming from
               other files can be inserted.
            </summary>
            <param name="instanceHierarchy">
               The InstanceHierarchy to import to this document
            </param>
            <returns>New InstanceHierarchyType, inserted in the CAEXFile.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.Import_InterfaceClassLibHierarchy(CAEX_ClassModel.InterfaceClassLibType)">
            <summary>
               Importing an InterfaceClassLibHierarchy from another document context.
               Unlike <see cref="M:CAEX_ClassModel.CAEXFileType.Insert_InterfaceClassLibHierarchy(CAEX_ClassModel.InterfaceClassLibType)"/>
               InterfaceClassLibHierarchy's that are coming from other files can be inserted.
            </summary>
            <param name="interfaceClassLib">
               The InterfaceClassLibHierarchy to import to this document
            </param>
            <returns>New InterfaceClassLibType, inserted in the CAEXFile.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.Import_RoleClassLibHierarchy(CAEX_ClassModel.RoleClassLibType)">
            <summary>
               Importing a RoleClassLib from another document context. Unlike method
               Insert_RoleClassLibHierarchy(..) RoleClassLibs that are coming from other
               files can be inserted.
            </summary>
            <param name="roleClassLib">The RoleClassLib to import to this document</param>
            <returns>New RoleClass Lib, inserted in the CAEXFile</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.Import_SystemUnitClassLibHierarchy(CAEX_ClassModel.SystemUnitClassLibType)">
            <summary>
               Importing a SystemUnitClassLib from another document context. Unlike method
               Insert_SystemUnitClassLibHierarchy(..) SystemUnitClassLibs that are coming
               from other files can be inserted.
            </summary>
            <param name="systemUnitClassLib">
               The SystemUnitClassLib to import to this document
            </param>
            <returns>New SystemUnitClassLib, inserted in the CAEXFile.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.Insert_ExternalReference(CAEX_ClassModel.ExternalReferenceType)">
            <summary>
               Inserts the external reference.
            </summary>
            <param name="externalReference">The external reference.</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.Insert_InstanceHierarchy(CAEX_ClassModel.InstanceHierarchyType)">
            <summary>
               Insert an existing InstanceHierarchy to this aml file as the Last InstanceHierarchy
            </summary>
            <param name="instanceHierarchyNode">The Instance Hierarchy to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.Insert_InterfaceClassLibHierarchy(CAEX_ClassModel.InterfaceClassLibType)">
            <summary>
               Insert an existing InterfaceClassLib to this aml file as the Last InterfaceClassLib
            </summary>
            <param name="interfaceClassLibNode">The interface class lib to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.Insert_RoleClassLibHierarchy(CAEX_ClassModel.RoleClassLibType)">
            <summary>
               Insert a RoleClassLib to this aml file as the Last RoleClassLib.
            </summary>
            <param name="roleClassLib">The role class library to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.Insert_SystemUnitClassLibHierarchy(CAEX_ClassModel.SystemUnitClassLibType)">
            <summary>
               Append a SystemUnitClassLib to this aml file as the Last SystemUnitClassLib
            </summary>
            <param name="systemUnitClassLib">The system unit class library to insert.</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.InstanceHierarchies">
            <summary>
               Enumeration Method for all InstanceHierarchies of the CAEXFile.
            </summary>
            <returns>IEnumerable&lt;InstanceHierarchyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.InterfaceClassLibraries">
            <summary>
               Enumeration Method for all InterfaceClass Libraries of the CAEXFile.
            </summary>
            <returns>IEnumerable&lt;InterfaceClassLibType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.New_ExternalReferenceHierarchy(System.String,System.String)">
            <summary>
               A new ExternalReference node is added to the CAEX file.
            </summary>
            <param name="path"> The path value of this external reference</param>
            <param name="alias">The alias value of this external reference</param>
            <returns>A new ExternalReference</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.New_InstanceHierarchy(System.String)">
            <summary>
               Adding a new InstanceHierarchy to this CAEX file. The name attribute is set
               to "New InstanceHierarchy"; The Instance Hierarchy is always added as the
               last Instance Hierarchy.
            </summary>
            <param name="name">The name of the new InstanceHierarchy</param>
            <returns>A new InstanceHierarchy node</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.New_InterfaceClassLibHierarchy(System.String)">
            <summary>
               Adding a new InterfaceClassLib hierarchy node to this CAEX file.
            </summary>
            <param name="name">The name of the new InterfaceClassLibHierarchy</param>
            <returns>A new InterfaceClassLib node</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.New_RoleClassLibHierarchy(System.String)">
            <summary>
               Adding a new RoleClassLib to this CAEX file.
            </summary>
            <param name="name">The name of the RoleClassLib.</param>
            <returns>A new RoleClassLib node</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.New_SystemUnitClassLibHierarchy(System.String)">
            <summary>
               Adding a new SystemUnitClassLib Hierarchy to this CAEX file.
            </summary>
            <param name="name">The name of the new SystemUnitClassLibrary</param>
            <returns>The new SystemUnitClassLibrary</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.PreorderTraversal(System.Collections.IEnumerator,System.Func{System.Object,System.Collections.IEnumerator})">
            <summary>
               Traversal method for a hierarchical tree, with identical childSelector for
               all tree nodes. The method uses a preorder algorithm without recursion for
               the deep traversal of the complete tree.
            </summary>
            <param name="source">       The source.</param>
            <param name="childSelector">The child selector.</param>
            <returns>IEnumerable.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.RegisterCaexObjectsForNodeInsertedEvent(System.Xml.XmlNode,System.Boolean,System.Xml.XmlNodeChangedEventHandler)">
            <summary>
               Register an XMLNode Object for a NodeInserted Event in the CAEXFileTypes XMLDocument
            </summary>
            <param name="node">   the xmlNode of any CAEX-Object</param>
            <param name="add">    true: add the handler; false: remove the handler</param>
            <param name="handler">the Handler</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.RegisterCaexObjectsForNodeRemovedEvent(System.Xml.XmlNode,System.Boolean,System.Xml.XmlNodeChangedEventHandler)">
            <summary>
               Register an XMLNode Object for a NodeRemoved Event in the CAEXFileTypes XMLDocument
            </summary>
            <param name="node">   the xmlNode of any CAEX-Object</param>
            <param name="add">    true: add the handler; false: remove the handler</param>
            <param name="handler">the Handler</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.ReplaceObjectInHashList(CAEX_ClassModel.CAEXObject)">
            <summary>
               Replace the object in the hash-list, necessary if the object has got a new CAEXWrapper.
               <para>author: Josef Prinz</para>
            </summary>
            <param name="obj">The object.</param>
            <remarks>
               Old Method. Since Version 2.2 of the assembly, this method is obsolete.
            </remarks>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.RoleClassLibraries">
            <summary>
               Enumeration Method for all RoleClass Libraries of the CAEXFile.
            </summary>
            <returns>IEnumerable&lt;RoleClassLibType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.setSchemaLocation(System.String)">
            <summary>
               Sets the schema location in the CAEX File.
            </summary>
            <param name="schemaLocation">The schema location.</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.SystemUnitClassLibraries">
            <summary>
               Enumeration Method for all SystemUnitClass Libraries of the CAEXFile.
            </summary>
            <returns>IEnumerable&lt;SystemUnitClassLibType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.UpdateCAEXObjectHashListsFastWithoutValidation">
            <summary>
               Updates the Hash Lists of all CAEXObjects. This Methods has a new
               Implementation in Version 3.0 and calls the <see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/> Method, which uses additional Tables.
               The <see cref="P:CAEX_ClassModel.CAEXFileType.IDHashList"/> and <see cref="P:CAEX_ClassModel.CAEXFileType.PathHashList"/> are not used
               any more, but are still provided for downward compatibility.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.UpdateCAEXObjectHashListsWithValidation(System.Collections.Generic.Dictionary{System.String,CAEX_ClassModel.CAEXBasicObject}@,System.Boolean)">
            <summary>
               Updates the Hash Lists of all CAEXObjects and checks the consistency of the
               CAEXObjects. This Methods has a new Implementation in Version 3.0 and calls
               the <see cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/> Method, which uses additional
               Tables. The <see cref="P:CAEX_ClassModel.CAEXFileType.IDHashList"/> and <see cref="P:CAEX_ClassModel.CAEXFileType.PathHashList"/> are not
               used any more, but are still provided for downward compatibility.
            </summary>
            <param name="iDAndNameErrorList">string list with error comments</param>
            <param name="autoRepair">
               true if this method shall automatically repair ID and name related issues
               wherever possible.
            </param>
            <returns>number of errors</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.getAllChildAttributes(CAEX_ClassModel.IObjectWithAttributes,System.Collections.Generic.List{CAEX_ClassModel.AttributeType})">
            <summary>
               Gets all child attributes.
            </summary>
            <param name="objWithAttribute">The object with attribute.</param>
            <param name="attList">         The att list.</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.InsertInterfaceClassLibInternal(System.Xml.XmlNode)">
            <summary>
               Appending at correct position due to schema.
            </summary>
            <param name="newInterfaceClassLibHierarchyNode">
               The new interface class library hierarchy node.
            </param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.InsertRoleClassLibInternal(System.Xml.XmlNode)">
            <summary>
               Insert a role class lib internal.
            </summary>
            <param name="roleClassLibNode">The role class lib node to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.OwnerDocumentNodeInserted(System.Object,System.Xml.XmlNodeChangedEventArgs)">
            <summary>
               Owners the document node inserted.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">
               The <see cref="T:System.Xml.XmlNodeChangedEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.OwnerDocumentNodeRemoved(System.Object,System.Xml.XmlNodeChangedEventArgs)">
            <summary>
               Owners the document node removed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">
               The <see cref="T:System.Xml.XmlNodeChangedEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.ExternalReference">
            <summary>
            The external reference
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.FileName">
            <summary>
            The file name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.InstanceHierarchy">
            <summary>
            The instance hierarchy
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.InterfaceClassLib">
            <summary>
            The interface class library
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.RoleClassLib">
            <summary>
            The role class library
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.SchemaVersion">
            <summary>
            The schema version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.SystemUnitClassLib">
            <summary>
            The system unit class library
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXFileType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEXFileType.MemberAttribute_FileName">
            <summary>
            Class MemberAttribute_FileName.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberAttribute_FileName.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberAttribute_FileName.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberAttribute_FileName.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXFileType.MemberAttribute_FileName"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberAttribute_FileName.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberAttribute_FileName.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberAttribute_FileName.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberAttribute_FileName.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEXFileType.MemberAttribute_SchemaVersion">
            <summary>
            Class MemberAttribute_SchemaVersion.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberAttribute_SchemaVersion.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberAttribute_SchemaVersion.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberAttribute_SchemaVersion.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXFileType.MemberAttribute_SchemaVersion"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberAttribute_SchemaVersion.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberAttribute_SchemaVersion.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberAttribute_SchemaVersion.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberAttribute_SchemaVersion.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference">
            <summary>
            Class MemberElement_ExternalReference.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.ExternalReferenceType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>ExternalReferenceType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>ExternalReferenceType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>ExternalReferenceType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_ExternalReference.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy">
            <summary>
            Class MemberElement_InstanceHierarchy.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.InstanceHierarchyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>InstanceHierarchyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>InstanceHierarchyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>InstanceHierarchyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InstanceHierarchy.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib">
            <summary>
            Class MemberElement_InterfaceClassLib.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.InterfaceClassLibType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>InterfaceClassLibType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>InterfaceClassLibType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>InterfaceClassLibType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_InterfaceClassLib.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib">
            <summary>
            Class MemberElement_RoleClassLib.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.RoleClassLibType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>RoleClassLibType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>RoleClassLibType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>RoleClassLibType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_RoleClassLib.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib">
            <summary>
            Class MemberElement_SystemUnitClassLib.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.SystemUnitClassLibType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>SystemUnitClassLibType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>SystemUnitClassLibType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>SystemUnitClassLibType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.MemberElement_SystemUnitClassLib.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEXFileType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXFileType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXFileType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.CAEXNodeEqualityComparer`1">
            <summary>
            Class CAEXNodeEqualityComparer Compares the Nodes of two CAEX Objects
            </summary>
            <typeparam name="T">CAEX Object type</typeparam>
        </member>
        <member name="M:CAEX_ClassModel.CAEXNodeEqualityComparer`1.Equals(`0,`0)">
            <summary>
            Determines, if objects are equal
            </summary>
            <param name="x">The first object to compare with generic Type "T".</param>
            <param name="y">The second object to compare with generic Type "T".</param>
            <returns>true, if objects are equal, otherwise false.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXNodeEqualityComparer`1.GetHashCode(`0)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">the <see cref="T:System.Object" />, to return a Hash code.</param>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:CAEX_ClassModel.CAEXObject">
            <summary>
            Class CAEXObject.
            </summary>
            <summary>
            Class CAEXObject.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXObject.GUID_FORMAT">
            <summary>
            Specifies the format used for GUIDs. Format "D" is NOT adding {} around the GUID
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXObject.ToString">
            <summary>
            Returning the  name attribute of this element as string representation of the object
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXObject.SetDescription(System.String)">
            <summary>
            This method sets a description. If no description exists, it is created.
            </summary>
            <param name="description">the description</param>
        </member>
        <member name="F:CAEX_ClassModel.CAEXObject.ID">
            <summary>
            The identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXObject.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXObject.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXObject"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXObject.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXObject.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEXObject.MemberAttribute_ID">
            <summary>
            Class MemberAttribute_ID.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXObject.MemberAttribute_ID.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXObject.MemberAttribute_ID.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXObject.MemberAttribute_ID.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXObject.MemberAttribute_ID"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXObject.MemberAttribute_ID.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXObject.MemberAttribute_ID.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXObject.MemberAttribute_ID.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXObject.MemberAttribute_ID.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEXObject.MemberAttribute_Name">
            <summary>
            Class MemberAttribute_Name.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXObject.MemberAttribute_Name.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXObject.MemberAttribute_Name.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXObject.MemberAttribute_Name.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXObject.MemberAttribute_Name"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXObject.MemberAttribute_Name.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEXObject.MemberAttribute_Name.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEXObject.MemberAttribute_Name.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXObject.MemberAttribute_Name.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEXObject.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXObject.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEXObject.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.CAEXTypeDict">
            <summary>
            Class CAEXTypeDict is a Dictionary of all CAEX - WrapperClass Types, defined in the CAEX_ClassModel.
            The TypeName is used as a key. This Class is a singleton.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXTypeDict.Instance">
            <summary>
            The singleton instance of the CAEXType Dictionary
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXTypeDict.Creators">
            <summary>
            A dictinory, containing creation methods for caex elements, the typename is used as a dictionary key
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXTypeDict.#cctor">
            <summary>
            Initialization of the Type Dictionary
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXTypeDict.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:CAEX_ClassModel.CAEXTypeDict"/> class from being created.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXTypeDict.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.Dictionary"></see> contains the specified key. 
            </summary>
            <param name="caexTagName">The key to locate in the <see cref="T:System.Collections.Generic.Dictionary"></see>. The caexTagName is concatenated 
            with the "Type" extension, to match a Type name of a CAEX Wrapper Class.</param>
            <returns>true if the <see cref="T:System.Collections.Generic.Dictionary"></see> contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXTypeDict.TryGetValue(System.String,System.Type@)">
            <summary>
            Tries to  get the value.
            </summary>
            <param name="caexTagName">Name of the caex tag.</param>
            <param name="t">The type.</param>
            <returns><c>true</c> if type is registered, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXTypeDict.Key(System.String)">
            <summary>
            The Key for Dictionary access
            </summary>
            <param name="caexTagName">Name of the caex tag.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:CAEX_ClassModel.CAEXTypeDict.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="caexTagName">The key. The caexTagName is concatenated 
            with the "Type" extension, to match a Type name of a CAEX Wrapper Class.</param>
            <returns>Type.</returns>
        </member>
        <member name="T:CAEX_ClassModel.xs.anySimpleType">
            <summary>
            Class anySimpleType.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.anySimpleType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.anySimpleType"/> class.
            </summary>
            <param name="initializationNode">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.anySimpleType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.anySimpleType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.anyType">
            <summary>
            Class anyType.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.anyType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.anyType"/> class.
            </summary>
            <param name="initialNode">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.anyType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="P:CAEX_ClassModel.xs.anyType.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.anyType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.anyType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.anyType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.anyType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.xs.anyURI">
            <summary>
            Class anyURI.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.anyURI.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.anyURI"/> class.
            </summary>
            <param name="initialNode">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.anyURI.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.anyURI.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.base64Binary">
            <summary>
            Class base64Binary.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.base64Binary.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.base64Binary"/> class.
            </summary>
            <param name="initialNode">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.base64Binary.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.base64Binary.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.boolean">
            <summary>
            Class boolean.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.boolean.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.boolean"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.boolean.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.boolean.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.byte2">
            <summary>
            Class byte2.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.byte2.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.byte2"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.byte2.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.byte2.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.date">
            <summary>
            Class date.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.date.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.date"/> class.
            </summary>
            <param name="initialNode">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.date.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.date.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.dateTime">
            <summary>
            Class dateTime.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.dateTime.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.dateTime"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.dateTime.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.dateTime.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.dateTimeType">
            <summary>
            Class dateTimeType.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.dateTimeType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.dateTimeType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.dateTimeType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="P:CAEX_ClassModel.xs.dateTimeType.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.dateTimeType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.dateTimeType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.dateTimeType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.dateTimeType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.xs.decimal2">
            <summary>
            Class decimal2.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.decimal2.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.decimal2"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.decimal2.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.decimal2.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.double2">
            <summary>
            Class double2.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.double2.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.double2"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.double2.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.double2.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.duration">
            <summary>
            Class duration.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.duration.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.duration"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.duration.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.duration.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.ENTITIES">
            <summary>
            Class ENTITIES.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.ENTITIES.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.ENTITIES"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.ENTITIES.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.ENTITIES.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.ENTITY">
            <summary>
            Class ENTITY.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.ENTITY.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.ENTITY"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.ENTITY.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.ENTITY.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.float2">
            <summary>
            Class float2.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.float2.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.float2"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.float2.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.float2.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.gDay">
            <summary>
            Class gDay.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.gDay.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.gDay"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.gDay.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.gDay.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.gMonth">
            <summary>
            Class gMonth.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.gMonth.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.gMonth"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.gMonth.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.gMonth.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.gMonthDay">
            <summary>
            Class gMonthDay.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.gMonthDay.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.gMonthDay"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.gMonthDay.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.gMonthDay.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.gYear">
            <summary>
            Class gYear.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.gYear.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.gYear"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.gYear.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.gYear.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.gYearMonth">
            <summary>
            Class gYearMonth.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.gYearMonth.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.gYearMonth"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.gYearMonth.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.gYearMonth.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.hexBinary">
            <summary>
            Class hexBinary.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.hexBinary.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.hexBinary"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.hexBinary.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.hexBinary.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.ID">
            <summary>
            Class ID.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.ID.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.ID"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.ID.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.ID.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.IDREF">
            <summary>
            Class IDREF.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.IDREF.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.IDREF"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.IDREF.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.IDREF.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.IDREFS">
            <summary>
            Class IDREFS.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.IDREFS.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.IDREFS"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.IDREFS.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.IDREFS.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.int2">
            <summary>
            Class int2.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.int2.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.int2"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.int2.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.int2.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.integer">
            <summary>
            Class integer.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.integer.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.integer"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.integer.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.integer.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.language">
            <summary>
            Class language.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.language.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.language"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.language.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.language.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.long2">
            <summary>
            Class long2.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.long2.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.long2"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.long2.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.long2.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.Name">
            <summary>
            Class Name.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.Name.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.Name"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.Name.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.Name.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.NCName">
            <summary>
            Class NCName.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.NCName.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.NCName"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.NCName.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.NCName.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.negativeInteger">
            <summary>
            Class negativeInteger.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.negativeInteger.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.negativeInteger"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.negativeInteger.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.negativeInteger.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.NMTOKEN">
            <summary>
            Class NMTOKEN.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.NMTOKEN.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.NMTOKEN"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.NMTOKEN.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.NMTOKEN.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.NMTOKENS">
            <summary>
            Class NMTOKENS.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.NMTOKENS.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.NMTOKENS"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.NMTOKENS.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.NMTOKENS.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.nonNegativeInteger">
            <summary>
            Class nonNegativeInteger.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.nonNegativeInteger.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.nonNegativeInteger"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.nonNegativeInteger.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.nonNegativeInteger.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.nonPositiveInteger">
            <summary>
            Class nonPositiveInteger.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.nonPositiveInteger.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.nonPositiveInteger"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.nonPositiveInteger.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.nonPositiveInteger.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.normalizedString">
            <summary>
            Class normalizedString.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.normalizedString.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.normalizedString"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.normalizedString.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.normalizedString.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.NOTATION">
            <summary>
            Class NOTATION.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.NOTATION.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.NOTATION"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.NOTATION.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.NOTATION.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.positiveInteger">
            <summary>
            Class positiveInteger.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.positiveInteger.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.positiveInteger"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.positiveInteger.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.positiveInteger.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.QName">
            <summary>
            Class QName.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.QName.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.QName"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.QName.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.QName.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.short2">
            <summary>
            Class short2.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.short2.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.short2"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.short2.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.short2.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.string2">
            <summary>
            Class string2.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.string2.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.string2"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.string2.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.string2.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.stringType">
            <summary>
            Class stringType.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.stringType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.stringType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.stringType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="P:CAEX_ClassModel.xs.stringType.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.stringType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.stringType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.stringType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.stringType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.xs.time">
            <summary>
            Class time.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.time.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.time"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.time.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.time.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.token">
            <summary>
            Class token.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.token.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.token"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.token.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.token.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.unsignedByte">
            <summary>
            Class unsignedByte.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.unsignedByte.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.unsignedByte"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.unsignedByte.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.unsignedByte.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.unsignedInt">
            <summary>
            Class unsignedInt.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.unsignedInt.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.unsignedInt"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.unsignedInt.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.unsignedInt.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.unsignedLong">
            <summary>
            Class unsignedLong.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.unsignedLong.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.unsignedLong"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.unsignedLong.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.unsignedLong.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.xs.unsignedShort">
            <summary>
            Class unsignedShort.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.xs.unsignedShort.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.xs.unsignedShort"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.xs.unsignedShort.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.xs.unsignedShort.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.AttributeDataTypeType">
            <summary>
            Class AttributeDataTypeType.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeDataTypeType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeDataTypeType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeDataTypeType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.AttributeDataTypeType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.AttributeNameMappingType">
            <summary>
            Class AttributeNameMappingType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeNameMappingType.RoleAttributeName">
            <summary>
            The role attribute name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeNameMappingType.SystemUnitAttributeName">
            <summary>
            The system unit attribute name
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeNameMappingType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXBasicObject" /> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeNameMappingType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.AttributeNameMappingType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_RoleAttributeName">
            <summary>
            Class MemberAttribute_RoleAttributeName.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_RoleAttributeName.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_RoleAttributeName.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_RoleAttributeName.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_RoleAttributeName"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_RoleAttributeName.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_RoleAttributeName.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_RoleAttributeName.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_RoleAttributeName.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_SystemUnitAttributeName">
            <summary>
            Class MemberAttribute_SystemUnitAttributeName.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_SystemUnitAttributeName.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_SystemUnitAttributeName.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_SystemUnitAttributeName.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_SystemUnitAttributeName"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_SystemUnitAttributeName.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_SystemUnitAttributeName.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_SystemUnitAttributeName.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AttributeNameMappingType.MemberAttribute_SystemUnitAttributeName.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.AttributeNameMappingType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AttributeNameMappingType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.AttributeNameMappingType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.CAEX_ClassModel2">
            <summary>
            Class CAEX_ClassModel2.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel2.CAEXFile">
            <summary>
            The caex file
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEX_ClassModel2"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEX_ClassModel2.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.CreateDocument">
            <summary>
            Creates the document.
            </summary>
            <returns>CAEX_ClassModel2.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.CreateDocument(System.String)">
            <summary>
            Creates the document.
            </summary>
            <param name="encoding">The encoding.</param>
            <returns>CAEX_ClassModel2.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.LoadFromBinary(System.Byte[])">
            <summary>
            Loads from binary.
            </summary>
            <param name="binary">The binary.</param>
            <returns>CAEX_ClassModel2.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.LoadFromFile(System.String)">
            <summary>
            Loads from file.
            </summary>
            <param name="filename">The filename.</param>
            <returns>CAEX_ClassModel2.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.LoadFromString(System.String)">
            <summary>
            Loads from string.
            </summary>
            <param name="xmlString">The xml string.</param>
            <returns>CAEX_ClassModel2.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.SaveToFile(System.String,System.Boolean)">
            <summary>
            Saves the document to file with the specified name.
            </summary>
            <param name="filename">The filename.</param>
            <param name="prettyPrint">if set to <c>true</c> [pretty print].</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.SaveToFileWithLineEnd(System.String,System.Boolean,System.String)">
            <summary>
            Saves the document to file with line end.
            </summary>
            <param name="filename">The filename.</param>
            <param name="prettyPrint">if set to <c>true</c> [pretty print].</param>
            <param name="lineend">The lineend.</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.SaveToFile(System.String,System.Boolean,System.String)">
            <summary>
            Saves the document to file with the specified name.
            </summary>
            <param name="filename">The filename.</param>
            <param name="prettyPrint">if set to <c>true</c> [pretty print].</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.SaveToFile(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Saves the document to file with the specified name.
            </summary>
            <param name="filename">The filename.</param>
            <param name="prettyPrint">if set to <c>true</c> [pretty print].</param>
            <param name="encoding">The encoding.</param>
            <param name="lineend">The lineend.</param>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.SaveToString(System.Boolean)">
            <summary>
            Returns the document's full XmlText as a string
            </summary>
            <param name="prettyPrint">if set to <c>true</c> [pretty print].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.SaveToString(System.Boolean,System.Boolean)">
            <summary>
            Saves to string.
            </summary>
            <param name="prettyPrint">if set to <c>true</c> [pretty print].</param>
            <param name="omitXmlDecl">if set to <c>true</c> [omit XML decl].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.SaveToBinary(System.Boolean)">
            <summary>
            Gets the document's binary representation in a byte array.
            </summary>
            <param name="prettyPrint">if set to <c>true</c> [pretty print].</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.SaveToBinary(System.Boolean,System.String)">
            <summary>
            Gets the document's binary representation in a byte array.
            </summary>
            <param name="prettyPrint">if set to <c>true</c> [pretty print].</param>
            <param name="encoding">The encoding.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.SaveToBinary(System.Boolean,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the document's binary representation in a byte array.
            </summary>
            <param name="prettyPrint">if set to <c>true</c> [pretty print].</param>
            <param name="encoding">The encoding.</param>
            <param name="bBigEndian">if set to <c>true</c> [b big endian].</param>
            <param name="bBOM">if set to <c>true</c> [b bom].</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.SetDTDLocation(System.String)">
            <summary>
            Sets the DTD location.
            </summary>
            <param name="dtdLocation">The DTD location.</param>
            <exception cref="T:System.InvalidOperationException">SetDTDLocation requires a root element.</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.SetSchemaLocation(System.String)">
            <summary>
            Sets the schema location.
            </summary>
            <param name="schemaLocation">The schema location.</param>
            <exception cref="T:System.InvalidOperationException">SetSchemaLocation requires a root element.</exception>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile">
            <summary>
            Class MemberElement_CAEXFile.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.CAEXFileType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>CAEXFileType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>CAEXFileType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>CAEXFileType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.MemberElement_CAEXFile.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.CAEX_ClassModel2.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_ClassModel2.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.CAEX_ClassModel2.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.CopyrightType">
            <summary>
            Class CopyrightType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CopyrightType.ChangeMode">
            <summary>
            The change mode
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CopyrightType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CopyrightType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.CopyrightType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.CopyrightType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CopyrightType.MemberAttribute_ChangeMode">
            <summary>
            Class MemberAttribute_ChangeMode.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CopyrightType.MemberAttribute_ChangeMode.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CopyrightType.MemberAttribute_ChangeMode.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CopyrightType.MemberAttribute_ChangeMode.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CopyrightType.MemberAttribute_ChangeMode"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.CopyrightType.MemberAttribute_ChangeMode.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.CopyrightType.MemberAttribute_ChangeMode.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.CopyrightType.MemberAttribute_ChangeMode.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.CopyrightType.MemberAttribute_ChangeMode.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CopyrightType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CopyrightType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.CopyrightType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.DescriptionType">
            <summary>
            Class DescriptionType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.DescriptionType.ChangeMode">
            <summary>
            The change mode
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.DescriptionType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.DescriptionType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.DescriptionType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.DescriptionType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.DescriptionType.MemberAttribute_ChangeMode">
            <summary>
            Class MemberAttribute_ChangeMode.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.DescriptionType.MemberAttribute_ChangeMode.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.DescriptionType.MemberAttribute_ChangeMode.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.DescriptionType.MemberAttribute_ChangeMode.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.DescriptionType.MemberAttribute_ChangeMode"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.DescriptionType.MemberAttribute_ChangeMode.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.DescriptionType.MemberAttribute_ChangeMode.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.DescriptionType.MemberAttribute_ChangeMode.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.DescriptionType.MemberAttribute_ChangeMode.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.DescriptionType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.DescriptionType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.DescriptionType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.ExternalInterfaceType">
            <summary>
            Class ExternalInterfaceType.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.ExternalInterfaceType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InterfaceClassType" /> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.ExternalInterfaceType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.ExternalInterfaceType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.ExternalInterfaceType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.ExternalInterfaceType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.ExternalInterfaceType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.ExternalReferenceType">
            <summary>
            Class ExternalReferenceType.
            </summary>
            <summary>
            Class ExternalReferenceType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.ExternalReferenceType.Alias">
            <summary>
            The alias
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.ExternalReferenceType.Path">
            <summary>
            The path
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.ExternalReferenceType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.ExternalReferenceType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Alias">
            <summary>
            Class MemberAttribute_Alias.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Alias.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Alias.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Alias.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Alias"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Alias.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Alias.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Alias.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Alias.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Path">
            <summary>
            Class MemberAttribute_Path.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Path.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Path.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Path.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Path"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Path.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Path.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Path.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.MemberAttribute_Path.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.ExternalReferenceType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.ExternalReferenceType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.ReferenceIsEqual(CAEX_ClassModel.ExternalReferenceType)">
            <summary>
            Test, if this ExternalReference and the specified external Reference
            have the same Alias- and Path-Values.
            </summary>
            <param name="externalReference">The external reference.</param>
            <returns><c>true</c> if the References are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.LoadToDocument(System.Boolean)">
            <summary>
            Loads the external reference to the current CAEXDocument. Only those Libraries from the external reference file are loaded,
            which do not already exist in the current document. This Method doesn't change any references, which use the alias of this
            external reference. Use the Merge Reference Method <see cref="M:CAEX_ClassModel.ExternalReferenceType.ResolveReference"/> to achieve this.
            </summary>
            <param name="keepReference">if set to <c>false</c>, the external reference is removed from the current document.</param>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.GetFileNamePath(CAEX_ClassModel.CAEXDocument)">
            <summary>
            Retrieves the file name including full path out of the CAEX document.
            </summary>
            <param name="doc">a CAEXDocument</param>
            <returns>the file name including full path of the CAEX document</returns>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.LoadOrGetReferencedDocument">
            <summary>
            Loads the external reference in a new CAEXDocument, which will be added to the  <see cref="P:CAEX_ClassModel.CAEXDocument.ReferencedDocuments"/>
            of the current CAEXDocument. The new CAEXDocument is a separate document and no libraries are merged to the current document.
            This Method doesn't change any references, which use the alias of this
            external reference. Use the Merge Reference Method <see cref="M:CAEX_ClassModel.ExternalReferenceType.ResolveReference"/> to achieve this. 
            If this instance doesn't have an alias, the document is not loaded. If a referenced document for this alias already exists,
            the existing document is returned.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.ExternalReferenceType.ResolveReference">
            <summary>
            Resolves all references, which use the alias of this External Reference. The Libraries, contained in the External File
            are merged into this document.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InstanceHierarchyType">
            <summary>
            Class InstanceHierarchyType.
            </summary>
            <summary>
            Class InstanceHierarchyType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InstanceHierarchyType.InternalElement">
            <summary>
            The internal element
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InstanceHierarchyType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.InstanceHierarchyType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement">
            <summary>
            Class MemberElement_InternalElement.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.InternalElementType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>InternalElementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>InternalElementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>InternalElementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.MemberElement_InternalElement.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.InstanceHierarchyType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.InstanceHierarchyType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.New_InternalElement(System.String)">
            <summary>
            Adding a new InternalElement to this InstanceHierarchy.;
            </summary>
            <param name="internalElementName">Name of the internal element.</param>
            <returns>A new InternalElement</returns>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.Insert_InternalElement(CAEX_ClassModel.InternalElementType)">
            <summary>
            Appending an InternalElement to this InstanceHierarchy.
            </summary>
            <param name="internalElement">The InternalElement to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.InternalElementChildren">
            <summary>
            Gets the subordinate <see cref="T:CAEX_ClassModel.InternalElementType"/> Objects in the InstanceHierarchy.
            Only direct children are returned.
            </summary>
            <returns>IEnumerable&lt;InternalElementType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.InternalElementDescendants">
            <summary>
            Gets all descendant <see cref="T:CAEX_ClassModel.InternalElementType"/> Objects in the InstanceHierarchy.
            InternalElements on all levels are returned.
            </summary>
            <returns>IEnumerable&lt;InternalElementType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.Insert_NewInstance(Altova.Xml.TypeBase)">
            <summary>
            Appending a class instance object to this hierarchy. Only instance objects of  <see cref="T:CAEX_ClassModel.InternalElementType"/> 
            are inserted. This is an alternative call for <see cref="M:CAEX_ClassModel.InstanceHierarchyType.Insert_Element(Altova.Xml.TypeBase)"/>. 
            </summary>
            <param name="newInstanceObject">A class instance.</param>
        </member>
        <member name="M:CAEX_ClassModel.InstanceHierarchyType.Insert_Element(Altova.Xml.TypeBase)">
            <summary>
            Appending a class instance object to this hierarchy. Only instance objects of  <see cref="T:CAEX_ClassModel.InternalElementType"/> 
            are inserted. This is an alternative call for <see cref="M:CAEX_ClassModel.InstanceHierarchyType.Insert_NewInstance(Altova.Xml.TypeBase)"/>. 
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <returns><c>true</c> if successfully inserted, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceClassLibType">
            <summary>
            Class InterfaceClassLibType.
            </summary>
            <summary>
            Class InterfaceClassLibType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceClassLibType.InterfaceClass">
            <summary>
            The interface class
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InterfaceClassLibType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassLibType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass">
            <summary>
            Class MemberElement_InterfaceClass.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.InterfaceFamilyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>InterfaceFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>InterfaceFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>InterfaceFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.MemberElement_InterfaceClass.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceClassLibType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassLibType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.New_InterfaceClass(System.String)">
            <summary>
            Adding a new Interface class to this object.
            </summary>
            <param name="name">The name of the InterfaceClass</param>
            <returns>The new InterfaceClass</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.Insert_InterfaceClass(CAEX_ClassModel.InterfaceFamilyType)">
            <summary>
            Appends the interface class.
            </summary>
            <param name="interfaceFamilyType">Type of the interface family.</param>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.InterfaceClassChildren">
            <summary>
            Get All Child InterfaceClasses in the InterfaceClass Library.
            </summary>
            <returns>IEnumerable&lt;InterfaceFamilyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.InterfaceClassDescendants">
            <summary>
            Gets all descendant <see cref="T:CAEX_ClassModel.InterfaceFamilyType"/> Objects in the InterfaceClass Library.
            InterfaceClasses on all levels are returned.
            </summary>
            <returns>IEnumerable&lt;InterfaceFamilyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassLibType.Insert_Element(Altova.Xml.TypeBase)">
            <summary>
            Inserting an element generically to this object.
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceClassType">
            <summary>
            Class InterfaceClassType.
            </summary>
            <summary>
               Class InterfaceClassType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceClassType.Attribute">
            <summary>
            The attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceClassType.RefBaseClassPath">
            <summary>
            The reference base class path
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InterfaceClassType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceClassType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceClassType.ATTACHMENT_INTERFACE_NAME">
            <summary>
               The attachment interface name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceClassType.COLLADAINTERFACE_TYPE">
            <summary>
               The collada interface type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceClassType.PLCOPEN_LOGIC_INTERFACE_NAME">
            <summary>
               The plcopen logic interface name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceClassType.PLCOPEN_VARIABLE_INTERFACE_NAME">
            <summary>
               The plcopen variable interface name
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.New_FrameAttribute(CAEX_ClassModel.FrameValues)">
            <summary>
            Creates a new frame attribute for this object. Position information is internally stored in more than one CAEX attribute.
            </summary>
            <param name="frameValues">The frame values.</param>
            <returns>FrameAttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.GetAttribute(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>AttributeType or null if not found.</returns>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.ClassName">
            <summary>
               Gets the name of the CAEXObject.
            </summary>
            <value>The name of the class.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.FrameAttribute">
            <summary>
               Gets the Frame attribute
            </summary>
            <value>The frame attribute.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.GetRefBaseClassPath">
            <summary>
               Gets the reference base class path.
            </summary>
            <value>The get reference base class path.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.IDValue">
            <summary>
               Gets the identifier value.
            </summary>
            <value>The identifier value.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.IsAttachmentInterface">
            <summary>
               Gets a value indicating whether this instance is an attachment interface.
            </summary>
            <value>
               <c>true</c> if this instance is attachment interface; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.IsCOLLADAInterface">
            <summary>
               Gets a value indicating whether this instance is a collada interface.
            </summary>
            <value>
               <c>true</c> if this instance is collada interface; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.IsPLCOpenLogicInterface">
            <summary>
               Gets a value indicating whether this instance is PLC open logic interface.
            </summary>
            <value>
               <c>true</c> if this instance is PLC open logic interface; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.IsPLCOpenVariableInterface">
            <summary>
               Gets a value indicating whether this instance is PLC open variable interface.
            </summary>
            <value>
               <c>true</c> if this instance is PLC open variable interface; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.ReferencedClassName">
            <summary>
               Gets the name of the referenced base class.
            </summary>
            <value>The name of the referenced class.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.ReferencedClassPath">
            <summary>
            Gets the full path of the referenced base class.
            </summary>
            <value>The class path of the referenced base class.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.BaseClass">
            <summary>
            Gets or sets the base class for this instance. if another base class is set, the value is overwritten.
            </summary>
            <value>The base class.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.RefTypeAttribute">
            <summary>
               Gets the reference type attribute.
            </summary>
            <value>The reference type attribute.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.RefURIAttribute">
            <summary>
               Gets the ExternalReference Attribute defined for this object.
            </summary>
            <value>The reference URI attribute.</value>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.CreateInterfaceFamilyClass">
            <summary>
               Create an InterfaceClass from this interface (e.g. ExternalInterface). An
               InterfaceClass is of type InterfaceFamilyType and may contain
               InterfaceFamilyTypes as child elements.
            </summary>
            <returns>InterfaceFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.getAttributeField">
            <summary>
               Getting this Attributes collection
            </summary>
            <returns>MemberElement_Attribute.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.GetDerivedAttributes(System.Boolean)">
            <summary>
               Only InterfaceFamilyType objects do have class references and may contain derived attributes
               (InterfaceFamilyType is derived from this class). For ExternalInterfaces the own attributes are
               returned, if includeOwn ist true [default].
            </summary>
            <returns>List&lt;AttributeType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.Insert_Attribute(CAEX_ClassModel.AttributeType)">
            <summary>
               Inserting an attribute element to this class
            </summary>
            <param name="attributeElement">The attribute to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.Insert_Element(Altova.Xml.TypeBase)">
            <summary>
               Inserting an element generically to this object.
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.MergeContent(CAEX_ClassModel.InterfaceClassType)">
            <summary>
               Merging the content of this interface class with the given interface class
               by copying all attributes.
            </summary>
            <param name="classToMergeContentWith">Overwrites derived attributes</param>
            <returns>InterfaceClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.New_Attribute(System.String)">
            <summary>
               A new attribute is added to this object
            </summary>
            <param name="attributeName">The name of the Attribute to add</param>
            <returns>The new attribute element</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.CurrentAttributeIsNotDerived(CAEX_ClassModel.InterfaceClassType,CAEX_ClassModel.CAEXObject)">
            <summary>
               Currents the attribute is not derived.
            </summary>
            <param name="thisClass">     The this class.</param>
            <param name="attributeChild">The attribute child.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceClassType.SetRefBaseClassPath">
            <summary>
            Sets the reference base class path.
            </summary>
            <value>The get reference base class path.</value>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceClassType.InsertAttributeNodeInternal(System.Xml.XmlNode)">
            <summary>
               Inserting an Attribute node internally
            </summary>
            <param name="attributeNode">The attribute node.</param>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceFamilyType">
            <summary>
            Class InterfaceFamilyType.
            </summary>
            <summary>
            Class InterfaceFamilyType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceFamilyType.InterfaceClass">
            <summary>
            The interface class
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InterfaceFamilyType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceFamilyType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass">
            <summary>
            Class MemberElement_InterfaceClass.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.InterfaceFamilyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>InterfaceFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>InterfaceFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>InterfaceFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.MemberElement_InterfaceClass.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceFamilyType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceFamilyType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.New_InterfaceClass(System.String)">
            <summary>
            Adding a new Interface class to this object.
            </summary>
            <param name="name">The name of the InterfaceClass</param>
            <returns>The new InterfaceClass</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.Insert_InterfaceClass(CAEX_ClassModel.InterfaceFamilyType)">
            <summary>
            Appends the interface class at the End of all existing Child Interfaces
            </summary>
            <param name="interfaceClass">The interface class.</param>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.getReferencedClass(System.String)">
            <summary>
            Gets the referenced class.
            </summary>
            <param name="referencedClassPath">The referenced class path.</param>
            <returns>XmlNode.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.MergeClasses(CAEX_ClassModel.InterfaceFamilyType,CAEX_ClassModel.InterfaceFamilyType)">
            <summary>
            Merging a class with the elements of its referenced base class. Header elements are not merged!
            </summary>
            <param name="clonedClass">The class to insert the base class elements to</param>
            <param name="baseClass">the referenced base class</param>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.CurrentAttributeIsNotDerived(CAEX_ClassModel.InterfaceFamilyType,CAEX_ClassModel.CAEXObject)">
            <summary>
            Currents the attribute is not derived.
            </summary>
            <param name="clonedClass">The cloned class.</param>
            <param name="attributeChild">The attribute child.</param>
            <returns><c>true</c> if attribute is not inherited, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.InterfaceClassChildren">
            <summary>
            Gets all direct child <see cref="T:CAEX_ClassModel.InterfaceFamilyType"/> Objects in this InterfaceClass.
            </summary>
            <returns>IEnumerable&lt;InterfaceFamilyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.InterfaceClassDescendants">
            <summary>
            Gets all descendant <see cref="T:CAEX_ClassModel.InterfaceFamilyType"/> Objects in this InterfaceClass.
            InterfaceClasses on all levels below this InterfaceClass are returned.
            </summary>
            <returns>IEnumerable&lt;InterfaceFamilyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.CreateInstance(CAEX_ClassModel.InterfaceFamilyType)">
            <summary>
            Creating an instance of this class
            </summary>
            <param name="classToInstantiate">The class to instantiate.</param>
            <returns>ExternalInterfaceType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.CreateClassInstance">
            <summary>
            Creates an instance of this class and returns the instance as an new InterfaceClassType.
            </summary>
            <returns>An instance of this class as a new external interface of type InterfaceClassType</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.getClassForPath(System.String)">
            <summary>
            Resolving a reference to a base class if this interface class has a reference to a base class
            </summary>
            <param name="referencedClassPath">The referenced class path.</param>
            <returns>InterfaceFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.Insert_Attribute(CAEX_ClassModel.AttributeType)">
            <summary>
            Inserting an attribute element to this class
            </summary>
            <param name="attributeElement">The attribute to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.InsertAttributeNodeAtCorrectPosition(System.Xml.XmlNode)">
            <summary>
            Inserts the attribute node at correct position.
            </summary>
            <param name="attributeNodeToInsert">The attribute node to insert.</param>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.New_Attribute(System.String)">
            <summary>
            New_s the attribute.
            </summary>
            <param name="attributeName">Name of the attribute.</param>
            <returns>AttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.Insert_Element(Altova.Xml.TypeBase)">
            <summary>
            Inserting an element generically to this object.
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceFamilyType.GetDerivedAttributes(System.Boolean)">
            <summary>
            Gets the derived attributes.
            </summary>
            <returns>List&lt;AttributeType&gt;.</returns>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceNameMappingType">
            <summary>
            Class InterfaceNameMappingType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceNameMappingType.RoleInterfaceName">
            <summary>
            The role interface name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceNameMappingType.SystemUnitInterfaceName">
            <summary>
            The system unit interface name
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceNameMappingType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InterfaceNameMappingType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceNameMappingType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceNameMappingType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_RoleInterfaceName">
            <summary>
            Class MemberAttribute_RoleInterfaceName.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_RoleInterfaceName.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_RoleInterfaceName.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_RoleInterfaceName.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_RoleInterfaceName"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_RoleInterfaceName.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_RoleInterfaceName.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_RoleInterfaceName.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_RoleInterfaceName.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_SystemUnitInterfaceName">
            <summary>
            Class MemberAttribute_SystemUnitInterfaceName.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_SystemUnitInterfaceName.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_SystemUnitInterfaceName.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_SystemUnitInterfaceName.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_SystemUnitInterfaceName"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_SystemUnitInterfaceName.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_SystemUnitInterfaceName.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_SystemUnitInterfaceName.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceNameMappingType.MemberAttribute_SystemUnitInterfaceName.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InterfaceNameMappingType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InterfaceNameMappingType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.InterfaceNameMappingType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.InternalElementType">
            <summary>
            Class InternalElementType.
            </summary>
            <summary>
            Class InternalElementType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalElementType.MappingObject">
            <summary>
            The mapping object
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalElementType.RefBaseSystemUnitPath">
            <summary>
            The reference base system unit path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalElementType.RoleRequirements">
            <summary>
            The role requirements
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SystemUnitClassType" /> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InternalElementType.MemberAttribute_RefBaseSystemUnitPath">
            <summary>
            Class MemberAttribute_RefBaseSystemUnitPath.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalElementType.MemberAttribute_RefBaseSystemUnitPath.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalElementType.MemberAttribute_RefBaseSystemUnitPath.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberAttribute_RefBaseSystemUnitPath.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InternalElementType.MemberAttribute_RefBaseSystemUnitPath"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberAttribute_RefBaseSystemUnitPath.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberAttribute_RefBaseSystemUnitPath.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberAttribute_RefBaseSystemUnitPath.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberAttribute_RefBaseSystemUnitPath.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject">
            <summary>
            Class MemberElement_MappingObject.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.MappingType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>MappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>MappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>MappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_MappingObject.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements">
            <summary>
            Class MemberElement_RoleRequirements.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.RoleRequirementsType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>RoleRequirementsType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>RoleRequirementsType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>RoleRequirementsType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MemberElement_RoleRequirements.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.InternalElementType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.AssignNewGUIDs">
            <summary>
            Assigns new guids to this InternalElement and all of its child InternalElements
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.Create_UniqueCopy">
            <summary>
            Creates a copy of this InternalElement with a new GUID.
            </summary>
            <returns>A copy of this InternalElement with a unique GUID</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.Create_UniqueCopy(System.Boolean)">
            <summary>
            Creates a copy with a unique ID.
            </summary>
            <param name="deepClone">if set to <c>true</c> [deep clone].</param>
            <returns>InternalElementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.CreateSystemUnitClass">
            <summary>
            Creates a SystemUnitClass from an InternalElement. Some Elements, which may exist in the
            InternalElement and can't exist in a SystemUnitClass will not be imported to the new SystemUnitClass,
            these are the RoleRequirements, a RefBaseSystemUnitPath Attribute and all Mapping Objects. 
            </summary>
            <returns>SystemUnitFamilyType.</returns>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.IsMirror">
            <summary>
            Gets a value indicating whether this instance is a Mirror-Object.
            </summary>
            <value><c>true</c> if this instance is mirror; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.IsFacet">
            <summary>
            Gets a value indicating whether this instance is a Facet-Object.
            </summary>
            <value><c>true</c> if this instance is a Facet; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.IsGroup">
            <summary>
            Gets a value indicating whether this instance is a Group-Object.
            </summary>
            <value><c>true</c> if this instance is a Group; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalElementType.IsPort">
            <summary>
            Gets a value indicating whether this instance is a Port-Object.
            </summary>
            <value><c>true</c> if this instance is a Port; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.Insert_Element(Altova.Xml.TypeBase,System.Boolean)">
            <summary>
            Inserting an element of base type TypeBase to this object. The Element is inserted at the first Element
            of any existing Elements of the same Type if nothing else is explicit defined.
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <param name="asFirst">Inserted at first element (true) or appended as last (false), </param>
            <returns><c>true</c> if inserted, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.Insert_MappingObject(CAEX_ClassModel.MappingType)">
            <summary>
            Adding a MappingObject element to this InternalElement. It is only allowed to add one
            MappingObject node.
            </summary>
            <param name="mappingObject">The mapping object.</param>
            <returns>The MappingObject element</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A MappingObject node is already existent. It is not allowed to add more than one MappingObject node to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.Insert_NewInstance(Altova.Xml.TypeBase,System.Boolean)">
            <summary>
            Inserting a new class instance to this object at the First Position of any other Element with the 
            same Type if nothing else is explicit defined.
            </summary>
            <param name="newInstanceObject">The instance of a class to be inserted at this object. 
            The instance can be of type
            <see cref="T:CAEX_ClassModel.InternalElementType"/>, <see cref="T:CAEX_ClassModel.InterfaceClassType"/> or
            <see cref="T:CAEX_ClassModel.RoleRequirementsType"/></param>
            <param name="asFirst">if true, inserted as first, otherwise appended as last</param>
            <returns><c>true</c> if inserted, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.Insert_RoleRequirements(CAEX_ClassModel.RoleRequirementsType)">
            <summary>
            Inserting a RoleRequirement to this InternalElement. An exception is thrown if a
            RoleRequirements is already existent.
            </summary>
            <param name="roleRequirement">The RoleRequirement ot insert</param>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A RoleRequirements node is already existent. It is not allowed to add more than one RoleRequirements node to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.IsPartOfCombinedKinematik">
            <summary>
            Check if this InternalElement is part of a combined kinematic.
            </summary>
            <returns>always false because combined kinematics is not defined.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.MergeContent(CAEX_ClassModel.InternalElementType,System.Boolean)">
            <summary>
            Merging an InternalElement with the elements of another InternalElement. Header elements
            are not merged! As Attribute Names are unique, they are not duplicated but the according
            attribute from contentToMergeWith InternalElement is used to override this one.
            </summary>
            <param name="contentToMergeWith">The InternalElement to merge content with</param>
            <param name="mergeRole">If true, RoleRequirements and MappingObject are copied from given InternalElement to
            this InternalElement</param>
            <returns>The object with merged content.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.New_MappingObject">
            <summary>
            Adding a new MappingObject element to this InternalElement. It is only allowed to add
            one RoleRequirements node.
            </summary>
            <returns>The new MappingObject element</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A MappingObject node is already existent. It is not allowed to add more than one MappingObject node to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.New_RoleRequirements">
            <summary>
            Adding a new RoleRequirements element to this InternalElement. It is only allowed to add
            one RoleRequirements node.
            </summary>
            <returns>The new RoleRequirements element</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A RoleRequirements node is already existent. It is not allowed to add more than one RoleRequirements node to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.New_RoleRequirements(System.String)">
            <summary>
            New_s the role requirements.
            </summary>
            <param name="roleClassPath">The role class path.</param>
            <returns>RoleRequirementsType.</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A RoleRequirements node is already existent. 
            It is not allowed to add more than one RoleRequirements node to current 
            element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.ResolveExternalInterfaceReferences">
            <summary>
            Creating an instance of contained externalInterfaces that have a reference to a base
            class. There is no need to recursive call this method, because interface are not allowed
            to contain sub-interfaces
            ToDO Changed with CAEX3.0
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.GetDerivedAttributes(System.Boolean)">
            <summary>
            Obtain a list of attributes that are derived from base classes.
            The List will also contain the elements own attributes.
            </summary>
            <returns>List&lt;AttributeType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.GetDerivedInterfaces(System.Boolean)">
            <summary>
            Obtain a list of interfaces that are derived from base classes.
            The List will also contain the elements own attributes.
            </summary>
            <returns>List&lt;AttributeType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.ResolveInternalElementReferences(System.Collections.Generic.List{System.String})">
            <summary>
            Resolving all class references of sub-InternalElements of a this InternalElement and
            replacing them with instances of referenced classes.
            </summary>
            <param name="referencedClassesList">A list with already referenced classes. This list is used to avoid cyclic class referencing</param>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.ResolveRoleReferences">
            <summary>
            Resolving references to RoleClasses and replacing that reference with an instance of the
            referenced role class. For an internalElement it is only allowed to contain one role
            reference due to schema.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.OverwriteAttributeWithDerivedVersion(CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.CAEXObject)">
            <summary>
            Overwrites the attribute with derived version.
            </summary>
            <param name="baseClass">The base class.</param>
            <param name="attributeChild">The attribute child.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.AssignNewGUID(CAEX_ClassModel.InternalElementType)">
            <summary>
            Recursively assigning new GUIDs to the given InternalElement and all of its child InternalElements
            </summary>
            <param name="internalElement">The internal element.</param>
        </member>
        <member name="M:CAEX_ClassModel.InternalElementType.InsertRoleRequirementsNodeInternal(System.Xml.XmlNode)">
            <summary>
            Inserting an RoleRequirements node at the correct child position of this node according
            to CAEX Schema.
            </summary>
            <param name="roleRequirementsElementNode">The role requirements element node.</param>
        </member>
        <member name="T:CAEX_ClassModel.InternalLinkType">
            <summary>
            Class InternalLinkType.
            </summary>
            <summary>
            Class InternalLinkType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalLinkType.RefPartnerSideA">
            <summary>
            The reference partner side a
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalLinkType.RefPartnerSideB">
            <summary>
            The reference partner side b
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InternalLinkType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.InternalLinkType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideA">
            <summary>
            Class MemberAttribute_RefPartnerSideA.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideA.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideA.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideA.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideA"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideA.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideA.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideA.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideA.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideB">
            <summary>
            Class MemberAttribute_RefPartnerSideB.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideB.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideB.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideB.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideB"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideB.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideB.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideB.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.MemberAttribute_RefPartnerSideB.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.InternalLinkType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.InternalLinkType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="F:CAEX_ClassModel.InternalLinkType.LINK_SEPARATOR">
            <summary>
            definition of the separator used for qualifying an interface of an internal element via syntax GUID:Interface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalLinkType.linkedObjects">
            <summary>
            The linked objects
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.InternalLinkType.validationErrorText">
            <summary>
            Property that contains additional information about an validation error of this link. It is empty when the link is valid
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.InternalLinkType.LinkedObjects">
            <summary>
            Gets or sets the linked objects.
            </summary>
            <value>The linked objects.</value>
        </member>
        <member name="P:CAEX_ClassModel.InternalLinkType.ValidationErrorText">
            <summary>
            Gets or sets the validation error text.
            </summary>
            <value>The validation error text.</value>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.LowestCommonAncestor(CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            gets the Lowest common ancestor of the specified classes. This is a valid element to store an internal link.
            If no common ancestor is defined, the Class, which has the highest level in the Hierarchy is returned.
            </summary>
            <param name="AClass">a class.</param>
            <param name="BClass">The b class.</param>
            <returns>SystemUnitClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.CreateInternalLink(CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.InterfaceFamilyType,CAEX_ClassModel.InterfaceFamilyType,System.String,System.String,System.String)">
            <summary>
            Creates  ExternalInterfaces and connects the newly created interfaces with an  internal link. Only the SystemUnitClass-Elements
            which are parent to the ExternalInterfaces are required as arguments, all others are optional.
            </summary>
            <param name="ElementForExternalInterfaceASide">The element (SystemUnitClass or InternalElement) for external interface a side.</param>
            <param name="ElementForExternalInterfaceBSide">The element (SystemUnitClass or InternalElement) for external interface b side.</param>
            <param name="linkParent">The link parent  (SystemUnitClass or InternalElement). [optional] </param>
            <param name="InterfaceClassForExternalInterfaceASide">The interface class for external interface a side. If no class is defined,
            the externalInterface is created without a class reference.</param>
            <param name="InterfaceClassForExternalInterfaceBSide">The interface class for external interface b side. If no class is defined,
            the externalInterface is created without a class reference.</param>
            <param name="NameForExternalInterfaceASide">The name for external interface a side. If no name is defined,
            the externalInterface is created with a generated name ("Interface+num").</param>
            <param name="NameForExternalInterfaceBSide">The name for external interface b side. If no name is defined,
            the externalInterface is created with a generated name ("Interface+num").</param>
            <param name="NameForInternalLink">The name for internal link. If no name is defined,
            the link is created with a generated name ("Link+num").</param>
            <returns>the InternalLinkType.</returns>
            <exception cref="T:System.ArgumentNullException">if ElementForExternalInterfaceASide or ElementForExternalInterfaceBSide is null.</exception>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.New_InternalLink(CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.InterfaceClassType,CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.InterfaceClassType,System.String,System.Boolean,CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Creates a new internal link between the defined Classes and Interfaces if the Classes have a Common Class.
            The InternalLink is added as the first InternalLink if nothing else is explicit defined.
            </summary>
            <param name="AClass">a class.</param>
            <param name="AInterface">a interface.</param>
            <param name="BClass">The b class.</param>
            <param name="BInterface">The b interface.</param>
            <param name="name">The name.</param>
            <param name="asFirst">If <c>true</c>, the link is added as the first link, otherwise as the last</param>
            <param name="linkParent">The link parent  (SystemUnitClass or InternalElement). [optional] </param>
            <returns>InternalLinkType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.findInternalElement(System.String)">
            <summary>
            Resolve a reference to an InternalElement, starting at the <see cref="M:CAEX_ClassModel.InternalLinkType.InternalLinkParent" /> and return the referenced element if found.
            Use FindFastByID for speed optimizations.
            </summary>
            <remarks>
            If the CaexDocument tables are managed by the application <see cref="P:CAEX_ClassModel.Validation.CAEXTables.ManagedByApplication"/> the method uses the
            fast access methods of the tables.
            </remarks>
            <param name="referenceGUID">The GUID of the InternalElement</param>
            <returns>The InternalElement with the specified GUID</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.InternalLinkParent">
            <summary>
            Gives the SystemUnitClass Object, the InternalLink is associated to.
            </summary>
            <returns>SystemUnitClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.IsValidLink">
            <summary>
            Tests if this link is a valid link. For example if referenced classes are found.
            Detailed information of an invalid link can be found in property ValidationErrorText after validating this link.
            </summary>
            <returns><c>true</c>, if this link is valid. <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.ResolveAndAssignExternalInterfaceSideAToLinkedObject(CAEX_ClassModel.LinkedObjects,CAEX_ClassModel.SystemUnitClassType,System.String)">
            <summary>
            Resolves the and assign external interface side a to linked object.
            </summary>
            <param name="linkedObjects">The linked objects.</param>
            <param name="refA">The reference a.</param>
            <param name="interfaceNameRefA">The interface name reference a.</param>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.ResolveAndAssignExternalInterfaceSideBToLinkedObject(CAEX_ClassModel.LinkedObjects,CAEX_ClassModel.SystemUnitClassType,System.String)">
            <summary>
            Resolves the and assign external interface side b to linked object.
            </summary>
            <param name="linkedObjects">The linked objects.</param>
            <param name="refB">The reference b.</param>
            <param name="interfaceNameRefB">The interface name reference b.</param>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.findSystemUnitClassElement(System.String)">
            <summary>
            Resolve a reference to an SystemUnitClass and return the referenced element if found. Use FindFastByID for speed optimizations.
            </summary>
            <param name="referenceGUID">The GUID of the SystemUnitClass</param>
            <returns>The SystemUnitClass with the specified GUID</returns>
        </member>
        <member name="M:CAEX_ClassModel.InternalLinkType.ResolveLink">
            <summary>
            Resolve the link and return an LinkedObject.
            </summary>
            <returns>The linked objects</returns>
        </member>
        <member name="T:CAEX_ClassModel.MappingType">
            <summary>
            Class MappingType.
            </summary>
            <summary>
            Class MappingType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.MappingType.AttributeNameMapping">
            <summary>
            The attribute name mapping
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.MappingType.InterfaceNameMapping">
            <summary>
            The interface name mapping
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.MappingType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping">
            <summary>
            Class MemberElement_AttributeNameMapping.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.AttributeNameMappingType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>AttributeNameMappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>AttributeNameMappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>AttributeNameMappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_AttributeNameMapping.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping">
            <summary>
            Class MemberElement_InterfaceNameMapping.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.InterfaceNameMappingType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>InterfaceNameMappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>InterfaceNameMappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>InterfaceNameMappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.MemberElement_InterfaceNameMapping.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.MappingType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.MappingType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.New_AttributeNameMapping(System.String,System.String)">
            <summary>
            Adding a new AttributeNameMapping to this MappingObject. An AttributeNameMapping allows the definition of the mapping between attribute names of corresponding RoleClasses and SystemUnitClasses.
            </summary>
            <param name="systemUnitAttributeName">The attribute name of the SystemUnitClass</param>
            <param name="roleAttributeName">The attribute name of the RoleClass</param>
            <returns>The new AttributeNameMapping element</returns>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.InsertAttributeNameMappingInternal(System.Xml.XmlNode)">
            <summary>
            Adding an AttributeNameMappingNode internally
            </summary>
            <param name="attributeNameMappingNode">The attribute name mapping node.</param>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.Insert_AttributeNameMapping(CAEX_ClassModel.AttributeNameMappingType)">
            <summary>
            Insert_s the attribute name mapping.
            </summary>
            <param name="attributeNameMapping">The attribute name mapping.</param>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.New_InterfaceNameMapping(System.String,System.String)">
            <summary>
            Mapping of interface names of corresponding RoleClasses and SystemUnitClasses.
            </summary>
            <param name="systemUnitInterfaceName">The name of the interface in the SystemUnitClass</param>
            <param name="roleInterfaceName">The name of the interface in the RoleClass</param>
            <returns>The new InterfaceNameMapping element</returns>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.Insert_InterfaceNameMapping(CAEX_ClassModel.InterfaceNameMappingType)">
            <summary>
            Appends the interface name mapping.
            </summary>
            <param name="interfaceNameMapping">The interface name mapping.</param>
        </member>
        <member name="M:CAEX_ClassModel.MappingType.Insert_Element(Altova.Xml.TypeBase)">
            <summary>
            Inserting an element generically to this object.
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:CAEX_ClassModel.MemberAttribute_RefBaseClassPath">
            <summary>
            Class MemberAttribute_RefBaseClassPath.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.MemberAttribute_RefBaseClassPath.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.MemberAttribute_RefBaseClassPath.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.MemberAttribute_RefBaseClassPath.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.MemberAttribute_RefBaseClassPath"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.MemberAttribute_RefBaseClassPath.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.MemberAttribute_RefBaseClassPath.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.MemberAttribute_RefBaseClassPath.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MemberAttribute_RefBaseClassPath.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.MemberElement_Attribute">
            <summary>
            Class MemberElement_Attribute.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.MemberElement_Attribute.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.MemberElement_Attribute.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.MemberElement_Attribute.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.MemberElement_Attribute"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.MemberElement_Attribute.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.MemberElement_Attribute.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.MemberElement_Attribute"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.MemberElement_Attribute.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.MemberElement_Attribute.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.MemberElement_Attribute.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.MemberElement_Attribute.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.AttributeType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>AttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MemberElement_Attribute.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>AttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MemberElement_Attribute.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>AttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MemberElement_Attribute.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.MemberElement_Attribute.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.MemberElement_Attribute.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.NominalScaledTypeType">
            <summary>
            Class NominalScaledTypeType.
            </summary>
            <summary>
            Class NominalScaledTypeType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.NominalScaledTypeType.RequiredValue">
            <summary>
            The required value
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.NominalScaledTypeType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.NominalScaledTypeType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.NominalScaledTypeType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.NominalScaledTypeType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue">
            <summary>
            Class MemberElement_RequiredValue.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.anyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.NominalScaledTypeType.MemberElement_RequiredValue.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.NominalScaledTypeType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.NominalScaledTypeType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.NominalScaledTypeType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.NominalScaledTypeType.New_RequiredValue">
            <summary>
            Adds a new required value to the NominalScaledType Constraint.
            </summary>
            <returns>CAEX_ClassModel.xs.anyType.</returns>
        </member>
        <member name="T:CAEX_ClassModel.OrdinalScaledTypeType">
            <summary>
            Class OrdinalScaledTypeType.
            </summary>
            <summary>
            User extensions to the generated class.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.OrdinalScaledTypeType.RequiredMaxValue">
            <summary>
            The required maximum value
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.OrdinalScaledTypeType.RequiredMinValue">
            <summary>
            The required minimum value
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.OrdinalScaledTypeType.RequiredValue">
            <summary>
            The required value
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue">
            <summary>
            Class MemberElement_RequiredMaxValue.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.anyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMaxValue.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue">
            <summary>
            Class MemberElement_RequiredMinValue.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.anyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredMinValue.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue">
            <summary>
            Class MemberElement_RequiredValue.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.anyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.anyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.MemberElement_RequiredValue.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.OrdinalScaledTypeType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.OrdinalScaledTypeType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.New_RequiredMaxValue">
            <summary>
            Adding a new RequiredMaxValue to this ordinal scaled constraint
            </summary>
            <returns>The new RequiredMaxValue element</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A RequiredMaxValue node is already existent. It is not allowed to add more than one RequiredMaxValue nodes to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.New_RequiredValue">
            <summary>
            Adding a new RequiredValue to this ordinal scaled constraint
            </summary>
            <returns>The new RequiredValue element</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A RequiredValue node is already existent. It is not allowed to add more than one RequiredValue nodes to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.OrdinalScaledTypeType.New_RequiredMinValue">
            <summary>
            Adding a new requiredMinValue to this ordinal scaled constraint
            </summary>
            <returns>The new RequiredMinValue element</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A RequiredMinValue node is already existent. It is not allowed to add more than one RequiredMinValue nodes to current element according to CAEX Schema</exception>
        </member>
        <member name="T:CAEX_ClassModel.RefSemanticType">
            <summary>
            Class RefSemanticType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RefSemanticType.CorrespondingAttributePath">
            <summary>
            The corresponding attribute path
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RefSemanticType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RefSemanticType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.RefSemanticType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.RefSemanticType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.RefSemanticType.MemberAttribute_CorrespondingAttributePath">
            <summary>
            Class MemberAttribute_CorrespondingAttributePath.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RefSemanticType.MemberAttribute_CorrespondingAttributePath.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RefSemanticType.MemberAttribute_CorrespondingAttributePath.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RefSemanticType.MemberAttribute_CorrespondingAttributePath.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RefSemanticType.MemberAttribute_CorrespondingAttributePath"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.RefSemanticType.MemberAttribute_CorrespondingAttributePath.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.RefSemanticType.MemberAttribute_CorrespondingAttributePath.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.RefSemanticType.MemberAttribute_CorrespondingAttributePath.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RefSemanticType.MemberAttribute_CorrespondingAttributePath.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.RefSemanticType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RefSemanticType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.RefSemanticType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.RevisionType">
            <summary>
            Class RevisionType.
            </summary>
            <summary>
            Class RevisionType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.AuthorName">
            <summary>
            The author name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.Comment">
            <summary>
            The comment
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.Copyright">
            <summary>
            attribute containing CAEX CopyRight information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.NewVersion">
            <summary>
            The new version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.OldVersion">
            <summary>
            The old version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.RevisionDate">
            <summary>
            The revision date
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RevisionType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.RevisionType.MemberElement_AuthorName">
            <summary>
            Class MemberElement_AuthorName.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RevisionType.MemberElement_AuthorName"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.RevisionType.MemberElement_AuthorName"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.stringType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_AuthorName.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.RevisionType.MemberElement_Comment">
            <summary>
            Class MemberElement_Comment.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.MemberElement_Comment.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.MemberElement_Comment.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_Comment.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RevisionType.MemberElement_Comment"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_Comment.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_Comment.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.RevisionType.MemberElement_Comment"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_Comment.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_Comment.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_Comment.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_Comment.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.stringType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_Comment.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_Comment.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_Comment.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_Comment.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_Comment.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.RevisionType.MemberElement_NewVersion">
            <summary>
            Class MemberElement_NewVersion.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RevisionType.MemberElement_NewVersion"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.RevisionType.MemberElement_NewVersion"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.stringType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_NewVersion.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.RevisionType.MemberElement_OldVersion">
            <summary>
            Class MemberElement_OldVersion.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RevisionType.MemberElement_OldVersion"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.RevisionType.MemberElement_OldVersion"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.stringType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_OldVersion.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate">
            <summary>
            Class MemberElement_RevisionDate.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.dateTimeType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.dateTimeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.dateTimeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.dateTimeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.MemberElement_RevisionDate.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.RevisionType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.RevisionType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.New_OldVersion">
            <summary>
            Adding a new OldVersion node to this revision. An SchemaConformanceException is thrown when an OldVersion node is already existent.
            </summary>
            <returns>A new OldVersion node</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A oldVersion node is already existent. It is not allowed to add more than one oldVersion nodes to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.New_NewVersion">
            <summary>
            Adding a new NewVersion node to this revision. An SchemaConformanceException is thrown when an OldVersion node is already existent.
            </summary>
            <returns>A new NewVersion node</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A NewVersion node is already existent. It is not allowed to add more than one NewVersion nodes to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.RevisionType.New_Comment">
            <summary>
            Adding a Comment to this Revision node.
            </summary>
            <returns>A new Comment node as stringType</returns>
        </member>
        <member name="T:CAEX_ClassModel.RoleClassLibType">
            <summary>
            Class RoleClassLibType.
            </summary>
            <summary>
            Class RoleClassLibType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleClassLibType.RoleClass">
            <summary>
            The role class
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RoleClassLibType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassLibType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass">
            <summary>
            Class MemberElement_RoleClass.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.RoleFamilyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>RoleFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>RoleFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>RoleFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.MemberElement_RoleClass.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.RoleClassLibType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassLibType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.New_RoleClass(System.String)">
            <summary>
            Adding a new RoleClass to this hierarchy.
            </summary>
            <param name="name">The name of the new role class</param>
            <returns>The new RoleClass</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.Insert_RoleClass(CAEX_ClassModel.RoleFamilyType)">
            <summary>
            Appends the role class.
            </summary>
            <param name="roleClass">The role class.</param>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.RoleClassChildren">
            <summary>
            Gets all direct child <see cref="T:CAEX_ClassModel.RoleFamilyType"/> Objects in this RoleClass Library.
            </summary>
            <returns>IEnumerable&lt;RoleFamilyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.RoleClassDescendants">
            <summary>
            Gets all descendant <see cref="T:CAEX_ClassModel.RoleFamilyType"/> Objects in this RoleClass Library.
            RoleClasses on all levels are returned.
            </summary>
            <returns>IEnumerable&lt;RoleFamilyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassLibType.Insert_Element(Altova.Xml.TypeBase)">
            <summary>
            Inserting an element generically to this object.
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:CAEX_ClassModel.RoleClassType">
            <summary>
            Class RoleClassType.
            </summary>
            <summary>
            Class RoleClassType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleClassType.Attribute">
            <summary>
            The attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleClassType.ExternalInterface">
            <summary>
            The external interface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleClassType.RefBaseClassPath">
            <summary>
            The reference base class path
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RoleClassType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface">
            <summary>
            Class MemberElement_ExternalInterface.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.ExternalInterfaceType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>ExternalInterfaceType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>ExternalInterfaceType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>ExternalInterfaceType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.MemberElement_ExternalInterface.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.RoleClassType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassType.FrameAttribute">
            <summary>
            Get and set the Frame attribute
            </summary>
            <value>The frame attribute.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.New_FrameAttribute(CAEX_ClassModel.FrameValues)">
            <summary>
            Creates a new frame attribute for this object. Position information is internally stored in more than one CAEX attribute.
            </summary>
            <param name="frameValues">The frame values.</param>
            <returns>FrameAttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.GetAttribute(System.String)">
            <summary>
            Gets the attribute with the specified name. 
            </summary>
            <param name="name">The name.</param>
            <returns>AttributeType or null if not found.</returns>
        </member>
        <member name="P:CAEX_ClassModel.RoleClassType.RefURIAttribute">
            <summary>
            Gets and sets the GeometryReference defined for this object.
            </summary>
            <value>The reference URI attribute.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.getAttributeField">
            <summary>
            Getting the attribute collection of this class
            </summary>
            <returns>CAEX_ClassModel.MemberElement_Attribute.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.GetDerivedAttributes(System.Boolean)">
            <summary>
            Obtain a list of attributes that are derived from base classes.
            The List will also contain the elements own attributes.
            </summary>
            <returns>List&lt;AttributeType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.GetDerivedInterfaces(System.Boolean)">
            <summary>
            Gets the derived interfaces, which include the interfaces of this element
            </summary>
            <returns>List&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.GetExternalInterfaces">
            <summary>
            Gets the external interfaces.
            </summary>
            <returns>IEnumerable&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.Insert_Attribute(CAEX_ClassModel.AttributeType)">
            <summary>
            Inserting an attribute element to this class
            </summary>
            <param name="attributeElement">The attribute to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.Insert_ExternalInterface(CAEX_ClassModel.InterfaceClassType,System.Boolean)">
            <summary>
            Inserting an ExternalInterface to this class. If it is not explicit defined, the
            ExternalInterface is added as the first ExternalInterface.
            </summary>
            <param name="interfaceElement">The interface element.</param>
            <param name="asFirst">if <c>true</c> inserted as first ExternalInterface (default), otherwise as last</param>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.New_Attribute(System.String)">
            <summary>
            A new attribute is added to this object
            </summary>
            <param name="attributeName">The name of the Attribute to add</param>
            <returns>The new attribute element</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.New_ExternalInterface(System.String,System.Boolean)">
            <summary>
            Adding a new ExternalInterface to this object.If it is not explicit defined, the
            ExternalInterface is added as the first ExternalInterface.
            </summary>
            <param name="name">The name of the new ExternalInterface</param>
            <param name="asFirst">if <c>true</c> inserted as first ExternalInterface (default), otherwise as last</param>
            <returns>The new ExternalInterface</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.InsertAttributeNodeInternal(System.Xml.XmlNode)">
            <summary>
            Inserting an Attribute node internally
            </summary>
            <param name="attributeNode">The attribute node.</param>
        </member>
        <member name="M:CAEX_ClassModel.RoleClassType.InsertExternalInterfaceNodeInternal(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Moving external interface node to the correct child node position
            </summary>
            <param name="interfaceNode">The xml node to insert</param>
            <param name="asFirst">if <c>true</c>, inserted as first</param>
        </member>
        <member name="T:CAEX_ClassModel.RoleFamilyType">
            <summary>
            Class RoleFamilyType.
            </summary>
            <summary>
            Class RoleFamilyType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleFamilyType.RoleClass">
            <summary>
            The role class
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RoleFamilyType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass">
            <summary>
            Class MemberElement_RoleClass.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.RoleFamilyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>RoleFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>RoleFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>RoleFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.MemberElement_RoleClass.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.RoleFamilyType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.ClassName">
            <summary>
            Gets the name of the CAEXObject.
            </summary>
            <value>The name of the class.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.GetRefBaseClassPath">
            <summary>
            Gets the reference base class path.
            </summary>
            <value>The get reference base class path.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.IDValue">
            <summary>
            Gets the identifier value.
            </summary>
            <value>The identifier value.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.ReferencedClassName">
            <summary>
            Gets the name of the referenced base class.
            </summary>
            <value>The name of the referenced class.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.ReferencedClassPath">
            <summary>
            Gets the full path of the referenced base class. 
            </summary>
            <value>The class path of the referenced base class.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.BaseClass">
            <summary>
            Gets or sets the base class for this instance. if another base class is set, the value is overwritten.
            </summary>
            <value>The base class.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.RoleClassChildren">
            <summary>
            Gets all direct child <see cref="T:CAEX_ClassModel.RoleFamilyType"/> Objects of this RoleClass.
            </summary>
            <returns>IEnumerable&lt;RoleFamilyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.RoleClassDescendants">
            <summary>
            Gets all descendant <see cref="T:CAEX_ClassModel.RoleFamilyType"/> Objects of this RoleClass.
            RoleClasses on all levels below this RoleClass are returned.
            </summary>
            <returns>IEnumerable&lt;RoleFamilyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.getClassForPath(System.String)">
            <summary>
            Resolving a reference to a base class if this RoleFamilyType has a reference to a base class
            </summary>
            <param name="referencedClassPath">The referenced class path.</param>
            <returns>RoleFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.getReferencedClass(System.String)">
            <summary>
            Gets the referenced class.
            </summary>
            <param name="referencedClassPath">The referenced class path.</param>
            <returns>XmlNode.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.GetDerivedInterfaces(System.Boolean)">
            <summary>
            Gets the derived interfaces, which include the interfaces of this element
            </summary>
            <returns>List&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.GetDerivedAttributes(System.Boolean)">
            <summary>
            Obtain a list of attributes that are derived from base classes.
            The List will also contain the elements own attributes.
            </summary>
            <returns>List&lt;AttributeType&gt;.</returns>
        </member>
        <member name="P:CAEX_ClassModel.RoleFamilyType.SetRefBaseClassPath">
            <summary>
            Sets the reference base class path.
            </summary>
            <value>The get reference base class path.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.ExternalInterfaces">
            <summary>
            Enumeration Method for direct Children of Type <see cref="T:CAEX_ClassModel.InterfaceClassType"/>
            </summary>
            <returns>IEnumerable&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.Insert_Element(Altova.Xml.TypeBase,System.Boolean)">
            <summary>
            Inserting an element generically to this object. If nothing else is explicit defined,
            the element is inserted as the first element of it's Type.
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <param name="asFirst">if <c>true</c>, the element is inserted as the first of it's type, otherwise as the last</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.Insert_RoleClass(CAEX_ClassModel.RoleClassType)">
            <summary>
            Appends the RoleClass.
            </summary>
            <param name="roleClass">The role class.</param>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.Insert_RoleFamilyClass(CAEX_ClassModel.RoleFamilyType)">
            <summary>
            Appends the RoleFamilyClass.
            </summary>
            <param name="roleClass">The role class.</param>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.New_RoleClass(System.String)">
            <summary>
            Adding a new RoleClass to this object.
            </summary>
            <param name="name">The name of the new role class</param>
            <returns>The new RoleClass</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.MergeClasses(CAEX_ClassModel.RoleFamilyType,CAEX_ClassModel.RoleFamilyType)">
            <summary>
            Merging a class with the elements of its referenced base class. Header elements are not merged!
            </summary>
            <param name="roleClass">The class to insert the base class elements to</param>
            <param name="baseClass">The path to the referenced base class</param>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.CreateInstance(CAEX_ClassModel.RoleFamilyType)">
            <summary>
            Creates the instance.
            </summary>
            <param name="classToInstantiate">The class to instantiate.</param>
            <returns>RoleRequirementsType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.ResolveClassReferences(CAEX_ClassModel.RoleFamilyType,CAEX_ClassModel.RoleFamilyType,System.Collections.Generic.List{System.String})">
            <summary>
            Resolves the class references.
            </summary>
            <param name="roleFamilyClass">The role family class.</param>
            <param name="referencedBaseClass">The referenced base class.</param>
            <param name="referencedClassesList">The referenced classes list.</param>
        </member>
        <member name="M:CAEX_ClassModel.RoleFamilyType.CreateClassInstance">
            <summary>
            Creating a instance of this roleclass. The created instance is of type RoleRequirements and can be added to an InternalElement.
            </summary>
            <returns>An instance of this RoleClass as type RoleRequirements</returns>
        </member>
        <member name="T:CAEX_ClassModel.RoleRequirementsType">
            <summary>
            Class RoleRequirementsType.
            </summary>
            <summary>
            Class RoleRequirementsType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleRequirementsType.Attribute">
            <summary>
            The attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleRequirementsType.ExternalInterface">
            <summary>
            The external interface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleRequirementsType.RefBaseRoleClassPath">
            <summary>
            The reference base role class path
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RoleRequirementsType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.GetAttribute(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>AttributeType or null if not found.</returns>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.RoleRequirementsType.MemberAttribute_RefBaseRoleClassPath">
            <summary>
            Class MemberAttribute_RefBaseRoleClassPath.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleRequirementsType.MemberAttribute_RefBaseRoleClassPath.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleRequirementsType.MemberAttribute_RefBaseRoleClassPath.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.MemberAttribute_RefBaseRoleClassPath.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RoleRequirementsType.MemberAttribute_RefBaseRoleClassPath"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.MemberAttribute_RefBaseRoleClassPath.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.MemberAttribute_RefBaseRoleClassPath.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.MemberAttribute_RefBaseRoleClassPath.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.MemberAttribute_RefBaseRoleClassPath.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface">
            <summary>
            Class MemberElement_ExternalInterface.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.InterfaceClassType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>InterfaceClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>InterfaceClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>InterfaceClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.MemberElement_ExternalInterface.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.RoleRequirementsType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.FrameAttribute">
            <summary>
            Get and set the Frame attribute
            </summary>
            <value>The frame attribute.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.New_FrameAttribute(CAEX_ClassModel.FrameValues)">
            <summary>
            Creates a new frame attribute for this object. Position information is internally stored in more than one CAEX attribute.
            </summary>
            <param name="frameValues">The frame values.</param>
            <returns>FrameAttributeType.</returns>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.RefURIAttribute">
            <summary>
            Gets and sets the GeometryReference defined for this object.
            </summary>
            <value>The reference URI attribute.</value>
        </member>
        <member name="P:CAEX_ClassModel.RoleRequirementsType.RoleReference">
            <summary>
            Gets or sets the role reference.
            </summary>
            <value>The role reference.</value>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.getAttributeField">
            <summary>
            Get the whole attribute field containing a collection of all attributes of this object.
            </summary>
            <returns>CAEX_ClassModel.MemberElement_Attribute.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.GetDerivedAttributes(System.Boolean)">
            <summary>
            A RoleRequirementsType does not have any class references and therefore no derived attributes
            </summary>
            <returns>List&lt;AttributeType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.Insert_Attribute(CAEX_ClassModel.AttributeType)">
            <summary>
            Inserting an attribute element to this class
            </summary>
            <param name="attributeElement">The attribute to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.Insert_Element(Altova.Xml.TypeBase)">
            <summary>
            Inserting an element generically to this object.
            </summary>
            <param name="elementToInsert">The element to insert</param>
            <returns>True if insertion was successful. False else.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.Insert_ExternalInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Inserting an externalInterface to this class.
            </summary>
            <param name="interfaceElement">The interface element.</param>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.MergeContent(CAEX_ClassModel.RoleRequirementsType)">
            <summary>
            Merging the content of this RoleRequirement class with the given RoleRequirement class by copying all
            attributes and external interfaces.
            </summary>
            <param name="roleRequirementToMergeContentWith">The role requirement to merge content with.</param>
            <returns>RoleRequirementsType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.New_Attribute(System.String)">
            <summary>
            A new attribute is created and returned.
            </summary>
            <param name="attributeName">The name of the Attribute to add</param>
            <returns>The new attribute element</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.New_ExternalInterface(System.String)">
            <summary>
            Adding a new ExternalInterface.
            </summary>
            <param name="name">The name of the ExternalInterface</param>
            <returns>The new ExternalInterface</returns>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.ResolveExternalInterfaceReferences">
            <summary>
            Resolving references to ExternalInterfaces that are contained in this class. ExternalInterface with class
            references in this class are replaced with instances of the referenced interface classes. There is no need to
            recursive call this method, because interface are not allowed to contain sub-interfaces
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RoleRequirementsType.InsertAttributeNodeInternal(System.Xml.XmlNode)">
            <summary>
            Inserting an Attribute node internally
            </summary>
            <param name="attributeNode">The attribute node.</param>
        </member>
        <member name="T:CAEX_ClassModel.SupportedRoleClassType">
            <summary>
            Class SupportedRoleClassType.
            </summary>
            <summary>
            Class SupportedRoleClassType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SupportedRoleClassType.MappingObject">
            <summary>
            The mapping object
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SupportedRoleClassType.RefRoleClassPath">
            <summary>
            The reference role class path
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SupportedRoleClassType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.SupportedRoleClassType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.SupportedRoleClassType.MemberAttribute_RefRoleClassPath">
            <summary>
            Class MemberAttribute_RefRoleClassPath.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SupportedRoleClassType.MemberAttribute_RefRoleClassPath.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SupportedRoleClassType.MemberAttribute_RefRoleClassPath.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.MemberAttribute_RefRoleClassPath.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SupportedRoleClassType.MemberAttribute_RefRoleClassPath"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.SupportedRoleClassType.MemberAttribute_RefRoleClassPath.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.SupportedRoleClassType.MemberAttribute_RefRoleClassPath.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.MemberAttribute_RefRoleClassPath.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.MemberAttribute_RefRoleClassPath.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject">
            <summary>
            Class MemberElement_MappingObject.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.MappingType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>MappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>MappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>MappingType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.MemberElement_MappingObject.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.SupportedRoleClassType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.SupportedRoleClassType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.New_MappingObject">
            <summary>
            Adding a new MappingObject element to this SupportedRoleClass. It is only allowed to add one RoleRequirements node.
            </summary>
            <returns>The new MappingObject element</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A MappingObject node is already existent. It is not allowed to add more than one MappingObject node to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.Insert_MappingObject(CAEX_ClassModel.MappingType)">
            <summary>
            Appends the mapping object.
            </summary>
            <param name="mappingObject">The mapping object.</param>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A MappingObject node is already existent. It is not allowed to add more than
            one MappingObject node to current element according to CAEX Schema</exception>
        </member>
        <member name="M:CAEX_ClassModel.SupportedRoleClassType.Insert_Element(Altova.Xml.TypeBase)">
            <summary>
            Inserting an element generically to this object.
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:CAEX_ClassModel.SupportedRoleClassType.RoleReference">
            <summary>
            Gets or sets the role reference.
            </summary>
            <value>The role reference.</value>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitClassLibType">
            <summary>
            Class SystemUnitClassLibType.
            </summary>
            <summary>
            Class SystemUnitClassLibType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassLibType.SystemUnitClass">
            <summary>
            The system unit class
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SystemUnitClassLibType"/> class.
            </summary>
            <param name="initialNode">The node with initial data.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassLibType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass">
            <summary>
            Class MemberElement_SystemUnitClass.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.SystemUnitFamilyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>SystemUnitFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>SystemUnitFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>SystemUnitFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.MemberElement_SystemUnitClass.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitClassLibType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassLibType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.New_SystemUnitClass(System.String)">
            <summary>
            Adding a new SystemUnitClass to this hierarchy.
            </summary>
            <param name="name">The name.</param>
            <returns>A new SystemUnitClass with type SystemUnitFamilyType!</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.Insert_SystemUnitClass(CAEX_ClassModel.SystemUnitFamilyType)">
            <summary>
            Appends a SystemUnitClass to this class library
            </summary>
            <param name="systemUnitClass">The SystemUnitClass to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.SystemUnitClassChildren">
            <summary>
            Get the the Child SystemUnitClasses.
            </summary>
            <returns>IEnumerable&lt;SystemUnitFamilyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.SystemUnitClassDescendants">
            <summary>
            Gets all descendant <see cref="T:CAEX_ClassModel.SystemUnitFamilyType"/> Objects of this SystemUnitClass Library.
            </summary>
            <returns>IEnumerable&lt;SystemUnitFamilyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassLibType.Insert_Element(Altova.Xml.TypeBase)">
            <summary>
            Inserting an element generically to this object as the last of it's type.
            Only <see cref="T:CAEX_ClassModel.SystemUnitFamilyType"/> can be inserted.
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <returns><c>true</c> if successfully inserted, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitClassType">
            <summary>
            Class SystemUnitClassType.
            </summary>
            <summary>
            User extensions to the automatic generated class SystemUnitClassType
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.Attribute">
            <summary>
            The attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.ExternalInterface">
            <summary>
            The external interface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.InternalElement">
            <summary>
            The internal element
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.InternalLink">
            <summary>
            The internal link
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.SupportedRoleClass">
            <summary>
            The supported role class
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SystemUnitClassType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface">
            <summary>
            Class MemberElement_ExternalInterface.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.InterfaceClassType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>InterfaceClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>InterfaceClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>InterfaceClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_ExternalInterface.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement">
            <summary>
            Class MemberElement_InternalElement.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.InternalElementType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>InternalElementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>InternalElementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>InternalElementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalElement.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink">
            <summary>
            Class MemberElement_InternalLink.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.InternalLinkType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>InternalLinkType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>InternalLinkType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>InternalLinkType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_InternalLink.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass">
            <summary>
            Class MemberElement_SupportedRoleClass.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.SupportedRoleClassType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>SupportedRoleClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>SupportedRoleClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>SupportedRoleClassType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.MemberElement_SupportedRoleClass.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitClassType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.AssignNewGUIDsAndRedirectExistingInternalLinksAndMirrorObjects(System.Boolean)">
            <summary>
            This Method assigns new GUIds to the SystemUnitClass and its subordinate Children, which have an ID. The References to the
            old IDs in Mirrors and InternalLinks are redirected to the new ID. If a Reference is not found in any of the subordinate
            Elements, the Reference will not be changed.
            This Method shall be called, if a Copy of the SystemUnitClass is done or the SystemUnitClass is Copied for Instantiation.
            When the Class is instantiated, other subordinate Child-SystemUnitClasses should be omitted from the Redirection. This is
            the default behavior, indicated with the Parameter 'includeSystemUnitClasses'.
            </summary>
            <param name="includeSystemUnitClasses">if set to <c>true</c> [include system unit classes].</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.AssignNewGUIDsAndRedirectExistingInternalLinks(System.Boolean)">
            <summary>
            Assigns the new GUIds  and redirect existing internal links.
            </summary>
            <remarks>
             <see cref="M:CAEX_ClassModel.SystemUnitClassType.AssignNewGUIDsAndRedirectExistingInternalLinksAndMirrorObjects(System.Boolean)"/>
            </remarks>
            <param name="includeSystemUnitClasses">if set to <c>true</c> [include system unit classes].</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.InternalElementChildren">
            <summary>
            Enumeration Method for direct Children of Type <see cref="T:CAEX_ClassModel.InternalElementType"/>
            </summary>
            <returns>IEnumerable&lt;InternalElementType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.ExternalInterfaces">
            <summary>
            Enumeration Method for direct Children of Type <see cref="T:CAEX_ClassModel.InterfaceClassType"/>
            </summary>
            <returns>IEnumerable&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.Attributes">
            <summary>
            Enumeration Method for direct Children of Type <see cref="T:CAEX_ClassModel.AttributeType"/>
            </summary>
            <returns>IEnumerable&lt;AttributeType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.UpdateAllInternalElementReferences(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Updates all internal element references.
            </summary>
            <param name="node">The node.</param>
            <param name="includeSystemUnitClasses">if set to <c>true</c> [include system unit classes].</param>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.changedInternalElementIDs">
            <summary>
            The changed internal element ids used in <see cref="M:CAEX_ClassModel.SystemUnitClassType.UpdateInternalElementReferences(System.Xml.XmlElement)"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.changedInterfaceIDs">
            <summary>
            The changed interface id's used in <see cref="M:CAEX_ClassModel.SystemUnitClassType.UpdateInternalElementReferences(System.Xml.XmlElement)"/>
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.UpdateInternalElementReferences(System.Xml.XmlElement)">
            <summary>
            Updates the internal element references.
            </summary>
            <param name="systemUnitClass">The system unit class.</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.SetLinkReferences(System.Xml.XmlElement,System.String,System.Boolean)">
            <summary>
            Sets the link references.
            </summary>
            <param name="internalLink">The internal link.</param>
            <param name="referencedElementID">The referenced element identifier.</param>
            <param name="isA">if set to <c>true</c> [is a].</param>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitClassType.UpdateLinkInformation">
            <summary>
            Class UpdateLinkInformation.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.UpdateLinkInformation.InternalLinkReferences">
            <summary>
            The internal link references
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.UpdateLinkInformation.OriginalId">
            <summary>
            The original identifier
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.UpdateLinkInformation.AddReference(System.Xml.XmlElement)">
            <summary>
            Adds the reference.
            </summary>
            <param name="link">The link.</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.UpdateLinkInformation.UpdateAllReferences(System.String,System.Boolean)">
            <summary>
            Updates all references.
            </summary>
            <param name="ChangedId">The changed identifier.</param>
            <param name="isA">if set to <c>true</c> [is a].</param>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitClassType.UpdateInformation">
            <summary>
            Class UpdateInformation is used for updating references to an internalElement or
            interface class when the ID changes
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.UpdateInformation.ChangedId">
            <summary>
            The changed identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.UpdateInformation.References">
            <summary>
            The references
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.UpdateInformation.InternalLinkAReferences">
            <summary>
            The internal link a references
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.UpdateInformation.InternalLinkBReferences">
            <summary>
            The internal link b references
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitClassType.UpdateInformation.OriginalId">
            <summary>
            The original identifier
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.UpdateInformation.AddOrUpdateReference(System.Xml.XmlElement)">
            <summary>
            Adds the mirror or update it.
            </summary>
            <param name="element">The ie.</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.UpdateInformation.AddInternalLinkReference(System.Xml.XmlElement,System.Boolean)">
            <summary>
            Adds the internal link reference.
            </summary>
            <param name="link">The link.</param>
            <param name="isA">if set to <c>true</c> [is a].</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.UpdateInformation.UpdateAllReferences">
            <summary>
            Changes the ID References in all gathered References and delete the List
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.LinkedObjects">
            <summary>
            Getting an Enumerable of LinkedObjects object of this SystemUnitClass containing references to the concrete referenced InternalElements via an InternalLink.
            </summary>
            <returns>An enumeration of linkedObjects for this SystemUnitClass. </returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.getLinkedObjects">
            <summary>
            Getting a List of LinkedObjects object of this SystemUnitClass containing references to the concrete referenced InternalElements via an InternalLink.
            </summary>
            <returns>A list of linkedObjects for this SystemUnitClass. This list is empty if no InternalLink exists</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.InsertAttributeNodeInternal(System.Xml.XmlNode)">
            <summary>
            Inserting an Attribute node internally
            </summary>
            <param name="attributeNode">The attribute node.</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.New_Attribute(System.String)">
            <summary>
            A new attribute is added to this object
            </summary>
            <param name="attributeName">The name of the Attribute to add</param>
            <returns>The new attribute element</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.Insert_Attribute(CAEX_ClassModel.AttributeType)">
            <summary>
            Inserting an attribute element to this class
            </summary>
            <param name="attributeElement">The attribute to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.New_FrameAttribute(CAEX_ClassModel.FrameValues)">
            <summary>
            Creates a new frame attribute for this object. Position information is internally stored in more than one CAEX attribute.
            </summary>
            <param name="frameValues">The frame values.</param>
            <returns>FrameAttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.New_ExternalInterface(System.String,System.Boolean)">
            <summary>
            Adding a new ExternalInterface instance to this object. The New External Interface is inserted as the
            first ExternalInterface of any existing Interfaces if nothing else is explicit defined.
            </summary>
            <param name="name">The name of the new ExternalInterface</param>
            <param name="asFirst">If set to true, the interface is insert at first, otherwise at last Interface.</param>
            <returns>The new ExternalInterface</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.InsertExternalInterfaceNodeInternal(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Inserting an ExternalInterface node at the correct child position of this node according to CAEX Schema.
            </summary>
            <param name="externalInterfaceElementNode">The External Interface node to insert.</param>
            <param name="asFirst"></param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.New_InternalElement(System.String,System.Boolean)">
            <summary>
            Adding a new InternalElement to this object. If not explicit defined, the InternalElement is added as
            first InternalElement.
            </summary>
            <param name="name">The name of the new InternalElement</param>
            <param name="asFirst">if <c>true</c> inserted as first InternalElement (default), otherwise as last</param>
            <returns>The new InternalElement</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.InsertInternalElementNodeInternal(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Inserting an InternalElement node at the correct child position of this node according to CAEX Schema.
            </summary>
            <param name="internalElementNode">The InternalElement node to insert.</param>
            <param name="asFirst">Inserted at first element (true) or appended as last (false), </param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.AppendInternalElementNodeInternal(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Append an InternalElement node at the correct child position of this node according to CAEX Schema
            and after a specific InternalElement Node
            </summary>
            <param name="internalElementNode">The InternalElement node to insert.</param>
            <param name="internalElementPredecessor">The internal element predecessor.</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.Insert_InternalElement(CAEX_ClassModel.InternalElementType,System.Boolean)">
            <summary>
            Adding an InternalElement to this object. Remark: When inserting the same object at different positions, it is only inserted at
            the last desired position. If you want to insert the same element more than once, you have to create a clone copy of the object.
            </summary>
            <param name="internalElement">The InternalElement to insert.</param>
            <param name="asFirst">Insert as first if set to true (default), otherwise append as last</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.Append_InternalElement(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.InternalElementType)">
            <summary>
            Inserts the internal element after the defined Predecessor. If the Predecessor is null,
            the InternalElement is inserted at the first position of any other InternalElements
            </summary>
            <param name="internalElement">The internal element.</param>
            <param name="internalElementPredecessor">The internal element predecessor.</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.Insert_ExternalInterface(CAEX_ClassModel.InterfaceClassType,System.Boolean)">
            <summary>
            Inserting an ExternalInterface to this class. The Element is inserted at the first Element
            of any existing ExternalInterfaces if nothing else is explicit defined
            </summary>
            <param name="interfaceElement">The interface element.</param>
            <param name="asFirst">Explicit definition of Insertion asFirst (true) or asLast (false)</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.Insert_NewInstance(Altova.Xml.TypeBase,System.Boolean)">
            <summary>
            Inserting a new class instance to this object. This method can be overridden in derived classes.
            The Instance is inserted as the first instance of any other element with the same type if nothing
            else is explicit defined.
            </summary>
            <param name="newInstanceObject">The instance of a class to be inserted at this object. The instance can be of type
            <param name="asFirst">if <c>true</c>, inserted as first (default), otherwise at last</param>
            <see cref="T:CAEX_ClassModel.InternalElementType"/>, <see cref="T:CAEX_ClassModel.InterfaceClassType"/></param>
            <returns>True if insertion was successful, else false.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.InsertSupportedRoleClassNodeInternal(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Inserting an supported role class at the correct child node position. If other SupportedRoleClasses exist,
            the Element is inserted at the first position if nothing else is explicit defined.
            </summary>
            <param name="newSupportedRoleClassNode">The new supported role class node.</param>
            <param name="asFirst">if true, insert as first position(default), otherwise append as last</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.Insert_SupportedRoleClass(CAEX_ClassModel.SupportedRoleClassType,System.Boolean)">
            <summary>
            Inserts the SupportedRoleClass as the first SupportedRoleClass if nothing else if explicit defined.
            </summary>
            <param name="supportedRoleClassElement">The supported role class element.</param>
            <param name="asFirst">Inserted at first position if set to <c>true</c>, otherwise appended at last position</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.New_SupportedRoleClass(System.String,System.Boolean)">
            <summary>
            Inserts a new SupportedRoleClass as the first SupportedRoleClass if nothing else if explicit defined.
            </summary>
            <param name="referencedRoleClassPath">The path to the role class that is referenced</param>
            <param name="asFirst">Inserted at first position if set to <c>true</c>, otherwise appended at last position</param>
            <returns>The new SupportedRoleClass</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.InsertInternalLinkNodeInternal(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Inserts an InternalLink as the first InternalLink if nothing else if explicit defined.
            </summary>
            <param name="newInternalLinkNode">The new internal link node.</param>
            <param name="asFirst">Inserted at first position if set to <c>true</c>, otherwise appended at last position</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.Insert_InternalLink(CAEX_ClassModel.InternalLinkType,System.Boolean)">
            <summary>
            Inserts the specified InternalLink as the first InternalLink if nothing else if explicit defined.
            </summary>
            <param name="internalLinkElement">The internal link element.</param>
            <param name="asFirst">Inserted at first position if set to <c>true</c>, otherwise appended at last position</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.New_InternalLink(System.String,System.Boolean)">
            <summary>
            Inserts a new InternalLink as the first InternalLink if nothing else if explicit defined.
            </summary>
            <param name="name">The name of the InternalLink</param>
            <param name="asFirst">if <c>true</c> insert at first InternalLink, otherwise at last InternalLink</param>
            <returns>The new InternalLink element</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.Ancestors">
            <summary>
            Returns all SystemUnit Classes which are ancestors of this. This SystemUnit Class is
            included in the enumeration as the first Element, The farthest is the last Element in
            the enumeration.
            </summary>
            <returns>IEnumerable&lt;SystemUnitClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.getAttributeField">
            <summary>
            Get the whole attribute field containing a collection of all attributes of this object.
            </summary>
            <returns>CAEX_ClassModel.MemberElement_Attribute.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.GetDerivedAttributes(System.Boolean)">
            <summary>
            Obtain a list of attributes that are derived from base classes.
            The List will also contain the elements own attributes.
            </summary>
            <returns>List&lt;AttributeType&gt;.</returns>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.FrameAttribute">
            <summary>
            Get and set the Frame attribute
            </summary>
            <value>The frame attribute.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitClassType.RefURIAttribute">
            <summary>
            Gets and sets the GeometryReference defined for this object.
            </summary>
            <value>The reference URI attribute.</value>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.findExternalInterface(System.String)">
            <summary>
            Searches for an ExternalInterface in this InternalElement
            </summary>
            <param name="interfaceName">Name of the ExternalInterface to search for</param>
            <returns>An ExternalInterface of the given InternalElement with name attribute equal to interfaceName</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.GetDerivedInterfaces(System.Boolean)">
            <summary>
            Gets the derived interfaces, which include the
            </summary>
            <returns>List&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.GetExternalInterfaces">
            <summary>
            Gets the external interfaces.
            </summary>
            <returns>IEnumerable&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitClassType.GetAttribute(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>AttributeType or null if not found.</returns>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitFamilyType">
            <summary>
            Class SystemUnitFamilyType.
            </summary>
            <summary>
            Class SystemUnitFamilyType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitFamilyType.RefBaseClassPath">
            <summary>
            The reference base class path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitFamilyType.SystemUnitClass">
            <summary>
            The system unit class
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SystemUnitFamilyType"/> class.
            </summary>
            <param name="initialNode">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass">
            <summary>
            Class MemberElement_SystemUnitClass.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.SystemUnitFamilyType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>SystemUnitFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>SystemUnitFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>SystemUnitFamilyType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.MemberElement_SystemUnitClass.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.SystemUnitFamilyType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.ClassName">
            <summary>
            Gets the name of the CAEXObject.
            </summary>
            <value>The name of the class.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.GetRefBaseClassPath">
            <summary>
            Gets the reference base class path.
            </summary>
            <value>The get reference base class path.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.SetRefBaseClassPath">
            <summary>
            Sets the reference base class path.
            </summary>
            <value>The get reference base class path.</value>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.SystemUnitClassChildren">
            <summary>
            Gets all Children <see cref="T:CAEX_ClassModel.SystemUnitFamilyType"/> Objects of this SystemUnitClass.
            </summary>
            <returns>IEnumerable&lt;SystemUnitFamilyType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.SystemUnitClassDescendants">
            <summary>
            Gets all descendant <see cref="T:CAEX_ClassModel.SystemUnitFamilyType"/> Objects of this SystemUnitClass.
            SystemUnitClasses on all levels below this SystemUnitClass are returned.
            </summary>
            <returns>IEnumerable&lt;SystemUnitFamilyType&gt;.</returns>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.IDValue">
            <summary>
            Gets the identifier value.
            </summary>
            <value>The identifier value.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.ReferencedClassName">
            <summary>
            Gets the name of the referenced base class.
            </summary>
            <value>The name of the referenced class.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.ReferencedClassPath">
            <summary>
            Gets the full path of the referenced base class. 
            </summary>
            <value>The class path of the referenced base class.</value>
        </member>
        <member name="P:CAEX_ClassModel.SystemUnitFamilyType.BaseClass">
            <summary>
            Gets or sets the base class for this instance. if another base class is set, the value is overwritten.
            </summary>
            <value>The base class.</value>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.getReferencedClass(System.String)">
            <summary>
            Gets the referenced class.
            </summary>
            <param name="referencedClassPath">The referenced class path.</param>
            <returns>XmlNode.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.MergeClasses(CAEX_ClassModel.SystemUnitFamilyType,CAEX_ClassModel.SystemUnitFamilyType)">
            <summary>
            Merging a class with the elements of its referenced base class. Header elements are not merged!
            </summary>
            <param name="clonedClass">The class to insert the base class elements to</param>
            <param name="baseClass">The base class to merge with</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.CreateClassInstance">
            <summary>
            Creates an instance of this class and returns the instance as a new InternalElement.
            </summary>
            <returns>An instance of this class as a new InternalElement</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.getClassForPath(System.String)">
            <summary>
            Getting the class for a given path. The path value is evaluated via an XPath search
            through the document.
            </summary>
            <param name="referencedClassPath">Full path to the desired class. Hierarchies are separated via slash "/"</param>
            <returns>The SystemUnitFamilyType class which is denoted by the given path, or null if no class
            is found at the given path</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.GetDerivedAttributes(System.Boolean)">
            <summary>
            Obtain a list of attributes that are derived from base classes.
            The List will also contain the elements own attributes.
            </summary>
            <returns>List&lt;AttributeType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.GetDerivedInterfaces(System.Boolean)">
            <summary>
            Gets the derived interfaces, which include the
            </summary>
            <returns>List&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.GetDerivedSupportedRoles(System.Boolean)">
            <summary>
            Gets the derived supported Roles.
            </summary>
            <returns>List&lt;SupportedRoleClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.Insert_Element(Altova.Xml.TypeBase,System.Boolean)">
            <summary>
            Inserting an element generically to this object. If nothing else is explicit defined,
            the Element is inserted as the first of it's kind.
            </summary>
            <param name="elementToInsert">The element to insert.</param>
            <param name="asFirst">Inserted as First if <c>true</c>, otherwise as last</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.Insert_SystemUnitFamilyType(CAEX_ClassModel.SystemUnitFamilyType)">
            <summary>
            Appending a <see cref="T:CAEX_ClassModel.SystemUnitFamilyType"/> object into this object.
            </summary>
            <param name="systemUnitFamilyType">Type of the system unit family.</param>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.InternalCreateClassInstance(System.Collections.Generic.List{System.String})">
            <summary>
            Creates an instance of this class and returns the instance as a new InternalElement. The
            list parameter contains class references that are already visited and are forbidden to
            be referenced again to avoid cyclic references
            </summary>
            <param name="referencedInternalClassesList">A list with already referenced classes that are not allowed to be instantiated again.
            Otherwise cyclic instantiation occurs.</param>
            <returns>An instance of this class as an internal element.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.New_SystemUnitClass(System.String)">
            <summary>
            Adding a new SystemUnitClass to this SystemUnitClass
            </summary>
            <param name="name">The name of the new SystemUnitClass</param>
            <returns>The new SystemUnitClass</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.CreateInstance(CAEX_ClassModel.SystemUnitFamilyType,System.Collections.Generic.List{System.String})">
            <summary>
            Creating an instance of a given class and returns that instance as an InternalElement.
            An instance is created by copying all information of referenced base classes to the
            class to instantiate and finally creating an InternalElement with this information.
            </summary>
            <param name="classToInstantiate">The class to create an instance for</param>
            <param name="referencedClassesList">Empty list, that is filled with referenced class pathes to avoid cyclic referencing</param>
            <returns>An instance of the given class as an InternalElement</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.CurrentAttributeIsNotDerived(CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.AttributeType,CAEX_ClassModel.AttributeType@)">
            <summary>
            Currents the attribute is not derived.
            </summary>
            <param name="clonedClass">The cloned class.</param>
            <param name="attributeChild">The attribute child.</param>
            <param name="clonedAttribute">The cloned attribute.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.SystemUnitFamilyType.ResolveClassReferences(CAEX_ClassModel.SystemUnitFamilyType,CAEX_ClassModel.SystemUnitFamilyType,System.Collections.Generic.List{System.String})">
            <summary>
            Method used to recursively add all elements of the referenced classes hierarchy to the
            cloned class
            </summary>
            <param name="clonedClass">The current class to create an instance for</param>
            <param name="referencedBaseClass">The referenced base class.</param>
            <param name="referencedClassesList">The referenced classes list.</param>
        </member>
        <member name="T:CAEX_ClassModel.UnknownTypeType">
            <summary>
            Class UnknownTypeType.
            </summary>
            <summary>
            Class UnknownTypeType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.UnknownTypeType.Requirements">
            <summary>
            The requirements
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.UnknownTypeType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.UnknownTypeType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.UnknownTypeType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.UnknownTypeType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements">
            <summary>
            Class MemberElement_Requirements.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements"/> is exists.
            </summary>
            <value><c>true</c> if exists; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.First">
            <summary>
            Gets the first.
            </summary>
            <value>The first.</value>
        </member>
        <member name="P:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.Last">
            <summary>
            Gets the last.
            </summary>
            <value>The last.</value>
        </member>
        <member name="P:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CAEX_ClassModel.xs.stringType"/> with the specified i.
            </summary>
            <param name="i">The i.</param>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.Append">
            <summary>
            Appends this instance.
            </summary>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.At(System.Int32)">
            <summary>
            Object at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>xs.stringType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" />-Object, that can be used for iterating the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.UnknownTypeType.MemberElement_Requirements.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:CAEX_ClassModel.UnknownTypeType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.UnknownTypeType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.UnknownTypeType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:CAEX_ClassModel.UnknownTypeType.New_Requirements">
            <summary>
            Add new requirements.
            </summary>
            <returns>CAEX_ClassModel.xs.stringType.</returns>
            <exception cref="T:CAEX_ClassModel.SchemaConformanceException">A Requirements node is already existent.
            It is not allowed to add more than one Requirements nodes to current element according to CAEX Schema</exception>
        </member>
        <member name="T:CAEX_ClassModel.VersionType">
            <summary>
            Class VersionType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.VersionType.ChangeMode">
            <summary>
            The change mode
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.VersionType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.VersionType"/> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.VersionType.StaticInfo">
            <summary>
            Gets the static information.
            </summary>
            <value>The static information.</value>
        </member>
        <member name="M:CAEX_ClassModel.VersionType.instantiateMembers">
            <summary>
            Instantiates the members.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.VersionType.MemberAttribute_ChangeMode">
            <summary>
            Class MemberAttribute_ChangeMode.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.VersionType.MemberAttribute_ChangeMode.info">
            <summary>
            The information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.VersionType.MemberAttribute_ChangeMode.owner">
            <summary>
            The owner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.VersionType.MemberAttribute_ChangeMode.#ctor(Altova.Xml.TypeBase,Altova.TypeInfo.MemberInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.VersionType.MemberAttribute_ChangeMode"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="info">The information.</param>
        </member>
        <member name="P:CAEX_ClassModel.VersionType.MemberAttribute_ChangeMode.Info">
            <summary>
            Gets the information.
            </summary>
            <value>The information.</value>
        </member>
        <member name="P:CAEX_ClassModel.VersionType.MemberAttribute_ChangeMode.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:CAEX_ClassModel.VersionType.MemberAttribute_ChangeMode.Exists">
            <summary>
            Check if this instance exists.
            </summary>
            <returns><c>true</c> if exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.VersionType.MemberAttribute_ChangeMode.Remove">
            <summary>
            Removes this instance.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.VersionType.Enumerator">
            <summary>
            Class Enumerator.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.VersionType.Enumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase" /> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.VersionType.Enumerator.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:CAEX_ClassModel.EnumeratorBase">
            <summary>
            Class EnumeratorBase.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.EnumeratorBase.inner">
            <summary>
            The inner
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.EnumeratorBase.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.EnumeratorBase"/> class.
            </summary>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:CAEX_ClassModel.EnumeratorBase.Current">
            <summary>
            Get the current element in the collection.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:CAEX_ClassModel.EnumeratorBase.InnerCurrent">
            <summary>
            Gets the inner current.
            </summary>
            <value>The inner current.</value>
        </member>
        <member name="M:CAEX_ClassModel.EnumeratorBase.MoveNext">
            <summary>
            Sets the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element, false if the enumerator has passed the end of the listing.</returns>
        </member>
        <member name="M:CAEX_ClassModel.EnumeratorBase.Reset">
            <summary>
            Sets the enumerator to its initial position before the first element in the collection.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEX_CLASSModel_TagNames">
            <summary>
            Class CAEX_CLASSModel_TagNames.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEX_CLASSModel_TagNames.TagName(System.Type)">
            <summary>
            gets the caex-Tag name for the caex-wrapper type.
            </summary>
            <param name="CaexWrapperType">Type of the caex wrapper.</param>
            <returns>System.String.</returns>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ADDITIONALINFORMATION_STRING">
            <summary>
            The Name of the CAEX-Element 'AdditionalInformation'. This Element has no special CAEX-Wrapper.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ALIAS_ATTRIBUTE">
            <summary>
            The Name of the CAEX-Attribute 'Alias'. This is a Property in the CAEX-Wrapper <see cref="T:CAEX_ClassModel.ExternalReferenceType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_CONSTRAINT_NOMINAL_STRING">
            <summary>
            The Name of the CAEX-Element 'NominalScaledType'. CAEX-Wrapper is <see cref="T:CAEX_ClassModel.NominalScaledTypeType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_DATATYPE_STRING">
            <summary>
            The Name of the CAEX-Element 'AttributeDataType'. CAEX-Wrapper is <see cref="T:CAEX_ClassModel.AttributeDataTypeType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_CONSTRAINT_NOMINAL_VALUE_STRING">
            <summary>
            The Name of the CAEX-Attribute 'RequiredValue'. This is a Property in the CAEX-Wrapper <see cref="T:CAEX_ClassModel.NominalScaledTypeType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_VALUE_REQUIREMENT_STRING">
            <summary>
            The Name of the CAEX-Element 'AttributeValueRequirement'. This is a Property in the CAEX-Wrapper <see cref="T:CAEX_ClassModel.AttributeValueRequirementType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.REF_SEMANTIC_TYPE">
            <summary>
            The Name of the CAEX-Element 'RefSemantic'. This is a CAEX-Element with the CAEX-Wrapper <see cref="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.REF_SEMANTIC_TYPE"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_CONSTRAINT_ORDINAL_MAX_STRING">
            <summary>
            The Name of the CAEX-Attribute 'RequiredMaxValue'. This is a Property in the CAEX-Wrapper <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_CONSTRAINT_ORDINAL_MIN_STRING">
            <summary>
            The Name of the CAEX-Attribute 'RequiredMinValue'. This is a Property in the CAEX-Wrapper <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_CONSTRAINT_ORDINAL_STRING">
            <summary>
            The Name of the CAEX-Element 'OrdinalScaledType'. CAEX-Wrapper is <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_CONSTRAINT_ORDINAL_VALUE_STRING">
            <summary>
            The Name of the CAEX-Attribute 'RequiredValue'. This is a Property in the CAEX-Wrapper <see cref="T:CAEX_ClassModel.OrdinalScaledTypeType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_CONSTRAINT_STRING">
            <summary>
            The Name of the CAEX-Element 'Constraint'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.AttributeValueRequirementType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_UNIT_STRING">
            <summary>
            The Name of the CAEX-Attribute 'Unit' of the CAEX-Element <see cref="T:CAEX_ClassModel.AttributeType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_CONSTRAINT_UNKNOWN_REQ_STRING">
            <summary>
            The Name of the CAEX-Element 'Requirements'. This is a Child of the CAEX-Wrapper <see cref="T:CAEX_ClassModel.UnknownTypeType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_CONSTRAINT_UNKNOWN_STRING">
            <summary>
            The Name of the CAEX-Element 'UnknownType'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.UnknownTypeType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_DEFAULTVALUE_STRING">
            <summary>
            The Name of the CAEX-Attribute 'DefaultValue'. This is a Property in the CAEX-Wrapper <see cref="T:CAEX_ClassModel.AttributeType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_NAME_REF_PARTNER_SIDE_A">
            <summary>
            The Name of the CAEX-Attribute 'RefPartnerSideA'. This is a Property in the CAEX-Wrapper <see cref="T:CAEX_ClassModel.InternalLinkType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_NAME_REF_PARTNER_SIDE_B">
            <summary>
            The Name of the CAEX-Attribute 'RefPartnerSideB'. This is a Property in the CAEX-Wrapper <see cref="T:CAEX_ClassModel.InternalLinkType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_NAME_REFBASECLASSPATH">
            <summary>
            The Name of the CAEX-Attribute 'RefBaseClassPath'. This is a Property in all Classes that implement <see cref="T:CAEX_ClassModel.IClassWithBaseClassReference"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_NAME_REFBASEROLECLASSPATH">
            <summary>
            The Name of the CAEX-Attribute 'RefBaseRoleClassPath'. This is a Property in <see cref="T:CAEX_ClassModel.RoleRequirementsType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_NAME_REFBASESYSTEMUNITPATH">
            <summary>
            The Name of the CAEX-Attribute 'RefBaseSystemUnitPath'. This is a Property in <see cref="T:CAEX_ClassModel.InternalElementType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_NAME_REFROLECLASSPATH">
            <summary>
            The Name of the CAEX-Attribute 'RefRoleClassPath'. This is a Property in <see cref="T:CAEX_ClassModel.SupportedRoleClassType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_NAME_SCHEMA_LOCATION">
            <summary>
            The Name of the Xml-Schema Location Attribute 'xsi:noNamespaceSchemaLocation' 
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_NAME_SCHEMA_VERSION">
            <summary>
            The Name of the Xml-Schema Version Attribute 'SchemaVersion' of the CAEX-Element <see cref="T:CAEX_ClassModel.CAEXFileType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_NAME_CORRESPONDING_ATTRIBUTE_PATH">
            <summary>
            The Name of the Attribute 'CorrespondingAttributePath' of the CAEX-Element <see cref="T:CAEX_ClassModel.RefSemanticType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_NAME_FILENAME">
            <summary>
            The Name of the Attribute 'FileName' of the CAEX-Element <see cref="T:CAEX_ClassModel.CAEXFileType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_REFSEMANTIC_STRING">
            <summary>
            The Name of the CAEX-Attribute 'RefSemantic'. A Property in <see cref="T:CAEX_ClassModel.AttributeType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_STRING">
            <summary>
            The Name of the CAEX-Element 'Attribute'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.AttributeType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_VALUE_STRING">
            <summary>
            The Name of the CAEX-Attribute 'Value'. A Property in the CAEX-Wrapper <see cref="T:CAEX_ClassModel.AttributeType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_SYSTEM_UNIT_ATTRIBUTE_NAME">
            <summary>
            The Name of the CAEX-Attribute 'SystemUnitAttributeName' in an AttributeNameMapping. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.AttributeNameMappingType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_ROLE_ATTRIBUTE_NAME">
            <summary>
            The Name of the CAEX-Attribute 'RoleAttributeName' in an AttributeNameMapping. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.AttributeNameMappingType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_SYSTEM_UNIT_INTERFACE_NAME">
            <summary>
            The Name of the CAEX-Attribute 'SystemUnitInterfaceName' in an InterfaceNameMapping. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.InterfaceNameMappingType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ATTRIBUTE_ROLE_INTERFACE_NAME">
            <summary>
            The Name of the CAEX-Attribute 'RoleInterfaceName' in an InterfaceNameMapping. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.InterfaceNameMappingType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.CAEX_FILE">
            <summary>
            The Name of the CAEX-Element 'CAEXFile'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.CAEXFileType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.CAEXBASICOBJECT">
            <summary>
            The Type Name of any CAEXBasicObject. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.CAEXBasicObject"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.CAEXOBJECT">
            <summary>
            The Type Name of any CAEXObject. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.CAEXObject"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.COPYRIGHT_STRING">
            <summary>
            The Name of the CAEX-Element 'Copyright'. This is an element in any Header <see cref="T:CAEX_ClassModel.CAEXBasicObject"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.DESCRIPTION_STRING">
            <summary>
            The Name of the CAEX-Element 'Copyright'. This is an element in any Header <see cref="T:CAEX_ClassModel.CAEXBasicObject"/>. 
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.EXTERNALINTERFACE_STRING">
            <summary>
            The Name of the CAEX-Element 'ExternalInterface'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.ExternalInterfaceType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.EXTERNALREFERENCE_STRING">
            <summary>
            The Name of the CAEX-Element 'ExternalReference'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.ExternalReferenceType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ID_ATTRIBUTE">
            <summary>
            The Name of the CAEX-Attribute 'ID'. This is defined for every <see cref="T:CAEX_ClassModel.CAEXObject"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.INSTANCEHIERARCHY_STRING">
            <summary>
            The Name of the CAEX-Element 'InstanceHierarchy'. CAEX-Wrapper is <see cref="T:CAEX_ClassModel.InstanceHierarchyType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.INTERFACECLASS_STRING">
            <summary>
            The Name of the CAEX-Element 'InterfaceClass'. The CAEX-Wrappers are <see cref="T:CAEX_ClassModel.InterfaceClassType"/> and <see cref="T:CAEX_ClassModel.InterfaceFamilyType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.INTERFACECLASSLIB_STRING">
            <summary>
            The Name of the CAEX-Element 'InterfaceClassLib'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.InterfaceClassLibType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.INTERNALELEMENT_STRING">
            <summary>
            The Name of the CAEX-Element 'InternalElement'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.InternalElementType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.INTERNALLINK_STRING">
            <summary>
            The Name of the CAEX-Element 'InternalLink'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.InternalLinkType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.MAPPINGOBJECT_ATTRIBUTENAME_STRING">
            <summary>
            The Name of the CAEX-Element 'AttributeNameMapping'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.AttributeNameMappingType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.MAPPINGOBJECT_INTERFACENAME_STRING">
            <summary>
            The Name of the CAEX-Element 'InterfaceNameMapping'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.InterfaceNameMappingType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.MAPPINGOBJECT_STRING">
            <summary>
            The Name of the CAEX-Element 'MappingObject'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.MappingType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.MAPPINGTYPE_STRING">
            <summary>
            The Name of the Type of the CAEX-Element 'MappingObject'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.MappingType"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.META_ATTRIBUTE_NAME_AUTOMATIONMLVERSION">
            <summary>
            The Name of the additional AutomationML-CaexFile-Attribute 'AutomationMLVersion'.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.META_WRITERHEADER_STRING">
            <summary>
            The Name of the additional AutomationML-CaexFile-Element 'WriterHeader'.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.NAME_ATTRIBUTE">
            <summary>
            The Name of the CAEX-Attribute 'Name'. This is an Element in every <see cref="T:CAEX_ClassModel.CAEXObject"/>.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.PATH_ATTRIBUTE">
            <summary>
            The Name of the CAEX-Attribute 'Path'. This is defined in <see cref="T:CAEX_ClassModel.ExternalReferenceType"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.CHANGEMODE_ATTRIBUTE">
            <summary>
            The Name of the CAEX-Attribute 'ChangeMode'. This is an attribute of any <see cref="T:CAEX_ClassModel.CAEXBasicObject"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.REVISION_NEWVERSION_STRING">
            <summary>
            The Name of the CAEX-Element 'NewVersion'. This is an element in <see cref="T:CAEX_ClassModel.RevisionType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.REVISION_OLDVERSION_STRING">
            <summary>
            The Name of the CAEX-Element 'OldVersion'. This is an element in <see cref="T:CAEX_ClassModel.RevisionType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.REVISION_DATE_STRING">
            <summary>
            The Name of the CAEX-Element 'RevisionDate'. This is an element in <see cref="T:CAEX_ClassModel.RevisionType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.REVISION_COMMENT">
            <summary>
            The Name of the CAEX-Element 'Comment'. This is an element in <see cref="T:CAEX_ClassModel.RevisionType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.REVISION_AUTHOR_NAME">
            <summary>
            The Name of the CAEX-Element 'AuthorName'. This is an element in <see cref="T:CAEX_ClassModel.RevisionType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.REVISION_STRING">
            <summary>
            The Name of the CAEX-Element 'Revision'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.RevisionType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ROLE_COMBINEDKINEMATIC">
            <summary>
            This Role name is not defined in an AutomationML RoleClassLib. So don't use it anymore.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ROLECLASS_STRING">
            <summary>
            The Name of the CAEX-Element 'RoleClass'. The CAEX-Wrappers are <see cref="T:CAEX_ClassModel.RoleClassType"/> and  <see cref="T:CAEX_ClassModel.RoleFamilyType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ROLECLASSLIB_STRING">
            <summary>
            The Name of the CAEX-Element 'RoleClassLib'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.RoleClassLibType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ROLEREQUIREMENTS_STRING">
            <summary>
            The Name of the CAEX-Element 'RoleRequirements'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.RoleRequirementsType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.SUPPORTEDROLECLASS_STRING">
            <summary>
            The Name of the CAEX-Element 'SupportedRoleClass'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.SupportedRoleClassType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.SYSTEMUNITCLASS_STRING">
            <summary>
            The Name of the CAEX-Element 'SystemUnitClass'. The CAEX-Wrappers are <see cref="T:CAEX_ClassModel.SystemUnitClassType"/> and  <see cref="T:CAEX_ClassModel.SystemUnitFamilyType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.SYSTEMUNITFAMILYTYPE_STRING">
            <summary>
            The TypeName of the CAEX-Element 'SystemUnitClass'. The CAEX-Wrappers are <see cref="T:CAEX_ClassModel.SystemUnitClassType"/> and  <see cref="T:CAEX_ClassModel.SystemUnitFamilyType"/> for the Type.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.ROLEFAMILYTYPE_STRING">
            <summary>
            The TypeName of the CAEX-Element 'RoleClass'. The CAEX-Wrappers are <see cref="T:CAEX_ClassModel.RoleClassType"/> and  <see cref="T:CAEX_ClassModel.RoleFamilyType"/> for the Type.                
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.INTERFACEFAMILYTYPE_STRING">
            <summary>
            The TypeName of the CAEX-Element 'InterfaceClass'. The CAEX-Wrappers are <see cref="T:CAEX_ClassModel.InterfaceClassType"/> and <see cref="T:CAEX_ClassModel.InterfaceFamilyType"/>  for the Type. 
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.SYSTEMUNITCLASSLIB_STRING">
            <summary>
            The Name of the CAEX-Element 'SystemUnitClassLib'. The CAEX-Wrapper is <see cref="T:CAEX_ClassModel.SystemUnitClassLibType"/>.         
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_CLASSModel_TagNames.VERSION_STRING">
            <summary>
            The Name of the CAEX-Element 'Version'. This may be defined in every <see cref="T:CAEX_ClassModel.CAEXBasicObject"/>.         
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEX_ClassModel_TypeInfo">
            <summary>
            Class CAEX_ClassModel_TypeInfo.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ni">
            <summary>
            The altova namespace index
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ni_xs">
            <summary>
            The altova xs namespace index
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_tif">
            <summary>
            The altova type information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_AttributeType">
            <summary>
            The altova type information attribute type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_AttributeValueRequirementType">
            <summary>
            The altova type information attribute value requirement type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_CAEXBasicObject">
            <summary>
            The altova type information caex basic object
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_CAEXObject">
            <summary>
            The altova type information caex object
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_ChangeMode">
            <summary>
            The altova type information change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_InterfaceClassType">
            <summary>
            The altova type information interface class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_InterfaceFamilyType">
            <summary>
            The altova type information interface family type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_InternalElementType">
            <summary>
            The altova type information internal element type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_MappingType">
            <summary>
            The altova type information mapping type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_RoleClassType">
            <summary>
            The altova type information role class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_RoleFamilyType">
            <summary>
            The altova type information role family type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_SystemUnitClassType">
            <summary>
            The altova type information system unit class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_SystemUnitFamilyType">
            <summary>
            The altova type information system unit family type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_CAEX_ClassModel2">
            <summary>
            The altova type information cae x_ class model2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_CAEXFileType">
            <summary>
            The altova type information caex file type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_DescriptionType">
            <summary>
            The altova type information description type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_VersionType">
            <summary>
            The altova type information version type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_RevisionType">
            <summary>
            The altova type information revision type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_CopyrightType">
            <summary>
            The altova type information copyright type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_ExternalReferenceType">
            <summary>
            The altova type information external reference type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_InstanceHierarchyType">
            <summary>
            The altova type information instance hierarchy type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_InterfaceClassLibType">
            <summary>
            The altova type information interface class library type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_RoleClassLibType">
            <summary>
            The altova type information role class library type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_SystemUnitClassLibType">
            <summary>
            The altova type information system unit class library type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_AttributeDataTypeType">
            <summary>
            The altova type information attribute data type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_RefSemanticType">
            <summary>
            The altova type information reference semantic type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_OrdinalScaledTypeType">
            <summary>
            The altova type information ordinal scaled type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_NominalScaledTypeType">
            <summary>
            The altova type information nominal scaled type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_UnknownTypeType">
            <summary>
            The altova type information unknown type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_SupportedRoleClassType">
            <summary>
            The altova type information supported role class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_InternalLinkType">
            <summary>
            The altova type information internal link type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_RoleRequirementsType">
            <summary>
            The altova type information role requirements type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_AttributeNameMappingType">
            <summary>
            The altova type information attribute name mapping type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_InterfaceNameMappingType">
            <summary>
            The altova type information interface name mapping type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_altova_ExternalInterfaceType">
            <summary>
            The altova type information external interface type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_til">
            <summary>
            The altova type information l
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_tif_xs">
            <summary>
            The altova type information f_xs
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_ENTITIES">
            <summary>
            The altova -xs  type information  entities
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_ENTITY">
            <summary>
            The altova -xs  type information entity
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_ID">
            <summary>
            The altova -xs  type information identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_IDREF">
            <summary>
            The altova -xs  type information idref
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_IDREFS">
            <summary>
            The altova -xs  type information idrefs
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_NCName">
            <summary>
            The altova -xs  type information nc name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_NMTOKEN">
            <summary>
            The altova -xs  type information nmtoken
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_NMTOKENS">
            <summary>
            The altova -xs  type information nmtokens
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_NOTATION">
            <summary>
            The altova -xs  type information notation
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_Name">
            <summary>
            The altova -xs  type information name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_QName">
            <summary>
            The altova -xs  type information q name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_anySimpleType">
            <summary>
            The altova -xs  type information any simple type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_anyType">
            <summary>
            The altova -xs  type information any type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_anyURI">
            <summary>
            The altova -xs  type information any URI
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_base64Binary">
            <summary>
            The altova -xs  type informationbase64 binary
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_boolean">
            <summary>
            The altova -xs  type information boolean
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_byte2">
            <summary>
            The altova -xs  type informationbyte2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_date">
            <summary>
            The altova -xs  type information date
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_dateTime">
            <summary>
            The altova -xs  type information date time
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_decimal2">
            <summary>
            The altova -xs  type informationdecimal2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_double2">
            <summary>
            The altova -xs  type informationdouble2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_duration">
            <summary>
            The altova -xs  type information duration
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_float2">
            <summary>
            The altova -xs  type informationfloat2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_gDay">
            <summary>
            The altova -xs  type information day
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_gMonth">
            <summary>
            The altova -xs  type information month
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_gMonthDay">
            <summary>
            The altova -xs  type information month day
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_gYear">
            <summary>
            The altova -xs  type information year
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_gYearMonth">
            <summary>
            The altova -xs  type information year month
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_hexBinary">
            <summary>
            The altova -xs  type information hex binary
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_int2">
            <summary>
            The altova -xs  type information int2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_integer">
            <summary>
            The altova -xs  type information integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_language">
            <summary>
            The altova -xs  type information language
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_long2">
            <summary>
            The altova -xs  type informationlong2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_negativeInteger">
            <summary>
            The altova -xs  type information negative integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_nonNegativeInteger">
            <summary>
            The altova -xs  type information non negative integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_nonPositiveInteger">
            <summary>
            The altova -xs  type information non positive integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_normalizedString">
            <summary>
            The altova -xs  type information normalized string
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_positiveInteger">
            <summary>
            The altova -xs  type information positive integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_short2">
            <summary>
            The altova -xs  type informationshort2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_string2">
            <summary>
            The altova -xs  type informationstring2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_time">
            <summary>
            The altova -xs  type information time
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_token">
            <summary>
            The altova -xs  type information token
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_unsignedByte">
            <summary>
            The altova -xs  type information unsigned byte
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_unsignedInt">
            <summary>
            The altova -xs  type information unsigned int
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_unsignedLong">
            <summary>
            The altova -xs  type information unsigned long
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_unsignedShort">
            <summary>
            The altova -xs  type information unsigned short
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_stringType">
            <summary>
            The altova -xs  type information string type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_ti_xs_altova_dateTimeType">
            <summary>
            The altova -xs  type information string time type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_til_xs">
            <summary>
            The _altova_til_xs
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_AttributeType">
            <summary>
            The altova member info index attribute type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_ChangeMode">
            <summary>
            The altova member info  attribute type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_ID">
            <summary>
            The altova member info  attribute type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_Name">
            <summary>
            The altova member info  attribute type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_Unit">
            <summary>
            The altova member info  attribute type_altova_ unit
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_AttributeDataType">
            <summary>
            The altova member info  attribute type_altova_ attribute data type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_Description">
            <summary>
            The altova member info  attribute type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_Version">
            <summary>
            The altova member info  attribute type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_Revision">
            <summary>
            The altova member info  attribute type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_Copyright">
            <summary>
            The altova member info  attribute type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_AdditionalInformation">
            <summary>
            The altova member info  attribute type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_DefaultValue">
            <summary>
            The altova member info  attribute type_altova_ default value
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_Value2">
            <summary>
            The altova member info  attribute type_altova_ value2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_RefSemantic">
            <summary>
            The altova member info  attribute type_altova_ reference semantic
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_Constraint">
            <summary>
            The altova member info  attribute type_altova_ constraint
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeType_altova_Attribute">
            <summary>
            The altova member info  attribute type_altova_ attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_AttributeType">
            <summary>
            The _altova_mil_altova_ attribute type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_AttributeValueRequirementType">
            <summary>
            The _altova_mif_altova_ attribute value requirement type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeValueRequirementType_altova_ChangeMode">
            <summary>
            The altova member info  attribute value requirement type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeValueRequirementType_altova_Name">
            <summary>
            The altova member info  attribute value requirement type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeValueRequirementType_altova_Description">
            <summary>
            The altova member info  attribute value requirement type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeValueRequirementType_altova_Version">
            <summary>
            The altova member info  attribute value requirement type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeValueRequirementType_altova_Revision">
            <summary>
            The altova member info  attribute value requirement type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeValueRequirementType_altova_Copyright">
            <summary>
            The altova member info  attribute value requirement type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeValueRequirementType_altova_AdditionalInformation">
            <summary>
            The altova member info  attribute value requirement type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeValueRequirementType_altova_OrdinalScaledType">
            <summary>
            The altova member info  attribute value requirement type_altova_ ordinal scaled type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeValueRequirementType_altova_NominalScaledType">
            <summary>
            The altova member info  attribute value requirement type_altova_ nominal scaled type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeValueRequirementType_altova_UnknownType">
            <summary>
            The altova member info  attribute value requirement type_altova_ unknown type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_AttributeValueRequirementType">
            <summary>
            The _altova_mil_altova_ attribute value requirement type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_CAEXBasicObject">
            <summary>
            The _altova_mif_altova_ caex basic object
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXBasicObject_altova_ChangeMode">
            <summary>
            The altova member info  caex basic object_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXBasicObject_altova_Description">
            <summary>
            The altova member info  caex basic object_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXBasicObject_altova_Version">
            <summary>
            The altova member info  caex basic object_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXBasicObject_altova_Revision">
            <summary>
            The altova member info  caex basic object_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXBasicObject_altova_Copyright">
            <summary>
            The altova member info  caex basic object_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXBasicObject_altova_AdditionalInformation">
            <summary>
            The altova member info  caex basic object_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_CAEXBasicObject">
            <summary>
            The _altova_mil_altova_ caex basic object
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_CAEXObject">
            <summary>
            The _altova_mif_altova_ caex object
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXObject_altova_ChangeMode">
            <summary>
            The altova member info  caex object_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXObject_altova_ID">
            <summary>
            The altova member info  caex object_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXObject_altova_Name">
            <summary>
            The altova member info  caex object_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXObject_altova_Description">
            <summary>
            The altova member info  caex object_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXObject_altova_Version">
            <summary>
            The altova member info  caex object_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXObject_altova_Revision">
            <summary>
            The altova member info  caex object_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXObject_altova_Copyright">
            <summary>
            The altova member info  caex object_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXObject_altova_AdditionalInformation">
            <summary>
            The altova member info  caex object_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_CAEXObject">
            <summary>
            The _altova_mil_altova_ caex object
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_ChangeMode">
            <summary>
            The _altova_mif_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_ChangeMode">
            <summary>
            The _altova_mil_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_InterfaceClassType">
            <summary>
            The _altova_mif_altova_ interface class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassType_altova_ChangeMode">
            <summary>
            The altova member info  interface class type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassType_altova_ID">
            <summary>
            The altova member info  interface class type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassType_altova_Name">
            <summary>
            The altova member info  interface class type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassType_altova_RefBaseClassPath">
            <summary>
            The altova member info  interface class type_altova_ reference base class path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassType_altova_Description">
            <summary>
            The altova member info  interface class type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassType_altova_Version">
            <summary>
            The altova member info  interface class type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassType_altova_Revision">
            <summary>
            The altova member info  interface class type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassType_altova_Copyright">
            <summary>
            The altova member info  interface class type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassType_altova_AdditionalInformation">
            <summary>
            The altova member info  interface class type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassType_altova_Attribute">
            <summary>
            The altova member info  interface class type_altova_ attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_InterfaceClassType">
            <summary>
            The _altova_mil_altova_ interface class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_InterfaceFamilyType">
            <summary>
            The _altova_mif_altova_ interface family type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceFamilyType_altova_ChangeMode">
            <summary>
            The altova member info  interface family type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceFamilyType_altova_ID">
            <summary>
            The altova member info  interface family type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceFamilyType_altova_Name">
            <summary>
            The altova member info  interface family type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceFamilyType_altova_RefBaseClassPath">
            <summary>
            The altova member info  interface family type_altova_ reference base class path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceFamilyType_altova_Description">
            <summary>
            The altova member info  interface family type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceFamilyType_altova_Version">
            <summary>
            The altova member info  interface family type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceFamilyType_altova_Revision">
            <summary>
            The altova member info  interface family type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceFamilyType_altova_Copyright">
            <summary>
            The altova member info  interface family type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceFamilyType_altova_AdditionalInformation">
            <summary>
            The altova member info  interface family type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceFamilyType_altova_Attribute">
            <summary>
            The altova member info  interface family type_altova_ attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceFamilyType_altova_InterfaceClass">
            <summary>
            The altova member info  interface family type_altova_ interface class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_InterfaceFamilyType">
            <summary>
            The _altova_mil_altova_ interface family type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_InternalElementType">
            <summary>
            The _altova_mif_altova_ internal element type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_ChangeMode">
            <summary>
            The altova member info  internal element type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_ID">
            <summary>
            The altova member info  internal element type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_Name">
            <summary>
            The altova member info  internal element type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_RefBaseSystemUnitPath">
            <summary>
            The altova member info  internal element type_altova_ reference base system unit path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_Description">
            <summary>
            The altova member info  internal element type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_Version">
            <summary>
            The altova member info  internal element type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_Revision">
            <summary>
            The altova member info  internal element type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_Copyright">
            <summary>
            The altova member info  internal element type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_AdditionalInformation">
            <summary>
            The altova member info  internal element type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_Attribute">
            <summary>
            The altova member info  internal element type_altova_ attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_ExternalInterface">
            <summary>
            The altova member info  internal element type_altova_ external interface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_InternalElement">
            <summary>
            The altova member info  internal element type_altova_ internal element
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_SupportedRoleClass">
            <summary>
            The altova member info  internal element type_altova_ supported role class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_InternalLink">
            <summary>
            The altova member info  internal element type_altova_ internal link
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_RoleRequirements">
            <summary>
            The altova member info  internal element type_altova_ role requirements
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalElementType_altova_MappingObject">
            <summary>
            The altova member info  internal element type_altova_ mapping object
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_InternalElementType">
            <summary>
            The _altova_mil_altova_ internal element type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_MappingType">
            <summary>
            The _altova_mif_altova_ mapping type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_MappingType_altova_ChangeMode">
            <summary>
            The altova member info  mapping type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_MappingType_altova_Description">
            <summary>
            The altova member info  mapping type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_MappingType_altova_Version">
            <summary>
            The altova member info  mapping type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_MappingType_altova_Revision">
            <summary>
            The altova member info  mapping type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_MappingType_altova_Copyright">
            <summary>
            The altova member info  mapping type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_MappingType_altova_AdditionalInformation">
            <summary>
            The altova member info  mapping type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_MappingType_altova_AttributeNameMapping">
            <summary>
            The altova member info  mapping type_altova_ attribute name mapping
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_MappingType_altova_InterfaceNameMapping">
            <summary>
            The altova member info  mapping type_altova_ interface name mapping
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_MappingType">
            <summary>
            The _altova_mil_altova_ mapping type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_RoleClassType">
            <summary>
            The _altova_mif_altova_ role class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassType_altova_ChangeMode">
            <summary>
            The altova member info  role class type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassType_altova_ID">
            <summary>
            The altova member info  role class type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassType_altova_Name">
            <summary>
            The altova member info  role class type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassType_altova_RefBaseClassPath">
            <summary>
            The altova member info  role class type_altova_ reference base class path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassType_altova_Description">
            <summary>
            The altova member info  role class type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassType_altova_Version">
            <summary>
            The altova member info  role class type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassType_altova_Revision">
            <summary>
            The altova member info  role class type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassType_altova_Copyright">
            <summary>
            The altova member info  role class type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassType_altova_AdditionalInformation">
            <summary>
            The altova member info  role class type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassType_altova_Attribute">
            <summary>
            The altova member info  role class type_altova_ attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassType_altova_ExternalInterface">
            <summary>
            The altova member info  role class type_altova_ external interface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_RoleClassType">
            <summary>
            The _altova_mil_altova_ role class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_RoleFamilyType">
            <summary>
            The _altova_mif_altova_ role family type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_ChangeMode">
            <summary>
            The altova member info  role family type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_ID">
            <summary>
            The altova member info  role family type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_Name">
            <summary>
            The altova member info  role family type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_RefBaseClassPath">
            <summary>
            The altova member info  role family type_altova_ reference base class path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_Description">
            <summary>
            The altova member info  role family type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_Version">
            <summary>
            The altova member info  role family type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_Revision">
            <summary>
            The altova member info  role family type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_Copyright">
            <summary>
            The altova member info  role family type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_AdditionalInformation">
            <summary>
            The altova member info  role family type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_Attribute">
            <summary>
            The altova member info  role family type_altova_ attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_ExternalInterface">
            <summary>
            The altova member info  role family type_altova_ external interface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleFamilyType_altova_RoleClass">
            <summary>
            The altova member info  role family type_altova_ role class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_RoleFamilyType">
            <summary>
            The _altova_mil_altova_ role family type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_SystemUnitClassType">
            <summary>
            The _altova_mif_altova_ system unit class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_ChangeMode">
            <summary>
            The altova member info  system unit class type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_ID">
            <summary>
            The altova member info  system unit class type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_Name">
            <summary>
            The altova member info  system unit class type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_Description">
            <summary>
            The altova member info  system unit class type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_Version">
            <summary>
            The altova member info  system unit class type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_Revision">
            <summary>
            The altova member info  system unit class type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_Copyright">
            <summary>
            The altova member info  system unit class type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_AdditionalInformation">
            <summary>
            The altova member info  system unit class type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_Attribute">
            <summary>
            The altova member info  system unit class type_altova_ attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_ExternalInterface">
            <summary>
            The altova member info  system unit class type_altova_ external interface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_InternalElement">
            <summary>
            The altova member info  system unit class type_altova_ internal element
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_SupportedRoleClass">
            <summary>
            The altova member info  system unit class type_altova_ supported role class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassType_altova_InternalLink">
            <summary>
            The altova member info  system unit class type_altova_ internal link
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_SystemUnitClassType">
            <summary>
            The _altova_mil_altova_ system unit class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_SystemUnitFamilyType">
            <summary>
            The _altova_mif_altova_ system unit family type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_ChangeMode">
            <summary>
            The altova member info  system unit family type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_ID">
            <summary>
            The altova member info  system unit family type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_Name">
            <summary>
            The altova member info  system unit family type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_RefBaseClassPath">
            <summary>
            The altova member info  system unit family type_altova_ reference base class path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_Description">
            <summary>
            The altova member info  system unit family type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_Version">
            <summary>
            The altova member info  system unit family type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_Revision">
            <summary>
            The altova member info  system unit family type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_Copyright">
            <summary>
            The altova member info  system unit family type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_AdditionalInformation">
            <summary>
            The altova member info  system unit family type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_Attribute">
            <summary>
            The altova member info  system unit family type_altova_ attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_ExternalInterface">
            <summary>
            The altova member info  system unit family type_altova_ external interface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_InternalElement">
            <summary>
            The altova member info  system unit family type_altova_ internal element
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_SupportedRoleClass">
            <summary>
            The altova member info  system unit family type_altova_ supported role class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_InternalLink">
            <summary>
            The altova member info  system unit family type_altova_ internal link
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitFamilyType_altova_SystemUnitClass">
            <summary>
            The altova member info  system unit family type_altova_ system unit class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_SystemUnitFamilyType">
            <summary>
            The _altova_mil_altova_ system unit family type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_CAEX_ClassModel2">
            <summary>
            The _altova_mif_altova_ cae x_ class model2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEX_ClassModel2_altova_CAEXFile">
            <summary>
            The altova member info  cae x_ class model2_altova_ caex file
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_CAEX_ClassModel2">
            <summary>
            The _altova_mil_altova_ cae x_ class model2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_CAEXFileType">
            <summary>
            The _altova_mif_altova_ caex file type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_ChangeMode">
            <summary>
            The altova member info  caex file type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_FileName">
            <summary>
            The altova member info  caex file type_altova_ file name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_SchemaVersion">
            <summary>
            The altova member info  caex file type_altova_ schema version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_Description">
            <summary>
            The altova member info  caex file type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_Version">
            <summary>
            The altova member info  caex file type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_Revision">
            <summary>
            The altova member info  caex file type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_Copyright">
            <summary>
            The altova member info  caex file type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_AdditionalInformation">
            <summary>
            The altova member info  caex file type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_ExternalReference">
            <summary>
            The altova member info  caex file type_altova_ external reference
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_InstanceHierarchy">
            <summary>
            The altova member info  caex file type_altova_ instance hierarchy
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_InterfaceClassLib">
            <summary>
            The altova member info  caex file type_altova_ interface class library
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_RoleClassLib">
            <summary>
            The altova member info  caex file type_altova_ role class library
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CAEXFileType_altova_SystemUnitClassLib">
            <summary>
            The altova member info  caex file type_altova_ system unit class library
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_CAEXFileType">
            <summary>
            The _altova_mil_altova_ caex file type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_DescriptionType">
            <summary>
            The _altova_mif_altova_ description type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_DescriptionType_altova_unnamed">
            <summary>
            The altova member info  description type_altova_unnamed
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_DescriptionType_altova_ChangeMode">
            <summary>
            The altova member info  description type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_DescriptionType">
            <summary>
            The _altova_mil_altova_ description type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_VersionType">
            <summary>
            The _altova_mif_altova_ version type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_VersionType_altova_unnamed">
            <summary>
            The altova member info  version type_altova_unnamed
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_VersionType_altova_ChangeMode">
            <summary>
            The altova member info  version type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_VersionType">
            <summary>
            The _altova_mil_altova_ version type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_RevisionType">
            <summary>
            The _altova_mif_altova_ revision type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RevisionType_altova_ChangeMode">
            <summary>
            The altova member info  revision type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RevisionType_altova_Description">
            <summary>
            The altova member info  revision type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RevisionType_altova_Version">
            <summary>
            The altova member info  revision type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RevisionType_altova_Revision">
            <summary>
            The altova member info  revision type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RevisionType_altova_Copyright">
            <summary>
            The altova member info  revision type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RevisionType_altova_AdditionalInformation">
            <summary>
            The altova member info  revision type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RevisionType_altova_RevisionDate">
            <summary>
            The altova member info  revision type_altova_ revision date
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RevisionType_altova_OldVersion">
            <summary>
            The altova member info  revision type_altova_ old version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RevisionType_altova_NewVersion">
            <summary>
            The altova member info  revision type_altova_ new version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RevisionType_altova_AuthorName">
            <summary>
            The altova member info  revision type_altova_ author name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RevisionType_altova_Comment">
            <summary>
            The altova member info  revision type_altova_ comment
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_RevisionType">
            <summary>
            The _altova_mil_altova_ revision type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_CopyrightType">
            <summary>
            The _altova_mif_altova_ copyright type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CopyrightType_altova_unnamed">
            <summary>
            The altova member info  copyright type_altova_unnamed
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_CopyrightType_altova_ChangeMode">
            <summary>
            The altova member info  copyright type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_CopyrightType">
            <summary>
            The _altova_mil_altova_ copyright type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_ExternalReferenceType">
            <summary>
            The _altova_mif_altova_ external reference type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalReferenceType_altova_ChangeMode">
            <summary>
            The altova member info  external reference type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalReferenceType_altova_Path">
            <summary>
            The altova member info  external reference type_altova_ path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalReferenceType_altova_Alias">
            <summary>
            The altova member info  external reference type_altova_ alias
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalReferenceType_altova_Description">
            <summary>
            The altova member info  external reference type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalReferenceType_altova_Version">
            <summary>
            The altova member info  external reference type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalReferenceType_altova_Revision">
            <summary>
            The altova member info  external reference type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalReferenceType_altova_Copyright">
            <summary>
            The altova member info  external reference type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalReferenceType_altova_AdditionalInformation">
            <summary>
            The altova member info  external reference type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_ExternalReferenceType">
            <summary>
            The _altova_mil_altova_ external reference type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_InstanceHierarchyType">
            <summary>
            The _altova_mif_altova_ instance hierarchy type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InstanceHierarchyType_altova_ChangeMode">
            <summary>
            The altova member info  instance hierarchy type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InstanceHierarchyType_altova_ID">
            <summary>
            The altova member info  instance hierarchy type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InstanceHierarchyType_altova_Name">
            <summary>
            The altova member info  instance hierarchy type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InstanceHierarchyType_altova_Description">
            <summary>
            The altova member info  instance hierarchy type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InstanceHierarchyType_altova_Version">
            <summary>
            The altova member info  instance hierarchy type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InstanceHierarchyType_altova_Revision">
            <summary>
            The altova member info  instance hierarchy type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InstanceHierarchyType_altova_Copyright">
            <summary>
            The altova member info  instance hierarchy type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InstanceHierarchyType_altova_AdditionalInformation">
            <summary>
            The altova member info  instance hierarchy type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InstanceHierarchyType_altova_InternalElement">
            <summary>
            The altova member info  instance hierarchy type_altova_ internal element
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_InstanceHierarchyType">
            <summary>
            The _altova_mil_altova_ instance hierarchy type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_InterfaceClassLibType">
            <summary>
            The _altova_mif_altova_ interface class library type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassLibType_altova_ChangeMode">
            <summary>
            The altova member info  interface class library type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassLibType_altova_ID">
            <summary>
            The altova member info  interface class library type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassLibType_altova_Name">
            <summary>
            The altova member info  interface class library type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassLibType_altova_Description">
            <summary>
            The altova member info  interface class library type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassLibType_altova_Version">
            <summary>
            The altova member info  interface class library type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassLibType_altova_Revision">
            <summary>
            The altova member info  interface class library type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassLibType_altova_Copyright">
            <summary>
            The altova member info  interface class library type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassLibType_altova_AdditionalInformation">
            <summary>
            The altova member info  interface class library type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceClassLibType_altova_InterfaceClass">
            <summary>
            The altova member info  interface class library type_altova_ interface class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_InterfaceClassLibType">
            <summary>
            The _altova_mil_altova_ interface class library type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_RoleClassLibType">
            <summary>
            The _altova_mif_altova_ role class library type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassLibType_altova_ChangeMode">
            <summary>
            The altova member info  role class library type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassLibType_altova_ID">
            <summary>
            The altova member info  role class library type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassLibType_altova_Name">
            <summary>
            The altova member info  role class library type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassLibType_altova_Description">
            <summary>
            The altova member info  role class library type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassLibType_altova_Version">
            <summary>
            The altova member info  role class library type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassLibType_altova_Revision">
            <summary>
            The altova member info  role class library type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassLibType_altova_Copyright">
            <summary>
            The altova member info  role class library type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassLibType_altova_AdditionalInformation">
            <summary>
            The altova member info  role class library type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleClassLibType_altova_RoleClass">
            <summary>
            The altova member info  role class library type_altova_ role class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_RoleClassLibType">
            <summary>
            The _altova_mil_altova_ role class library type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_SystemUnitClassLibType">
            <summary>
            The _altova_mif_altova_ system unit class library type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassLibType_altova_ChangeMode">
            <summary>
            The altova member info  system unit class library type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassLibType_altova_ID">
            <summary>
            The altova member info  system unit class library type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassLibType_altova_Name">
            <summary>
            The altova member info  system unit class library type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassLibType_altova_Description">
            <summary>
            The altova member info  system unit class library type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassLibType_altova_Version">
            <summary>
            The altova member info  system unit class library type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassLibType_altova_Revision">
            <summary>
            The altova member info  system unit class library type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassLibType_altova_Copyright">
            <summary>
            The altova member info  system unit class library type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassLibType_altova_AdditionalInformation">
            <summary>
            The altova member info  system unit class library type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SystemUnitClassLibType_altova_SystemUnitClass">
            <summary>
            The altova member info  system unit class library type_altova_ system unit class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_SystemUnitClassLibType">
            <summary>
            The _altova_mil_altova_ system unit class library type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_AttributeDataTypeType">
            <summary>
            The _altova_mif_altova_ attribute data type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_AttributeDataTypeType">
            <summary>
            The _altova_mil_altova_ attribute data type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_RefSemanticType">
            <summary>
            The _altova_mif_altova_ reference semantic type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RefSemanticType_altova_ChangeMode">
            <summary>
            The altova member info  reference semantic type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RefSemanticType_altova_CorrespondingAttributePath">
            <summary>
            The altova member info  reference semantic type_altova_ corresponding attribute path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RefSemanticType_altova_Description">
            <summary>
            The altova member info  reference semantic type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RefSemanticType_altova_Version">
            <summary>
            The altova member info  reference semantic type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RefSemanticType_altova_Revision">
            <summary>
            The altova member info  reference semantic type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RefSemanticType_altova_Copyright">
            <summary>
            The altova member info  reference semantic type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RefSemanticType_altova_AdditionalInformation">
            <summary>
            The altova member info  reference semantic type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_RefSemanticType">
            <summary>
            The _altova_mil_altova_ reference semantic type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_OrdinalScaledTypeType">
            <summary>
            The _altova_mif_altova_ ordinal scaled type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_OrdinalScaledTypeType_altova_RequiredMaxValue">
            <summary>
            The altova member info  ordinal scaled type type_altova_ required maximum value
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_OrdinalScaledTypeType_altova_RequiredValue">
            <summary>
            The altova member info  ordinal scaled type type_altova_ required value
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_OrdinalScaledTypeType_altova_RequiredMinValue">
            <summary>
            The altova member info  ordinal scaled type type_altova_ required minimum value
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_OrdinalScaledTypeType">
            <summary>
            The _altova_mil_altova_ ordinal scaled type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_NominalScaledTypeType">
            <summary>
            The _altova_mif_altova_ nominal scaled type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_NominalScaledTypeType_altova_RequiredValue">
            <summary>
            The altova member info  nominal scaled type type_altova_ required value
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_NominalScaledTypeType">
            <summary>
            The _altova_mil_altova_ nominal scaled type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_UnknownTypeType">
            <summary>
            The _altova_mif_altova_ unknown type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_UnknownTypeType_altova_Requirements">
            <summary>
            The altova member info  unknown type type_altova_ requirements
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_UnknownTypeType">
            <summary>
            The _altova_mil_altova_ unknown type type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_SupportedRoleClassType">
            <summary>
            The _altova_mif_altova_ supported role class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SupportedRoleClassType_altova_ChangeMode">
            <summary>
            The altova member info  supported role class type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SupportedRoleClassType_altova_RefRoleClassPath">
            <summary>
            The altova member info  supported role class type_altova_ reference role class path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SupportedRoleClassType_altova_Description">
            <summary>
            The altova member info  supported role class type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SupportedRoleClassType_altova_Version">
            <summary>
            The altova member info  supported role class type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SupportedRoleClassType_altova_Revision">
            <summary>
            The altova member info  supported role class type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SupportedRoleClassType_altova_Copyright">
            <summary>
            The altova member info  supported role class type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SupportedRoleClassType_altova_AdditionalInformation">
            <summary>
            The altova member info  supported role class type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_SupportedRoleClassType_altova_MappingObject">
            <summary>
            The altova member info  supported role class type_altova_ mapping object
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_SupportedRoleClassType">
            <summary>
            The _altova_mil_altova_ supported role class type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_InternalLinkType">
            <summary>
            The _altova_mif_altova_ internal link type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalLinkType_altova_ChangeMode">
            <summary>
            The altova member info  internal link type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalLinkType_altova_ID">
            <summary>
            The altova member info  internal link type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalLinkType_altova_Name">
            <summary>
            The altova member info  internal link type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalLinkType_altova_RefPartnerSideA">
            <summary>
            The altova member info  internal link type_altova_ reference partner side a
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalLinkType_altova_RefPartnerSideB">
            <summary>
            The altova member info  internal link type_altova_ reference partner side b
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalLinkType_altova_Description">
            <summary>
            The altova member info  internal link type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalLinkType_altova_Version">
            <summary>
            The altova member info  internal link type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalLinkType_altova_Revision">
            <summary>
            The altova member info  internal link type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalLinkType_altova_Copyright">
            <summary>
            The altova member info  internal link type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InternalLinkType_altova_AdditionalInformation">
            <summary>
            The altova member info  internal link type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_InternalLinkType">
            <summary>
            The _altova_mil_altova_ internal link type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_RoleRequirementsType">
            <summary>
            The _altova_mif_altova_ role requirements type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleRequirementsType_altova_ChangeMode">
            <summary>
            The altova member info  role requirements type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleRequirementsType_altova_RefBaseRoleClassPath">
            <summary>
            The altova member info  role requirements type_altova_ reference base role class path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleRequirementsType_altova_Description">
            <summary>
            The altova member info  role requirements type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleRequirementsType_altova_Version">
            <summary>
            The altova member info  role requirements type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleRequirementsType_altova_Revision">
            <summary>
            The altova member info  role requirements type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleRequirementsType_altova_Copyright">
            <summary>
            The altova member info  role requirements type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleRequirementsType_altova_AdditionalInformation">
            <summary>
            The altova member info  role requirements type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleRequirementsType_altova_Attribute">
            <summary>
            The altova member info  role requirements type_altova_ attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_RoleRequirementsType_altova_ExternalInterface">
            <summary>
            The altova member info  role requirements type_altova_ external interface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_RoleRequirementsType">
            <summary>
            The _altova_mil_altova_ role requirements type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_AttributeNameMappingType">
            <summary>
            The _altova_mif_altova_ attribute name mapping type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeNameMappingType_altova_ChangeMode">
            <summary>
            The altova member info  attribute name mapping type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeNameMappingType_altova_SystemUnitAttributeName">
            <summary>
            The altova member info  attribute name mapping type_altova_ system unit attribute name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeNameMappingType_altova_RoleAttributeName">
            <summary>
            The altova member info  attribute name mapping type_altova_ role attribute name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeNameMappingType_altova_Description">
            <summary>
            The altova member info  attribute name mapping type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeNameMappingType_altova_Version">
            <summary>
            The altova member info  attribute name mapping type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeNameMappingType_altova_Revision">
            <summary>
            The altova member info  attribute name mapping type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeNameMappingType_altova_Copyright">
            <summary>
            The altova member info  attribute name mapping type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_AttributeNameMappingType_altova_AdditionalInformation">
            <summary>
            The altova member info  attribute name mapping type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_AttributeNameMappingType">
            <summary>
            The _altova_mil_altova_ attribute name mapping type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_InterfaceNameMappingType">
            <summary>
            The _altova_mif_altova_ interface name mapping type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceNameMappingType_altova_ChangeMode">
            <summary>
            The altova member info  interface name mapping type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceNameMappingType_altova_SystemUnitInterfaceName">
            <summary>
            The altova member info  interface name mapping type_altova_ system unit interface name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceNameMappingType_altova_RoleInterfaceName">
            <summary>
            The altova member info  interface name mapping type_altova_ role interface name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceNameMappingType_altova_Description">
            <summary>
            The altova member info  interface name mapping type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceNameMappingType_altova_Version">
            <summary>
            The altova member info  interface name mapping type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceNameMappingType_altova_Revision">
            <summary>
            The altova member info  interface name mapping type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceNameMappingType_altova_Copyright">
            <summary>
            The altova member info  interface name mapping type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_InterfaceNameMappingType_altova_AdditionalInformation">
            <summary>
            The altova member info  interface name mapping type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_InterfaceNameMappingType">
            <summary>
            The _altova_mil_altova_ interface name mapping type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_altova_ExternalInterfaceType">
            <summary>
            The _altova_mif_altova_ external interface type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalInterfaceType_altova_ChangeMode">
            <summary>
            The altova member info  external interface type_altova_ change mode
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalInterfaceType_altova_ID">
            <summary>
            The altova member info  external interface type_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalInterfaceType_altova_Name">
            <summary>
            The altova member info  external interface type_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalInterfaceType_altova_RefBaseClassPath">
            <summary>
            The altova member info  external interface type_altova_ reference base class path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalInterfaceType_altova_Description">
            <summary>
            The altova member info  external interface type_altova_ description
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalInterfaceType_altova_Version">
            <summary>
            The altova member info  external interface type_altova_ version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalInterfaceType_altova_Revision">
            <summary>
            The altova member info  external interface type_altova_ revision
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalInterfaceType_altova_Copyright">
            <summary>
            The altova member info  external interface type_altova_ copyright
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalInterfaceType_altova_AdditionalInformation">
            <summary>
            The altova member info  external interface type_altova_ additional information
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_altova_ExternalInterfaceType_altova_Attribute">
            <summary>
            The altova member info  external interface type_altova_ attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_altova_ExternalInterfaceType">
            <summary>
            The _altova_mil_altova_ external interface type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_ENTITIES">
            <summary>
            The altova xs member info  entities
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_ENTITIES">
            <summary>
            The _altova_mil_xs_altova_ entities
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_ENTITY">
            <summary>
            The altova xs member info  entity
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_ENTITY">
            <summary>
            The _altova_mil_xs_altova_ entity
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_ID">
            <summary>
            The altova xs member info  identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_ID">
            <summary>
            The _altova_mil_xs_altova_ identifier
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_IDREF">
            <summary>
            The altova xs member info  id ref
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_IDREF">
            <summary>
            The _altova_mil_xs_altova_ id ref
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_IDREFS">
            <summary>
            The altova xs member info  id refs
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_IDREFS">
            <summary>
            The _altova_mil_xs_altova_ id refs
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_NCName">
            <summary>
            The altova xs member info  nc name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_NCName">
            <summary>
            The _altova_mil_xs_altova_ nc name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_NMTOKEN">
            <summary>
            The altova xs member info  nm token
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_NMTOKEN">
            <summary>
            The _altova_mil_xs_altova_ nm token
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_NMTOKENS">
            <summary>
            The altova xs member info  nm tokens
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_NMTOKENS">
            <summary>
            The _altova_mil_xs_altova_ nm tokens
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_NOTATION">
            <summary>
            The altova xs member info  notation
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_NOTATION">
            <summary>
            The _altova_mil_xs_altova_ notation
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_Name">
            <summary>
            The altova xs member info  name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_Name">
            <summary>
            The _altova_mil_xs_altova_ name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_QName">
            <summary>
            The altova xs member info  q name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_QName">
            <summary>
            The _altova_mil_xs_altova_ q name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_anySimpleType">
            <summary>
            The altova xs member info any simple type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_anySimpleType">
            <summary>
            The _altova_mil_xs_altova_any simple type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_anyType">
            <summary>
            The altova xs member info any type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed">
            <summary>
            The _altova_mi_xs_altova_any type_altova_unnamed
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_anyType">
            <summary>
            The _altova_mil_xs_altova_any type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_anyURI">
            <summary>
            The altova xs member info any URI
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_anyURI">
            <summary>
            The _altova_mil_xs_altova_any URI
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_base64Binary">
            <summary>
            The altova xs member info base64 binary
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_base64Binary">
            <summary>
            The _altova_mil_xs_altova_base64 binary
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_boolean">
            <summary>
            The altova xs member info boolean
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_boolean">
            <summary>
            The _altova_mil_xs_altova_boolean
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_byte2">
            <summary>
            The altova xs member info byte2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_byte2">
            <summary>
            The _altova_mil_xs_altova_byte2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_date">
            <summary>
            The altova xs member info date
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_date">
            <summary>
            The _altova_mil_xs_altova_date
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_dateTime">
            <summary>
            The altova xs member info date time
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_dateTime">
            <summary>
            The _altova_mil_xs_altova_date time
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_decimal2">
            <summary>
            The altova xs member info decimal2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_decimal2">
            <summary>
            The _altova_mil_xs_altova_decimal2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_double2">
            <summary>
            The altova xs member info double2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_double2">
            <summary>
            The _altova_mil_xs_altova_double2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_duration">
            <summary>
            The altova xs member info duration
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_duration">
            <summary>
            The _altova_mil_xs_altova_duration
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_float2">
            <summary>
            The altova xs member info float2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_float2">
            <summary>
            The _altova_mil_xs_altova_float2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_gDay">
            <summary>
            The altova xs member info g day
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_gDay">
            <summary>
            The _altova_mil_xs_altova_g day
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_gMonth">
            <summary>
            The altova xs member info g month
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_gMonth">
            <summary>
            The _altova_mil_xs_altova_g month
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_gMonthDay">
            <summary>
            The altova xs member info g month day
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_gMonthDay">
            <summary>
            The _altova_mil_xs_altova_g month day
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_gYear">
            <summary>
            The altova xs member info g year
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_gYear">
            <summary>
            The _altova_mil_xs_altova_g year
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_gYearMonth">
            <summary>
            The altova xs member info g year month
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_gYearMonth">
            <summary>
            The _altova_mil_xs_altova_g year month
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_hexBinary">
            <summary>
            The altova xs member info hex binary
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_hexBinary">
            <summary>
            The _altova_mil_xs_altova_hex binary
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_int2">
            <summary>
            The altova xs member info int2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_int2">
            <summary>
            The _altova_mil_xs_altova_int2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_integer">
            <summary>
            The altova xs member info integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_integer">
            <summary>
            The _altova_mil_xs_altova_integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_language">
            <summary>
            The altova xs member info language
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_language">
            <summary>
            The _altova_mil_xs_altova_language
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_long2">
            <summary>
            The altova xs member info long2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_long2">
            <summary>
            The _altova_mil_xs_altova_long2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_negativeInteger">
            <summary>
            The altova xs member info negative integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_negativeInteger">
            <summary>
            The _altova_mil_xs_altova_negative integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_nonNegativeInteger">
            <summary>
            The altova xs member info non negative integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_nonNegativeInteger">
            <summary>
            The _altova_mil_xs_altova_non negative integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_nonPositiveInteger">
            <summary>
            The altova xs member info non positive integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_nonPositiveInteger">
            <summary>
            The _altova_mil_xs_altova_non positive integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_normalizedString">
            <summary>
            The altova xs member info normalized string
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_normalizedString">
            <summary>
            The _altova_mil_xs_altova_normalized string
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_positiveInteger">
            <summary>
            The altova xs member info positive integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_positiveInteger">
            <summary>
            The _altova_mil_xs_altova_positive integer
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_short2">
            <summary>
            The altova xs member info short2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_short2">
            <summary>
            The _altova_mil_xs_altova_short2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_string2">
            <summary>
            The altova xs member info string2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_string2">
            <summary>
            The _altova_mil_xs_altova_string2
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_time">
            <summary>
            The altova xs member info time
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_time">
            <summary>
            The _altova_mil_xs_altova_time
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_token">
            <summary>
            The altova xs member info token
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_token">
            <summary>
            The _altova_mil_xs_altova_token
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_unsignedByte">
            <summary>
            The altova xs member info unsigned byte
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_unsignedByte">
            <summary>
            The _altova_mil_xs_altova_unsigned byte
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_unsignedInt">
            <summary>
            The altova xs member info unsigned int
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_unsignedInt">
            <summary>
            The _altova_mil_xs_altova_unsigned int
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_unsignedLong">
            <summary>
            The altova xs member info unsigned long
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_unsignedLong">
            <summary>
            The _altova_mil_xs_altova_unsigned long
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_unsignedShort">
            <summary>
            The altova xs member info unsigned short
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_unsignedShort">
            <summary>
            The _altova_mil_xs_altova_unsigned short
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_stringType">
            <summary>
            The altova xs member info string type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_xs_altova_stringType_altova_unnamed">
            <summary>
            The _altova_mi_xs_altova_string type_altova_unnamed
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_stringType">
            <summary>
            The _altova_mil_xs_altova_string type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mif_xs_altova_dateTimeType">
            <summary>
            The altova xs member info date time type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mi_xs_altova_dateTimeType_altova_unnamed">
            <summary>
            The _altova_mi_xs_altova_date time type_altova_unnamed
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo._altova_mil_xs_altova_dateTimeType">
            <summary>
            The _altova_mil_xs_altova_date time type
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.CAEX_ClassModel_TypeInfo.InfoBinder">
            <summary>
            Class InfoBinder.
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.CAEX_ClassModel_TypeInfo.InfoBinder.Namespaces">
            <summary>
            Gets the namespaces.
            </summary>
            <value>The namespaces.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEX_ClassModel_TypeInfo.InfoBinder.Types">
            <summary>
            Gets the types.
            </summary>
            <value>The types.</value>
        </member>
        <member name="P:CAEX_ClassModel.CAEX_ClassModel_TypeInfo.InfoBinder.Members">
            <summary>
            Gets the members.
            </summary>
            <value>The members.</value>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo.binder">
            <summary>
            The binder
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo.namespaces">
            <summary>
            The namespaces
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo.types">
            <summary>
            The types
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEX_ClassModel_TypeInfo.members">
            <summary>
            The members
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.ChangeModeStates">
            <summary>
            obsolete
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.ChangeModeStates.STATE">
            <summary>
            The state
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.ChangeModeStates.CREATE">
            <summary>
            The create
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.ChangeModeStates.DELETE">
            <summary>
            The delete
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.ChangeModeStates.CHANGE">
            <summary>
            The change
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.ClassInstantiationException">
            <summary>
            User defined exception that is thrown when an error occurs during instantiation of a class.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.ClassInstantiationException.#ctor">
            <summary>
            Standard constructor
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.ClassInstantiationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.ClassInstantiationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CAEX_ClassModel.ClassInstantiationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.ClassInstantiationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner Message.</param>
        </member>
        <member name="M:CAEX_ClassModel.ClassInstantiationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.ClassInstantiationException" /> class with serialized data.
            </summary>
            <param name="info">object containing the serializable data.</param>
            <param name="context">context information about source or target.</param>
        </member>
        <member name="T:CAEX_ClassModel.FrameAttributeType">
            <summary>
            Class FrameAttributeType.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameAttributeType.xAttribute">
            <summary>
            The x attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameAttributeType.yAttribute">
            <summary>
            The y attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameAttributeType.zAttribute">
            <summary>
            The z attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameAttributeType.rxAttribute">
            <summary>
            The rx attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameAttributeType.ryAttribute">
            <summary>
            The ry attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameAttributeType.rzAttribute">
            <summary>
            The rz attribute
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.FrameAttributeType.XAttribute">
            <summary>
            The x attribute
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.FrameAttributeType.YAttribute">
            <summary>
            The y attribute
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.FrameAttributeType.ZAttribute">
            <summary>
            The z attribute
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.FrameAttributeType.RXAttribute">
            <summary>
            The rx attribute
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.FrameAttributeType.RYAttribute">
            <summary>
            The ry attribute
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.FrameAttributeType.RZAttribute">
            <summary>
            The rz attribute
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameAttributeType.FormatInfo">
            <summary>
            The format information for the Frame attribute (don't use this, because all frame values have to be saved as xs:double with standard format)
            If you want to save values with specific number format, do the string conversion 
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.FrameAttributeType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXObject" /> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="M:CAEX_ClassModel.FrameAttributeType.#ctor(System.Xml.XmlNode,CAEX_ClassModel.FrameValues)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.FrameAttributeType"/> class.
            </summary>
            <param name="init">The initialize.</param>
            <param name="frameValues">The frame values.</param>
        </member>
        <member name="F:CAEX_ClassModel.FrameAttributeType.frame">
            <summary>
            The frame
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.FrameAttributeType.Frame">
            <summary>
            Gets and sets the frame values for this FrameAttribute
            </summary>
            <value>The frame.</value>
        </member>
        <member name="M:CAEX_ClassModel.FrameAttributeType.bindEventHandler">
            <summary>
            Binds the event handler.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.FrameAttributeType.Frame_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Eventhandler for the PropertyChanged event when an attribute value of the frame has been updated
            </summary>
            <param name="sender">The FrameValues object</param>
            <param name="e">The name of the property that changed</param>
        </member>
        <member name="M:CAEX_ClassModel.FrameAttributeType.createFrameAttributes(CAEX_ClassModel.FrameValues)">
            <summary>
            Creates a new (sub-)attribute for each frame value.
            </summary>
            <param name="frameValues">The frame values.</param>
        </member>
        <member name="M:CAEX_ClassModel.FrameAttributeType.IsFrame(System.Xml.XmlNode)">
            <summary>
            Determines whether the specified node models an AutomationML Frame-Attribute.
            </summary>
            <param name="node">The node.</param>
            <returns><c>true</c> if the specified node is frame; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.FrameAttributeType.initializeFrameAttributeValues">
            <summary>
            Initializes the frame values in the given frameAttribute by iterating through all child attributes and getting their values
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.FrameAttributeType.ValidateAndRepairFrameDatatypes(System.Xml.XmlElement)">
            <summary>
            Validates and repairs the frame datatypes if the datatype is not defined or not of type 'xs:double'
            </summary>
            <param name="node">The node.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:CAEX_ClassModel.FrameValues">
            <summary>
            A frame holds position information of an object. The object position is defined by values for x, y and z axis as well as rotation values rx,ry and rz in degree, for
            the x, y and z axis.
            </summary>
        </member>
        <member name="E:CAEX_ClassModel.FrameValues.PropertyChanged">
            <summary>
            occurs, when a property changed
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.FrameValues.#ctor">
            <summary>
            Creating a new FrameValues object with initially all values set to 0.0
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.FrameValues.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creating a new FrameValues object with the given frame values
            </summary>
            <param name="x">The x value</param>
            <param name="y">The y value</param>
            <param name="z">The z value</param>
            <param name="rx">The rx value</param>
            <param name="ry">The ry value</param>
            <param name="rz">The rz value</param>
        </member>
        <member name="F:CAEX_ClassModel.FrameValues.x">
            <summary>
            X position
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameValues.y">
            <summary>
            Y position
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameValues.z">
            <summary>
            Z position
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameValues.rx">
            <summary>
            Rotation around x-axis
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameValues.ry">
            <summary>
            Rotation around y-axis
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.FrameValues.rz">
            <summary>
            Rotation around z-axis
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.FrameValues.X">
            <summary>
            Gets or sets the x.
            </summary>
            <value>The x.</value>
        </member>
        <member name="P:CAEX_ClassModel.FrameValues.Y">
            <summary>
            Gets or sets the y.
            </summary>
            <value>The y.</value>
        </member>
        <member name="P:CAEX_ClassModel.FrameValues.Z">
            <summary>
            Gets or sets the z.
            </summary>
            <value>The z.</value>
        </member>
        <member name="P:CAEX_ClassModel.FrameValues.RX">
            <summary>
            Gets or sets the rx.
            </summary>
            <value>The rx.</value>
        </member>
        <member name="P:CAEX_ClassModel.FrameValues.RY">
            <summary>
            Gets or sets the ry.
            </summary>
            <value>The ry.</value>
        </member>
        <member name="P:CAEX_ClassModel.FrameValues.RZ">
            <summary>
            Gets or sets the rz.
            </summary>
            <value>The rz.</value>
        </member>
        <member name="M:CAEX_ClassModel.FrameValues.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies the property changed.
            </summary>
            <param name="info">The information.</param>
        </member>
        <member name="T:CAEX_ClassModel.IClassWithBaseClassReference">
            <summary>
            Interface IClassWithBaseClassReference
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.IClassWithBaseClassReference.GetRefBaseClassPath">
            <summary>
            Gets the RefBaseClassPath attribute.
            </summary>
            <value>The get reference base class path.</value>
        </member>
        <member name="P:CAEX_ClassModel.IClassWithBaseClassReference.SetRefBaseClassPath">
            <summary>
            Sets the value for the RefBaseClassPath attribute
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.IClassWithBaseClassReference.ReferencedClassName">
            <summary>
            Gets the name (not the full path) of the referenced base class. 
            </summary>
            <value>The name of the referenced class.</value>
        </member>
        <member name="P:CAEX_ClassModel.IClassWithBaseClassReference.ReferencedClassPath">
            <summary>
            Gets the full path of the referenced base class. 
            </summary>
            <value>The class path of the referenced base class.</value>
        </member>
        <member name="P:CAEX_ClassModel.IClassWithBaseClassReference.ClassName">
            <summary>
            Gets the name of the CAEXObject.
            </summary>
            <value>The name of the class.</value>
        </member>
        <member name="P:CAEX_ClassModel.IClassWithBaseClassReference.BaseClass">
            <summary>
            Gets or sets the base class for this instance. if another base class is set, the value is overwritten.
            </summary>
            <value>The base class.</value>
        </member>
        <member name="P:CAEX_ClassModel.IClassWithBaseClassReference.IDValue">
            <summary>
            Gets the identifier value.
            </summary>
            <value>The identifier value.</value>
        </member>
        <member name="M:CAEX_ClassModel.IClassWithBaseClassReference.GetReferenceHierarchy``1(``0)">
            <summary>
            Gets the reference (Inheritance) hierarchy including the actual class
            </summary>
            <typeparam name="T"></typeparam>
            <param name="startElement">The start element.</param>
            <returns>Queue&lt;IClassWithBaseClassReference&gt;.</returns>
        </member>
        <member name="T:CAEX_ClassModel.IInstantiable">
            <summary>
            Interface IInstantiable
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.IInstantiable.CreateClassInstance">
            <summary>
            Creates the class instance.
            </summary>
            <returns>TypeBase.</returns>
        </member>
        <member name="T:CAEX_ClassModel.INewHeaderMethods">
            <summary>
            Interface INewHeaderMethods
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.INewHeaderMethods.New_Description">
            <summary>
            Creation of a new DescriptionType
            </summary>
            <returns>A new DescriptionType node</returns>
        </member>
        <member name="M:CAEX_ClassModel.INewHeaderMethods.New_Version">
            <summary>
            Creation of a new VersionType
            </summary>
            <returns>A new VersionType node</returns>
        </member>
        <member name="M:CAEX_ClassModel.INewHeaderMethods.New_Revision(Altova.Types.DateTime,System.String,System.Boolean)">
            <summary>
            create a new revision and appends it to this instance
            </summary>
            <param name="date">The date.</param>
            <param name="author">The author.</param>
            <param name="asFirst">if set to <c>true</c> it is prepended (default).</param>
            <returns>CAEX_ClassModel.RevisionType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.INewHeaderMethods.New_Copyright">
            <summary>
            Creation of a new CopyrightType node
            </summary>
            <returns>A new CopyrightType node</returns>
        </member>
        <member name="M:CAEX_ClassModel.INewHeaderMethods.New_AdditionalInformation(System.Boolean)">
            <summary>
            Creation of a new AdditionalInformation node
            </summary>
            <returns>A new AdditionalInformation node</returns>
        </member>
        <member name="T:CAEX_ClassModel.INewRevisionMethods">
            <summary>
            Interface INewRevisionMethods
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.INewRevisionMethods.New_OldVersion">
            <summary>
            Creation of a new OldVersion element
            </summary>
            <returns>A new OldVersion node</returns>
        </member>
        <member name="M:CAEX_ClassModel.INewRevisionMethods.New_NewVersion">
            <summary>
            Creation of a new NewVersion element
            </summary>
            <returns>A new NewVersion node</returns>
        </member>
        <member name="M:CAEX_ClassModel.INewRevisionMethods.New_Comment">
            <summary>
            Creation of a new Comment element
            </summary>
            <returns>A new Comment node</returns>
        </member>
        <member name="T:CAEX_ClassModel.IObjectWithAttributes">
            <summary>
            Interface that defines methods and properties that apply to all classes that are able to contain attributes.
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.IObjectWithAttributes.RefURIAttribute">
            <summary>
            Gets the REFURI attribute
            </summary>
            <value>The reference URI attribute.</value>
        </member>
        <member name="P:CAEX_ClassModel.IObjectWithAttributes.FrameAttribute">
            <summary>
            Gets the Frame attribute
            </summary>
            <value>The frame attribute.</value>
        </member>
        <member name="M:CAEX_ClassModel.IObjectWithAttributes.New_FrameAttribute(CAEX_ClassModel.FrameValues)">
            <summary>
            Creates a new frame attribute for this object, using the frame values for initialization
            </summary>
            <param name="frameValues"></param>
            <returns></returns>
        </member>
        <member name="M:CAEX_ClassModel.IObjectWithAttributes.getAttributeField">
            <summary>
            Get the whole attribute field containing a collection of all attributes of this object.
            </summary>
            <returns>CAEX_ClassModel.MemberElement_Attribute.</returns>
        </member>
        <member name="M:CAEX_ClassModel.IObjectWithAttributes.New_Attribute(System.String)">
            <summary>
            Adding a new Attribute to this object.
            </summary>
            <param name="attributeName">The name of the Attribute to add</param>
            <returns>A new Attribute</returns>
        </member>
        <member name="M:CAEX_ClassModel.IObjectWithAttributes.Insert_Attribute(CAEX_ClassModel.AttributeType)">
            <summary>
            Inserting an attribute element to this class
            </summary>
            <param name="attributeElement">The attribute to insert</param>
        </member>
        <member name="M:CAEX_ClassModel.IObjectWithAttributes.GetAttribute(System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>AttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.IObjectWithAttributes.GetDerivedAttributes(System.Boolean)">
            <summary>
            Obtain a list of attributes that are derived from base classes.
            The List will also contain the elements own attributes, if it is specified (default).        ///
            </summary>
            <param name="includeOwn">if <c>true</c> includes the elements own attributes; otherwise not</param>
            <returns>List&lt;AttributeType&gt;.</returns>
        </member>
        <member name="T:CAEX_ClassModel.IObjectWithExternalInterface">
            <summary>
            Interface IObjectWithExternalInterface is implemented by
            <see cref="T:CAEX_ClassModel.SystemUnitClassType" />,
            <see cref="T:CAEX_ClassModel.RoleClassType" />,
            <see cref="T:CAEX_ClassModel.InterfaceClassType" />
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.IObjectWithExternalInterface.GetDerivedInterfaces(System.Boolean)">
            <summary>
            Gets the derived interfaces, which include the
            </summary>
            <returns>List&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.IObjectWithExternalInterface.GetExternalInterfaces">
            <summary>
            Gets the external interfaces.
            </summary>
            <returns>IEnumerable&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.IObjectWithExternalInterface.Insert_ExternalInterface(CAEX_ClassModel.InterfaceClassType,System.Boolean)">
            <summary>
            Inserts the external interface 
            </summary>
            <param name="interfaceElement">The interface element.</param>
            <param name="asFirst">if set to <c>true</c> [as first].</param>
        </member>
        <member name="T:CAEX_ClassModel.IObjectWithRoleReference">
            <summary>
            Interface IObjectWithRoleReference is used to get a role reference from a SupportedRoleClass or a RoleRequirement
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.IObjectWithRoleReference.RoleReference">
            <summary>
            Gets or sets the role reference.
            </summary>
            <value>The role reference.</value>
        </member>
        <member name="T:CAEX_ClassModel.LinkedObjects">
            <summary>
            Class that holds references to the concrete objects that are linked via an InternalLink.
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.LinkedObjects.RefPartnerSideAElement">
            <summary>
            Gets or sets the reference partner side A Internal Element.
            </summary>
            <value>The reference partner side a element.</value>
        </member>
        <member name="P:CAEX_ClassModel.LinkedObjects.RefPartnerSideAExternalInterface">
            <summary>
            Gets or sets the reference partner side A External Interface.
            </summary>
            <value>The reference partner side a external interface.</value>
        </member>
        <member name="P:CAEX_ClassModel.LinkedObjects.RefPartnerSideBExternalInterface">
            <summary>
            Gets or sets the reference partner side B External Interface.
            </summary>
            <value>The reference partner side b external interface.</value>
        </member>
        <member name="P:CAEX_ClassModel.LinkedObjects.RefPartnerSideBElement">
            <summary>
            Gets or sets the reference partner side b Internal Element.
            </summary>
            <value>The reference partner side b element.</value>
        </member>
        <member name="P:CAEX_ClassModel.LinkedObjects.InternalLink">
            <summary>
            Gets or sets the Internal Link.
            </summary>
            <value>The Internal Link.</value>
        </member>
        <member name="M:CAEX_ClassModel.LinkedObjects.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:CAEX_ClassModel.LinkedSystemUnitClass">
            <summary>
            Class LinkedSystemUnitClass.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.LinkedSystemUnitClass.refPartnerSideBElement">
            <summary>
            The reference partner side b element
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.LinkedSystemUnitClass.refPartnerSideAElement">
            <summary>
            The reference partner side a element
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.LinkedSystemUnitClass.RefPartnerSideBElement">
            <summary>
            Gets or sets the reference partner side b Internal Element.
            </summary>
            <value>The reference partner side b element.</value>
        </member>
        <member name="P:CAEX_ClassModel.LinkedSystemUnitClass.RefPartnerSideAElement">
            <summary>
            Gets or sets the reference partner side A Internal Element.
            </summary>
            <value>The reference partner side a element.</value>
        </member>
        <member name="T:CAEX_ClassModel.ObjectWithAttributes">
            <summary>
            Class ObjectWithAttributes.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.ObjectWithAttributes.GetAttribute(CAEX_ClassModel.IObjectWithAttributes,System.String)">
            <summary>
            Gets the attribute with the specified name.
            </summary>
            <param name="objWithAttr">The object which should have this attribute</param>
            <param name="name">The name.</param>
            <returns>AttributeType or null if not found.</returns>
        </member>
        <member name="M:CAEX_ClassModel.ObjectWithAttributes.New_FrameAttribute(CAEX_ClassModel.IObjectWithAttributes,CAEX_ClassModel.FrameValues)">
            <summary>
            Creates a new frame attribute for this object. Position information is internally stored in more than one CAEX attribute.
            </summary>
            <param name="objWithAttr">The Object with Attributes</param>
            <param name="frameValues">The frame values.</param>
            <returns>FrameAttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.ObjectWithAttributes.getRefURIAttribute(CAEX_ClassModel.IObjectWithAttributes)">
            <summary>
            gets the RefURIAttribute if existent.
            </summary>
            <param name="objectWithAttributes">The object with attributes.</param>
            <returns>RefURIAttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.ObjectWithAttributes.SetAttributeValue(CAEX_ClassModel.IObjectWithAttributes,System.String,System.String)">
            <summary>
            Sets an attribute value (creates attribute if it does not exist) as child of the parent
            object parameter.
            </summary>
            <param name="objWithAttr">parent object</param>
            <param name="attName">attribute name</param>
            <param name="attValue">attribute value</param>
            <returns>attribute</returns>
        </member>
        <member name="M:CAEX_ClassModel.ObjectWithAttributes.SetAttributeValue(CAEX_ClassModel.IObjectWithAttributes,System.String,System.String,System.String,System.String)">
            <summary>
            Sets an attribute value (creates attribute if it does not exist).
            </summary>
            <param name="objWithAttr">parent object</param>
            <param name="attName">attribute name</param>
            <param name="attValue">attribute value</param>
            <param name="attUnit">attribute unit</param>
            <param name="attAttributeDataType">attribute data type</param>
            <returns>attribute</returns>
        </member>
        <member name="M:CAEX_ClassModel.ObjectWithAttributes.SetAttributeValue(CAEX_ClassModel.IObjectWithAttributes,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sets an attribute value (creates attribute if it does not exist).
            </summary>
            <param name="objWithAttr">parent object</param>
            <param name="attName">attribute name</param>
            <param name="attValue">attribute value</param>
            <param name="defaultValue">attribute defaultValue</param>
            <param name="description">attribute description</param>
            <param name="attUnit">attribute unit</param>
            <param name="attAttributeDataType">attribute data type</param>
            <returns>attribute</returns>
        </member>
        <member name="M:CAEX_ClassModel.ObjectWithAttributes.SetAttributeValue(CAEX_ClassModel.IObjectWithAttributes,System.String,System.Double)">
            <summary>
            Sets an attribute value (creates attribute if it does not exist) as child of the parent
            object parameter. Sets the AttributeDataType to xs:double
            </summary>
            <param name="objWithAttr">parent object</param>
            <param name="attName">attribute name</param>
            <param name="attValue">attribute value of type double</param>
            <returns>attribute</returns>
        </member>
        <member name="M:CAEX_ClassModel.ObjectWithAttributes.SetAttributeValue(CAEX_ClassModel.IObjectWithAttributes,System.String,System.Double,System.Double,System.String,System.String)">
            <summary>
            Sets an attribute value (creates attribute if it does not exist). Sets the AttributeDataType to xs:double
            </summary>
            <param name="objWithAttr">parent object</param>
            <param name="attName">attribute name</param>
            <param name="attValue">attribute value of type double</param>
            <param name="defaultValue">attribute defaultValue</param>
            <param name="description">attribute description</param>
            <param name="attUnit">attribute unit</param>
            <returns>attribute</returns>
        </member>
        <member name="M:CAEX_ClassModel.ObjectWithAttributes.getFrameAttribute(CAEX_ClassModel.IObjectWithAttributes)">
            <summary>
            gets the FrameAttribute if existent.
            </summary>
            <param name="objectWithAttributes">The object with attributes.</param>
            <returns>FrameAttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.ObjectWithAttributes.getRefTypeAttribute(CAEX_ClassModel.IObjectWithAttributes)">
            <summary>
            gets the RefTypeAttribute if existent.
            </summary>
            <param name="objectWithAttributes">The object with attributes.</param>
            <returns>RefTypeAttributeType.</returns>
        </member>
        <member name="T:CAEX_ClassModel.CAEXPathBuilder">
            <summary>
             The Class PathSeparator contains Path Analysis and Path Building Methods as they
             are defined in chapter 2.8 of the CAEX Guide
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXPathBuilder.AliasSeparator">
            <summary>
             The alias separator used after Alias
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXPathBuilder.AttributeSeparator">
            <summary>
             The attribute separator used before attribute hierarchies
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXPathBuilder.InterfaceSeparator">
            <summary>
             The interface separator used before an interface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXPathBuilder.ObjectSeparator">
            <summary>
             The object separator used between object hierarchies
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXPathBuilder.PathPartBegin">
            <summary>
             The begin of a path part, used if the object name contains a Path Separator
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXPathBuilder.PathPartBeginInName">
            <summary>
             The escaped <see cref="F:CAEX_ClassModel.CAEXPathBuilder.PathPartBegin"/>, used in an object name, if it
             contains this character
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXPathBuilder.PathPartEnd">
            <summary>
             The end of a path part, used if the object name contains a Path Separator
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXPathBuilder.PathPartEndInName">
            <summary>
             The escaped <see cref="F:CAEX_ClassModel.CAEXPathBuilder.PathPartEnd"/>, used in an object name, if it contains
             this character
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXPathBuilder.NullChar">
            <summary>
             The null character
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.CAEXPathBuilder.PathPartEndChar">
            <summary>
             The end of a path part, used if the object name contains a Path Separator
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.AliasFromReference(System.String)">
            <summary>
             gets the Alias Name from a reference. If the Reference is not a reference with
             an alias, the return value is string.Empty.
            </summary>
            <param name="ClassReference">
             The class reference.
            </param>
            <returns>
             The Alias Name without the Ending AliasSeparator or string.empty
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.CAEXPath(System.Collections.Generic.IEnumerable{CAEX_ClassModel.CAEXObject})">
            <summary>
             Builds the Reference-Path which includes all Names of CAEXObjects in the given list of elements
            </summary>
            <param name="elements">
             The CAEX-Elements.
            </param>
            <returns>
             The CAEX Path for the elements
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.CAEXPath(System.Collections.Generic.IEnumerable{System.Xml.XmlElement})">
            <summary>
            Builds the Reference-Path which includes all Names of CAEXObjects in the given list of elements.
            </summary>
            <param name="elements">The CAEX-Element xml nodes.</param>
            <returns>The CAEX Path for the elements</returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.InternalLinkReferencePath(CAEX_ClassModel.SystemUnitClassType,CAEX_ClassModel.InterfaceClassType)">
            <summary>
             Builds the reference Path for an Interface-Reference in an InternalLink
            </summary>
            <param name="systemUnitClass">
             The system unit class.
            </param>
            <param name="interfaceClass">
             The interface class.
            </param>
            <returns>
             System.String.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.IsObjectReferenceWithAlias(System.String,System.String)">
            <summary>
             Determines whether the specified AutomationML class path is
            </summary>
            <param name="ClassReference">
             The class reference.
            </param>
            <param name="AutomationMLClassPath">
             The automation ml class path.
            </param>
            <returns>
             <c>true</c> if [is object reference with alias] [the specified class
             reference]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.IsReferenceWithAlias(System.String)">
            <summary>
             Determines whether the specified reference is defined with an alias separator.
            </summary>
            <param name="ClassReference">
             The class reference string.
            </param>
            <returns>
             <c>true</c> if the reference is a reference with an alias; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.PathPart(CAEX_ClassModel.CAEXObject,System.Boolean)">
            <summary>
             Builds the Path Part for any CAEXObject, which may be part of a CAEX Path. The
             Path Part is build from the object Names and the Part - Syntax, according to
             chapter 2.8 of the CAEX guide: If defined separators are potentially a valid
             part of object names, the following syntax shall be
             used: all path elements shall be separated by square brackets “[“ name “]”.
                   This allows for using the original names and the defined separators at
                   the same time. If the conflict case arises that the described brackets
                   are part of object names, the brackets in the object name shall be
                   escaped by means of common XML escape-sequences. If a name contains any
                   Path part - Separator like '[' or ]' this character will be escaped with '\'.
            </summary>
            <param name="element">
             The CAEX element which should be part of the Path.
            </param>
            <param name="UseId">
             if true, the path part is build with the ID-Attribute
            </param>
            <returns>
             The Element Representation in the CAEX Path
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.PathPartObjectNames(System.String,System.Boolean)">
            <summary>
             Returns the Path Part object names of a caex Path. If any object name contains
             a path separator character the path part is enclosed in square brackets '[',
             ']'. The square brackets are removed from the object name in the returned
             result (default behavior). If keepPathPartBrackets is set to true, square
             brackets are not removed.
            </summary>
            <param name="path">
             The full caex path.
            </param>
            <param name="keepPathPartBrackets">
             <c>false</c> (default); if <c>true</c>, object names may be enclosed in square brackets
            </param>
            <returns>
             IEnumerable&lt;System.String&gt;.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.PathPartObjectNamesWithSeparator(System.String)">
            <summary>
             Returns the Path Part object names of a caex Path with the Separator Char at
             the Names End
            </summary>
            <param name="path">
             The full caex path.
            </param>
            <returns>
             IEnumerable&lt;System.String&gt;.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.PathPartSeparator(CAEX_ClassModel.CAEXObject)">
            <summary>
             Returns th Path part separator for an element, which should be put before that
             element in a Path
            </summary>
            <param name="element">
             The CAEX-Element.
            </param>
            <returns>
             The Path Separation character for the given element
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.PathPartSeparator(System.Xml.XmlNode)">
            <summary>
             Returns th Path part separator for an element, which should be put before that
             element in a Path
            </summary>
            <param name="element">
             The Xml-Node of the CAEX-Element.
            </param>
            <returns>
             The Path Separation character for the given element
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.InternalLinkReferencePath(System.Xml.XmlElement,System.Xml.XmlElement)">
            <summary>
             gets the reference path for an Interface-Reference in an InternalLink
            </summary>
            <param name="interfaceParent">
             The interface Parent (SystemUnitClass or InternalElement)
            </param>
            <param name="externalInterface">
             The external Interface.
            </param>
            <returns>
             System.String.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.PathPart(System.Xml.XmlElement,System.Boolean)">
            <summary>
             transforms the name of the defined element to a path Part (special characters
             are escaped).
            </summary>
            <param name="element">
             The element.
            </param>
            <param name="UseId">
             if set to <c>true</c> use the Elements ID, otherwise use its name.
            </param>
            <returns>
             System.String.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.PathPartName(System.String)">
            <summary>
             transforms a name to a path Part (special characters are escaped).
            </summary>
            <param name="name">
             The name.
            </param>
            <returns>
             System.String.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.IsSeparator(System.Char)">
            <summary>
             Determines whether the specified part character is separator.
            </summary>
            <param name="partChar">
             The part character.
            </param>
            <returns>
             <c>true</c> if the specified part character is separator; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.OriginalName(System.String)">
            <summary>
             get th original name.
            </summary>
            <param name="pathPart">
             The path part.
            </param>
            <returns>
             System.String.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.PathParts(System.Collections.Generic.IEnumerable{CAEX_ClassModel.CAEXObject})">
            <summary>
             returns all path - parts build from the element names of the specified
             elements in the collection.
            </summary>
            <param name="elements">
             The elements.
            </param>
            <returns>
             List&lt;System.String&gt;.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.CAEXPathBuilder.PathParts(System.Collections.Generic.IEnumerable{System.Xml.XmlElement})">
            <summary>
             returns all path - parts build from the element names of the specified
             elements in the collection.
            </summary>
            <param name="elements">
             The elements.
            </param>
            <returns>
             List&lt;System.String&gt;.
            </returns>
        </member>
        <member name="T:CAEX_ClassModel.RefTypeAttributeType">
            <summary>
            RefType attribute is an Attribute of a ColladaInterface
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RefTypeAttributeType.EXPLICIT">
            <summary>
            The explicit ref type
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.RefTypeAttributeType.IMPLICIT">
            <summary>
            The implicit ref type
            </summary>        
        </member>
        <member name="M:CAEX_ClassModel.RefTypeAttributeType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.RefTypeAttributeType" /> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="M:CAEX_ClassModel.RefTypeAttributeType.IsExplicit">
            <summary>
            Determines whether this is an 'explicit' RefType
            </summary>
            <returns><c>true</c> if this instance is explicit; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RefTypeAttributeType.IsImplicit">
            <summary>
            Determines whether this is an 'implicit' RefType
            </summary>
            <returns><c>true</c> if this instance is implicit; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:CAEX_ClassModel.RefURIAttributeType">
            <summary>
            Class RefURIAttributeType.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.RefURIAttributeType.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.CAEXObject" /> class.
            </summary>
            <param name="init">The initialize.</param>
        </member>
        <member name="P:CAEX_ClassModel.RefURIAttributeType.FilePath">
            <summary>
            Gets the pure file path of this external reference attribute without the identifier.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="P:CAEX_ClassModel.RefURIAttributeType.ReferencedNode">
            <summary>
            Gets the referenced node.
            </summary>
            <value>The referenced node.</value>
        </member>
        <member name="M:CAEX_ClassModel.RefURIAttributeType.IsFile">
            <summary>
            Determines whether this instance is file.
            </summary>
            <returns><c>true</c> if this instance is file; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.RefURIAttributeType.IsAbsoluteUri">
            <summary>
            Determines whether [is absolute URI].
            </summary>
            <returns><c>true</c> if [is absolute URI]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:CAEX_ClassModel.RefURIAttributeType.TheUri">
            <summary>
            Gets or sets the URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="T:CAEX_ClassModel.SchemaConformanceException">
            <summary>
            Exception for violations of the CAEX Schema. An example for a violation is the insertion of more than one
            RoleRequirement object into an InternalElement.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SchemaConformanceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SchemaConformanceException"/> class.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.SchemaConformanceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SchemaConformanceException" />-class with the defined error message.
            </summary>
            <param name="message">message containing error information.</param>
        </member>
        <member name="M:CAEX_ClassModel.SchemaConformanceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SchemaConformanceException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:CAEX_ClassModel.SchemaConformanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.SchemaConformanceException" /> class with serialized data.
            </summary>
            <param name="info">serializable object.</param>
            <param name="context">context information.</param>
        </member>
        <member name="T:CAEX_ClassModel.StringExtensions">
            <summary>
            extension methods for string types
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.StringExtensions.GuidRegEx">
            <summary>
            The unique identifier reg ex
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.StringExtensions.IsGUID(System.String)">
            <summary>
            string extension method to check if it as guid
            </summary>
            <param name="stringGuid">The stringGuid.</param>
            <returns><c>true</c> if the specified expression is unique identifier; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.StringExtensions.NormalizedGUID(System.String)">
            <summary>
            string extension method to check if it as guid
            </summary>
            <param name="stringGuid">The stringGuid.</param>
            <returns><c>true</c> if the specified expression is unique identifier; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.StringExtensions.IsInterfacePath(System.String)">
            <summary>
            Determines whether [is interface path] [the specified path].
            </summary>
            <param name="path">The path.</param>
            <returns><c>true</c> if [is interface path] [the specified path]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.StringExtensions.IsInvalidPathReference(System.String)">
            <summary>
            Determines whether the specified path is an invalid reference.
            </summary>
            <param name="path">The path.</param>
            <returns><c>true</c> if [is invalid path reference] [the specified path]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.StringExtensions.IsClassReference(System.String)">
            <summary>
            Determines whether the specified attribute is an attribute, containing a class reference.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns><c>true</c> if the specified attribute name is a class reference; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.StringExtensions.IsInterfacePathWithID(System.String,System.String)">
            <summary>
            Determines whether [is interface path with identifier] [the specified path].
            </summary>
            <param name="path">The path.</param>
            <param name="ID">The identifier.</param>
            <returns><c>true</c> if [is interface path with identifier] [the specified path]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.StringExtensions.IsInterfacePathWithInterface(System.String,System.String)">
            <summary>
            Determines whether [is interface path with interface] [the specified path].
            </summary>
            <param name="path">The path.</param>
            <param name="interfaceName">Name of the interface.</param>
            <returns><c>true</c> if [is interface path with interface] [the specified path]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:CAEX_ClassModel.AutomationML_StandardRoleClass">
            <summary>
            AutomationML_StandardRoleClasses of part 1
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.FACET_ROLECLASS">
            <summary>
            The facet role class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.AUTOMATIONMLBASE_ROLECLASS">
            <summary>
            The AutomationML base role
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.GROUP_ROLECLASS">
            <summary>
            The group
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.PORT_ROLECLASS">
            <summary>
            The port
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.PROCESS_ROLECLASS">
            <summary>
            The process
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.PROCESS_STRUCTURE_ROLECLASS">
            <summary>
            The process structure
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.PRODUCT_ROLECLASS">
            <summary>
            The product
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.PRODUCT_STRUCTURE_ROLECLASS">
            <summary>
            The product structure
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.PROPERTYSET_ROLECLASS">
            <summary>
            The property set
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.RESOURCE_ROLECLASS">
            <summary>
            The resource
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.RESOURCE_STRUCTURE_ROLECLASS">
            <summary>
            The resource structure
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.AutomationML_StandardRoleClass.STRUCTURE_ROLECLASS">
            <summary>
            The structure
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.AutomationMLObjects.FacetType">
            <summary>
            Class FacetType provides  extension methods for internal elements, which are facets
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.HasInterfaceOfParent(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.InterfaceClassType)">
            <summary>
            Determines whether the facet has this interface of the parent.
            </summary>
            <param name="facet">The facet.</param>
            <param name="externalInterface">The external interface.</param>
            <returns><c>true</c> if this interface of the parent is assigned to the facet; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.NotAssignedParentInterfaces(CAEX_ClassModel.InternalElementType)">
            <summary>
            Get the parent interfaces which are yet not assigned with the facet
            </summary>
            <param name="facet">The facet.</param>
            <returns>IEnumerable&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.HasNotAssignedParentInterfaces(CAEX_ClassModel.InternalElementType)">
            <summary>
            Tests, if there are parent interfaces which are yet not assigned with the facet
            </summary>
            <param name="facet">The facet.</param>
            <returns><c>true</c> if the parent has interfaces, which are not assigned to the facet; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.HasAssignedParentInterfaces(CAEX_ClassModel.InternalElementType)">
            <summary>
            Tests, if there are parent interfaces which are already assigned with the facet
            </summary>
            <param name="facet">The facet.</param>
            <returns><c>true</c> if the parent has interfaces, which are not assigned to the facet; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.AssignedParentInterfaces(CAEX_ClassModel.InternalElementType)">
            <summary>
            Get the original parent interfaces which are already assigned with the facet
            </summary>
            <param name="facet">The facet.</param>
            <returns>IEnumerable&lt;InterfaceClassType&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.HasAttributeOfParent(CAEX_ClassModel.InternalElementType,CAEX_ClassModel.AttributeType)">
            <summary>
            Determines whether the facet has this attribute of the parent.
            </summary>
            <param name="facet">The facet.</param>
            <param name="attribute">The attribute.</param>
            <returns><c>true</c> if this attribute of the parent is assigned to the facet; otherwise, <c>false</c>.</returns>
            <remarks>
            From structured attributes, which contain sub attributes, only the root attributes are considered. If the specified attribute
            attribute is a sub attribute of a structured attribute, <c>false</c> is returned, even if the root attribute
            is defined in the facet.
            </remarks>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.SourceAttribute(CAEX_ClassModel.AttributeType)">
            <summary>
            If the specified attribute is defined in a facet, the corresponding source attribute is returned.
            If the specified attribute is a sub attribute of an attribute, defined in a facet, the corresponding
            sub attribute of the source attribute is returned. If the specified attribute is not contained in
            a facet <c>null</c> is returned. 
            </summary>
            <param name="facetAttribute">The facet attribute.</param>
            <returns>the source attribute as AttributeType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.FacetAttributes(CAEX_ClassModel.AttributeType)">
            <summary>
            gets all facet attributes which can be related to the specified source attribute.
            if a relation is not defined, no elements are returned.
            </summary>
            <param name="sourceAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.FindAttributeWithPath(CAEX_ClassModel.IObjectWithAttributes,System.String)">
            <summary>
            Tries to find an attribute among the attributes of the specified objectWithAttributes which is uniquely
            identified with the specified attribute path. The attribute path should be a concatenation
            of names of nested attributes - don't use the full node path to locate an attribute
            with this method <see cref="P:CAEX_ClassModel.AttributeType.AttributePath"/>.
            </summary>
            <param name="objectWithAttributes">The object, containing the attribute which is searched</param>
            <param name="attributePath">The attribute path.</param>
            <returns>the identified attribute as an AttributeType or <c>null</c>, if no attribute is identified.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.Facet(CAEX_ClassModel.AttributeType)">
            <summary>
            If the attribute is an attribute of a facet, the facet internal element
            is returned; otherwise <c>null</c> is returned.
            </summary>
            <param name="facetAttribute">The facet attribute.</param>
            <returns>InternalElementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.IsFacetAttribute(CAEX_ClassModel.AttributeType)">
            <summary>
            Determines, if the attribute is an attribute of a facet.
            </summary>
            <param name="facetAttribute">The facet attribute.</param>
            <returns>InternalElementType.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.NotAssignedParentAttributes(CAEX_ClassModel.InternalElementType)">
            <summary>
            Get the parent attributes which are yet not assigned with the facet
            </summary>
            <param name="facet">The facet.</param>
            <returns>IEnumerable&lt;AttributeType&gt;.</returns>
            <remarks>
            From structured attributes, which contain sub attributes, only the root attributes are considered.
            </remarks>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.HasNotAssignedParentAttributes(CAEX_ClassModel.InternalElementType)">
            <summary>
            Tests, if there are parent attributes which are yet not assigned with the facet.      
            </summary>
            <param name="facet">The facet.</param>        /// 
            <returns><c>true</c> if the parent has attributes, which are not assigned to the facet; otherwise, <c>false</c>.</returns>
            <remarks>
            From structured attributes, which contain sub attributes, only the root attributes are considered.
            </remarks>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.HasAssignedParentAttributes(CAEX_ClassModel.InternalElementType)">
            <summary>
            Tests, if there are parent attributes which are already assigned with the facet.
            </summary>
            <param name="facet">The facet.</param>
            <returns><c>true</c> if the parent has attributes, which are assigned to the facet; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.AutomationMLObjects.FacetType.AssignedParentAttributes(CAEX_ClassModel.InternalElementType)">
            <summary>
            Get the original parent attributes which are already assigned with the facet
            </summary>
            <param name="facet">The facet.</param>
            <returns>IEnumerable&lt;AttributeType&gt;.</returns>
        </member>
        <member name="T:CAEX_ClassModel.NamespaceDoc">
            <summary>
            The CAEX_ClassModel Namespace provides Methods to read and manipulate  a CAEX-Document.
            Most of the Classes in this namespace are CAEX-Wrapper Classes. These Classes have been generated 
            with Altova XMLSpy from the CAEX-Schema Version 2.15. The Altova Code Generation generates an Altova Kernel and all
            Wrapper Classes. When a CAEX-Document is loaded, only the Document Wrapper Class <see cref="T:CAEX_ClassModel.CAEXDocument"/> is created.
            All other CAEX-Wrappers are only created, when a Property of the CAEX-Document and subordinate Elements are retrieved from
            an application. The AMLEngine has extended the Altova generated Wrapper-Classes with additional Methods and Properties
            to offer extended features, which may be helpful to edit or read an AutomationML Document.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.Validation.CAEXPathReferenceTable">
            <summary>
            Class CAEXPathReferenceTable is used for a CAEXTable containing Elements with Path-References to 
            other Elements
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXPathReferenceTable.Key(System.String)">
            <summary>
            Gives the normalized Key for a CAEXPath, as it is used to
            access elements in the table.
            </summary>
            <param name="caexPath">The CAEXPath, as it is stored in any attribute of a CAEX-Object (for example in the RefBaseSystemUnitPath-Attribute).</param>
            <returns>The normalized key</returns>
        </member>
        <member name="T:CAEX_ClassModel.Validation.CAEXTable`1">
            <summary>
            Class CAEXTable is a Dictionary of CAEX-Elements. The Type of the Element is either a plane
            XmlElement or a <see cref="T:CAEX_ClassModel.Validation.ReferenceElement" />. The ReferenceElement is used, if the
            Dictionary manages Cross-References between CAEX-Elements. The Xml-Element is used to
            register the XmlNode Information of a CAEX-Element. The CAEXTable Class doesn't store the
            CAEXWrapper Classes for a CAEX-Element, as the old HashTables in the <see cref="T:CAEX_ClassModel.CAEXFileType" />
            did, but only the plane XmlNodes. A CAEXWrapper will only be created, if a
            Node is accessed to return such a CAEXWrapper. Any Dictionary, Element-Tables and
            Cross-Reference-Tables may have multiple associated Elements to the same Key. This is due to
            the fact, that CAEX-Documents may contain errors (multiple InternalElements using the same
            ID) . The ambiguities are hold in the Table until a Repair Method is called.
            To add or remove Elements the Update Methods in the <see cref="T:CAEX_ClassModel.Validation.CAEXTables" /> Class should be
            used. If you directly manipulate the Entries in the Tables, the Validation Methods may
            create unwanted Side Effects.
            </summary>
            <typeparam name="T">Types XmlElement or <see cref="T:CAEX_ClassModel.Validation.ReferenceElement" /> are allowed.</typeparam>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.CaexElement(System.String)">
            <summary>
            Gets the first CAEX-Element, associated with the specified key
            </summary>
            <param name="Key">The key.</param>
            <returns>the CAEX-Element as a CAEXBasicObject. The CAEXBasicObject is
            created with the <see cref="M:CAEX_ClassModel.CAEXBasicObject.CreateCAEXWrapper(System.Xml.XmlNode)"/> Method. </returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.CaexElements(System.String)">
            <summary>
            Gets all CAEX-Elements, associated with the specified key
            </summary>
            <param name="Key">The key.</param>
            <returns>the CAEX-Elements as of Type <see cref="T:CAEX_ClassModel.CAEXBasicObject"/>. The CAEXBasicObject is
            created with the <see cref="M:CAEX_ClassModel.CAEXBasicObject.CreateCAEXWrapper(System.Xml.XmlNode)"/> Method. </returns>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTable`1.IsIdTable">
            <summary>
            Gets or sets a value indicating whether this instance is an identifier table
            (the key is the ID-Attribute of a caex element)
            </summary>
            <value><c>true</c> if this instance is identifier table; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.TryGetValue(System.String,CAEX_ClassModel.Validation.ElementCollection{`0}@)">
            <summary>
            Overrides base method to get the elements related to the key. 
            </summary>
            <param name="Key">The key.</param>
            <param name="elements">The elements.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.Add(System.String,CAEX_ClassModel.Validation.ElementCollection{`0})">
            <summary>
            Overrides base method to add elements with the specified key. 
            </summary>
            <param name="Key">The key.</param>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.Remove(System.String)">
            <summary>
            Overrides base method to remove elements with the specified key. 
            </summary>
            <param name="Key">The key.</param>        
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.ContainsKey(System.String)">
            <summary>
            Determines whether the dictionary contains the specified key.
            </summary>
            <param name="Key">The key.</param>
            <returns><c>true</c> if the dictionary contains the key; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.Key(System.String)">
            <summary>
            If the table is an ID - table the specified key might be any string representation representing a guid. To be
            able to access items in the table, the string-representation is first transformed to the guid and
            than the guid is converted to a normalized string representation which than is used as the key.
            </summary>
            <param name="key">The key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTable`1.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:CAEX_ClassModel.Validation.ElementCollection`1"/> with the specified key.
            </summary>
            <param name="Key">The key.</param>
            <returns>ElementCollection&lt;T&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.ChangeRegistration(`0,System.String)">
            <summary>
            Changes the registration of the Element. If the Element was registered before with
            another key than its actual key, the old key is returned. The Method will not
            change the registration of the element, if it is a <see cref="T:CAEX_ClassModel.Validation.ReferenceElement"/>
            and marked as Invalid.
            </summary>
            <param name="element">The element.</param>
            <param name="key">The new key.</param>
            <returns>The old key or string.empty if not registered before or the keys didn't changed</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.AddElement(`0,System.String)">
            <summary>
            Adds the element to the Table, using the defined Key. The Element is always added if it
            is not contained in the Value List.
            </summary>
            <param name="element">The element.</param>
            <param name="key">The key.</param>
            <returns>The number of Elements in the Value List of the defined key</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.Move(`0,System.String,System.String)">
            <summary>
            Moves the specified item from the specified oldKey-Entry to the specified newKey-Entry
            </summary>
            <param name="element">The Element to be moved.</param>
            <param name="oldKey">The old key.</param>
            <param name="newKey">The new key.</param>
            <returns>true, if the element was moved</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.RemoveElement(`0,System.String)">
            <summary>
            Removes the element from the key-Entry if it is in the ValueList
            </summary>
            <param name="element">The element.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.GetCaexElement(`0)">
            <summary>
            Creates a CAEXWrapper for the specified Element
            </summary>
            <param name="Element">The element.</param>
            <returns>CAEXBasicObject.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.MoveAll(System.String,System.String)">
            <summary>
            Moves all entries from oldKey to newKey. Deletes the Entry with oldKey
            </summary>
            <param name="oldKey">The old key.</param>
            <param name="newKey">The new key.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTable`1.RemoveElements(System.Collections.Generic.IEnumerable{`0},System.String)">
            <summary>
            Removes the elements.
            </summary>
            <param name="elementsToRemove">The elements to remove.</param>
            <param name="key">The key.</param>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTable`1.IsPathTable">
            <summary>
            Gets or sets a value indicating whether this instance is a path table.
            </summary>
            <value><c>true</c> if this instance is a path table; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CAEX_ClassModel.Validation.CAEXTables">
            <summary>
               The Class CAEXTables provides several Tables for the Management of
               CAEX-Elements and their Cross References. The provided Tables are <list
               type="bullet"><item><description><see cref="P:CAEX_ClassModel.Validation.CAEXTables.IDTable"/> contains
               InternalElements and ExternalInterface Elements and provides Access using the
               ID-Attribute.</description></item><item><description><see
               cref="P:CAEX_ClassModel.Validation.CAEXTables.PathTable"/> contains RoleClasses, InterfaceClasses and
               SystemUnitClasses and provides Access using the CAEXPath of those
               Elements.</description></item><item><description><see
               cref="P:CAEX_ClassModel.Validation.CAEXTables.IDRefTable"/> contains InternalElements (Mirrors) which
               reference other InternalElements (Masters) via the Masters
               ID-Attribute.</description></item><item><description><see
               cref="P:CAEX_ClassModel.Validation.CAEXTables.PathRefTable"/> contains Elements with References to
               RoleClasses, InterfaceClasses and SystemUnitClasses via a certain
               Path-Attribute.</description></item></list> The Tables are
               not automatically updated. There are these Update methods to Update the Tables:
               <list type="bullet"><item><description><see cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/>
               All Tables are updated with all CAEX-Elements of the associated Caex
               Document.</description></item><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdatePathReferenceAttributes(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/> The PathTable and the
               PathReferenceTable are updated, using the actual Path
               Data.</description></item><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateIDReferenceAttributes(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/> The IDTable and the
               IDReferenceTable are updated, using the actual ID Attribute.
               </description></item><item><description><see cref="M:CAEX_ClassModel.Validation.CAEXTables.AddCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/>
               All Tables are updated for the added Caex
               Object.</description></item><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.RemoveCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/> All Tables are updated for the removed
               Caex Object.</description></item></list>
            </summary>
            <remarks>
               The Tables Update Methods are executed on a background thread. The update
               calling Methods will not be blocked, but remind, all access to tables will be
               blocked, if there are any update tasks pending.
            </remarks>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.INVALIDAMLVERSIONKEY">
            <summary>
               The invalidamlversionkey
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.INVALIDSCHEMAKEY">
            <summary>
               The invalidschemakey
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.INVALIDSCHEMALOCKEY">
            <summary>
               The invalidschemalockey
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.NOAMLVERSIONKEY">
            <summary>
               The noamlversionkey
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.NOIDKEY">
            <summary>
               The nokey
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.NONAMEKEY">
            <summary>
               The nonamekey
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.NOREFKEY">
            <summary>
               The norefkey
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.NOSCHEMAKEY">
            <summary>
               The noschemakey
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.NOSCHEMALOCKEY">
            <summary>
               The noschemalockey
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.NOTFOUNDSCHEMALOCKEY">
            <summary>
               The notfoundschemalockey
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.TableUpdateWorker">
            <summary>
               The table update worker
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.AliasReferenceTable">
            <summary>
               The Table with Alias references, where the Alias is a Key to the <see cref="F:CAEX_ClassModel.Validation.CAEXTables.ExternalReferenceTable"/>
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.AttributeTableWithXmlElements">
            <summary>
               The attribute Table with XML elements
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.TableWithXmlElementsWithAttributes">
            <summary>
               The Table with XML elements, which have Attributes
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.TableWithXmlElementsWithRefURIAttributes">
            <summary>
               The Table with XML elements, which have Attributes
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.ExternalReferenceTable">
            <summary>
               The Table with ExternalReferences, where the alias is used as a key to that table
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.IDReferenceTable">
            <summary>
               The Table with IDReferenceElements, used to manage ID References from
               Mirrors and InternalLinks
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.IDTableWithXmlElements">
            <summary>
               The identifier Table with XML elements
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.MetaDataTable">
            <summary>
               The Table with PathReferenceElements, used to manage PathReferences from
               Classes, InternalElements, RoleReq. and SupportedRoles
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.PathReferenceTable">
            <summary>
               The Table with PathReferenceElements, used to manage PathReferences from
               Classes, InternalElements, RoleReq. and SupportedRoles
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.PathTableWithXmlElements">
            <summary>
               The Table with XmlElement, identifiable by their CAEXPath
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.CAEXFileNode">
            <summary>
               The document node
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.#ctor(System.Xml.XmlNode)">
            <summary>
               Initializes a new instance of the <see cref="T:CAEX_ClassModel.Validation.CAEXTables"/> class.
            </summary>
            <param name="documentNode">The document node.</param>
        </member>
        <member name="E:CAEX_ClassModel.Validation.CAEXTables.TableUpdateEvent">
            <summary>
               Occurs when any table is updated. This Event is raised from a thread,
               running in Background.
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.AttributeTable">
            <summary>
               Gets the Attribute-Table. This Table contains all Attributes. Access to the
               Property will block, if any update tasks are pending.
            </summary>
            <value>The attribute table.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.AttributesWithRefUriTable">
            <summary>
            Gets the table which contains all attributes with external references.
            Attributes are listed, if the AttributeDataType is xs:anyURI and the value
            is not null or empty. The Table uses the attribute value as key.
            </summary>
            <value>The attributes with external reference table.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.IDRefTable">
            <summary>
               Gets the ID-Reference-Table. This Table contains all registered
               InternalElement-Objects which reference another InternalElement (i.e.
               Mirror-Objects) and all InternalLinks. The Table can be updated with the
               <see cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/> for all Elements in the current document or
               with one of the single Element update methods. <list
               type="bullet"><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.AddCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/></description></item><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.RemoveCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/></description></item><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateCAEXObjectRegistration(CAEX_ClassModel.CAEXBasicObject,System.Boolean,System.Boolean)"/></description></item></list> Access to
               the Property will block, if any update tasks are pending.
            </summary>
            <value>
               The Table with CAEX-Elements, referencing others using the ID-Attribute.
            </value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.IDTable">
            <summary>
               The ID-Table. This Table contains all registered CAEX-Elements with IDs,
               that are InternalElements an InterfaceClasses. The Table can be updated with
               the <see cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/> for all Elements in the current document
               or with one of the single Element update methods. <list
               type="bullet"><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.AddCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/></description></item><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.RemoveCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/></description></item><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateCAEXObjectRegistration(CAEX_ClassModel.CAEXBasicObject,System.Boolean,System.Boolean)"/></description></item></list> Access to
               the Property will block, if any update tasks are pending.
            </summary>
            <value>The Table with CAEX-Elements, using the ID-Attribute as a Key.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.NumberOfAllObjects">
            <summary>
               The Number of all Objects which are managed in the Tables.
            </summary>
            <value>The number of all objects.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.NumberOfAttributes">
            <summary>
               Number of managed Attributes
            </summary>
            <value>The number of attributes.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.NumberOfInterfaceClasses">
            <summary>
               Number of managed InterfaceClasses
            </summary>
            <value>The number of interface classes.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.NumberOfInterfaceInstances">
            <summary>
               Number of managed Interface Instances
            </summary>
            <value>The number of interface instances.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.NumberOfInternalElements">
            <summary>
               Number of managed InternalElements
            </summary>
            <value>The number of internal elements.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.NumberOfLinks">
            <summary>
               Number of managed Internal Links
            </summary>
            <value>The number of links.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.NumberOfRoleClasses">
            <summary>
               Number of managed RoleClasses
            </summary>
            <value>The number of role classes.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.NumberOfSystemUnitClasses">
            <summary>
               Number of managed SystemUnitClasses
            </summary>
            <value>The number of system unit classes.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.PathRefTable">
            <summary>
               Gets the Path-Reference-Table. This Table contains all CAEX-Objects, which
               have a reference to another CAEX-Element via the CAEX-Path. The Table can
               be updated with the <see cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/> for all Elements in the
               current document or with one of the single Element update methods. <list
               type="bullet"><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.AddCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/></description></item><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.RemoveCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/></description></item><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateCAEXObjectRegistration(CAEX_ClassModel.CAEXBasicObject,System.Boolean,System.Boolean)"/></description></item></list> Access to
               the Property will block, if any update tasks are pending.
            </summary>
            <value>
               The Table with CAEX-Elements, referencing others using the CAEX-Path.
            </value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.PathTable">
            <summary>
               Gets the Path-Table. This Table contains all CAEX-Elements, which are
               identifiable by their CAEXPath. The Table can be updated with the <see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/> for all Elements in the current document or with
               one of the single Element update methods. <list
               type="bullet"><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.AddCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/></description></item><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.RemoveCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)"/></description></item><item><description><see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateCAEXObjectRegistration(CAEX_ClassModel.CAEXBasicObject,System.Boolean,System.Boolean)"/></description></item></list> Access to
               the Property will block, if any update tasks are pending.
            </summary>
            <value>The Table with CAEX-Elements, using the CAEX-Path as key.</value>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AddCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)">
            <summary>
               Update the Tables with an added CAEXObject. The CAEX-Object is registered
               with its Key which is the Object-ID for the <see cref="P:CAEX_ClassModel.Validation.CAEXTables.IDTable"/> and the
               <see cref="M:CAEX_ClassModel.CAEXFileType.CAEXPath(CAEX_ClassModel.CAEXBasicObject)"/> for the <see cref="P:CAEX_ClassModel.Validation.CAEXTables.PathTable"/>. If the
               asynchronous mode is selected, this Method is queued in the update
               execution queue. If the Task is completed, a <see cref="E:CAEX_ClassModel.Validation.CAEXTables.TableUpdateEvent"/>
               is raised with UpdateAction set to <see cref="F:CAEX_ClassModel.Validation.UpdateActionEnum.UpdateTaskCompleted"/>.
            </summary>
            <param name="caexObject">The caex object.</param>
            <param name="async">
               if set to <c>true</c>, the method is queued and runs asynchronously,
               otherwise synchronously
            </param>
            <returns>true, if the task is queued</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.HasPendingUpdates">
            <summary>
               Gets a value indicating whether this instance has pending updates.
            </summary>
            <value><c>true</c> if this instance has pending updates; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ElementsReferencedInInternalLinks">
            <summary>
               Gets all InternalElements and SystemUnitClasses that are referenced in all
               InternalLinks in the current Document. If an Element is referenced more
               than one time, it is returned only once. The Method will block, if any
               update tasks are pending.
            </summary>
            <returns>An IEnumerable&lt;CAEXObject&gt; of all referenced Elements</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.InternalElementMirrors(CAEX_ClassModel.InternalElementType)">
            <summary>
               Gets the InternalElement-Mirror Objects for a specified InternalElement.
               The Method will block, if any update tasks are pending.
            </summary>
            <param name="master">The master InternalElement</param>
            <returns>
               IEnumerable&lt;InternalElementType&gt; of all mirrors of the specified master-InternalElement.
            </returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ReferencesWithAlias(System.String,System.String)">
            <summary>
            returns all References which use the specified referenceAttribute and contain the specified alias in
            the referenced path value of this attribute
            </summary>
            <param name="alias">The alias.</param>
            <param name="referenceAttribute">The reference attribute.</param>
            <returns>IEnumerable&lt;ReferenceElement&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.InternalLinkReferencesOfElement(CAEX_ClassModel.SystemUnitClassType)">
            <summary>
               Get all InternalLinks that reference the specified InternalElement or
               SystemUnitClass. The Method will block, if any update tasks are pending.
            </summary>
            <param name="systemUnitClass">The InternalElement or SystemUnitClass.</param>
            <returns>IEnumerable&lt;InternalLinkType&gt;.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.MappingReferencesOfRoleReference(CAEX_ClassModel.IObjectWithRoleReference)">
            <summary>
               returns the mapping elements, which are related to the specified role
               reference. The Relation is bound to any AttributeNameMapping or
               InterfaceNameMapping, which refers to an attribute or interface of the
               referenced role.
            </summary>
            <param name="roleReference">The role reference.</param>
            <returns>IEnumerable&lt;CAEXBasicObject&gt;.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.InternalLinkReferencesOfInterface(CAEX_ClassModel.InterfaceClassType)">
            <summary>
               Get all InternalLinks that reference the specified ExternalInterface. The
               Method will block, if any update tasks are pending.
            </summary>
            <param name="externalInterface">The ExternalInterface.</param>
            <returns>IEnumerable&lt;InternalLinkType&gt;.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.IsMaster(CAEX_ClassModel.InternalElementType)">
            <summary>
               Determines whether the specified InternalElement is master. The Method will
               block, if any update tasks are pending.
            </summary>
            <param name="element">The element.</param>
            <returns>
               <c>true</c> if the specified element is master; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.RemoveCAEXObject(CAEX_ClassModel.CAEXBasicObject,System.Boolean)">
            <summary>
               Removes the specified Caex-Object from all Tables. If the asynchronous mode
               is selected, this Method is queued in the update execution queue. If the
               Task is completed, an <see cref="E:CAEX_ClassModel.Validation.CAEXTables.TableUpdateEvent"/> is raised with
               UpdateAction. set to <see cref="F:CAEX_ClassModel.Validation.UpdateActionEnum.UpdateTaskCompleted"/>.
            </summary>
            <param name="caexObject">The caex object.</param>
            <param name="async">
               if set to <c>true</c>, the method is queued and runs asynchronously,
               otherwise synchronously.
            </param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.Reset">
            <summary>
               Resets all tables. The Table will be automatically updated if any of the
               Fast Access Methods <see cref="M:CAEX_ClassModel.CAEXFileType.FindFastByID(System.String,System.Boolean)"/> or <see
               cref="M:CAEX_ClassModel.CAEXFileType.FindFastByPath(System.String,System.Boolean)"/> are called or if the <see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)"/> Method is called for an explicit Update. The
               Method may be helpful, to make a bulk of changes to the CAEXDocument
               without the need to update the tables after each change.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllReferenceAttributes(CAEX_ClassModel.CAEXBasicObject,System.Boolean,System.Boolean)">
             <summary>
                Updates all Path- and ID-References to the specified CaexElement. This
                Method changes the value of the Reference-Attribute in all CAEX-Objects
                which are registered in the <see cref="P:CAEX_ClassModel.Validation.CAEXTables.PathRefTable"/> and <see
                cref="P:CAEX_ClassModel.Validation.CAEXTables.IDRefTable"/>. For each updated reference a <see
                cref="E:CAEX_ClassModel.Validation.CAEXTables.TableUpdateEvent"/> is raised with UpdateAction set to <see
                cref="F:CAEX_ClassModel.Validation.UpdateActionEnum.IDReferenceChanged"/> for changed ID-Reference and
                <see cref="F:CAEX_ClassModel.Validation.UpdateActionEnum.PathReferenceChanged"/> for changed
                Path-References. If the asynchronous mode is selected, this Method is
                queued in the update execution queue. If the Task is completed, a <see
                cref="E:CAEX_ClassModel.Validation.CAEXTables.TableUpdateEvent"/> is raised with UpdateAction set to <see cref="F:CAEX_ClassModel.Validation.UpdateActionEnum.UpdateTaskCompleted"/>.
             </summary>
             <param name="CaexElement">
                The caex element whose CAEX-Path is analyzed and may cause an
                attribute-Update in a referencing Element.
             </param>
             <param name="deep">
                if set to <c>true</c>, the node and all its descendants are updated.
                Default value is <c>false</c>
             </param>
             <param name="async">
                if set to <c>true</c>, the method is queued and runs asynchronously,
                otherwise synchronously
             </param>
             <exception cref="T:System.ArgumentNullException"></exception>
             <example>
             As an example, the update of references should be done, if the Name of a RoleClass changes.
             At first, the Registration of the RoleClass and all it's subordinate RoleClasses has to change.
             After the Registration has been updated, the References to the RoleClass and its subordinate
             RoleClasses should be updated. In each Update-Call the Deep-Option is set.
             <code>
             {
                // use the deep Option, because the Path of a Subordinate Class depends of the Name
                // of all its parents.
                bool deep=true;
            
                roleClass.Name.Value = "newName";
                UpdateCAEXObjectRegistration(roleClass, deep);
                UpdateAllReferenceAttributes(roleClass, deep);
             }
             </code>
             </example>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdateAllTables(System.Boolean)">
            <summary>
               Update all Tables which makes access to CAEXElements with keys faster. All
               Descendants of the CAEXFile-Node, which are managed, are registered with
               their actual Keys. If a Key changes for a Caex-Object, <see
               cref="M:CAEX_ClassModel.Validation.CAEXTables.UpdateCAEXObjectRegistration(CAEX_ClassModel.CAEXBasicObject,System.Boolean,System.Boolean)"/> should be called. This Method is
               queued in the update execution queue if the async-Parameter is true. If the
               Task is completed, a <see cref="E:CAEX_ClassModel.Validation.CAEXTables.TableUpdateEvent"/> is raised with
               UpdateAction set to <see cref="F:CAEX_ClassModel.Validation.UpdateActionEnum.UpdateTaskCompleted"/>.
               <remarks>For an asynchronous execution, this Method will only be executed,
               if it is not already waiting in the Update Execution Queue or already
               processing. If it is already running or waiting, the Call is not queued and
               the method returns false. If a synchronous execution is specified, all
               pending updates are aborted and the Tables are updated
               immediately.</remarks><returns><c>true</c>, if this method call is queued
               in the update execution queue</returns>
            </summary>
            <param name="async">
               if set to <c>true</c>, the method is queued and runs asynchronously,
               otherwise synchronously
            </param>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.PathHashList">
            <summary>
               A list of all CAEX object classes in the whole document, providing the pair
               "Path" and <see cref="T:CAEX_ClassModel.CAEXObject"/>. This is the basis for the fast search
               methods <see cref="M:CAEX_ClassModel.CAEXFileType.FindFastByPath(System.String,System.Boolean)"/>. The update of this list
               is done calling the method <see
               cref="M:CAEX_ClassModel.CAEXFileType.UpdateCAEXObjectHashListsFastWithoutValidation"/> this
               is not done automatically! <remarks>This PathHashList is not used for fast
               search methods anymore. The Fast Search is based on the new <see
               cref="P:CAEX_ClassModel.Validation.CAEXTables.PathTable"/> which contains the XMLElements and not the
               CAEXWrappers around the XmlElements. It is still possible to use this
               Property, it will be rebuild from the PathTable but creates additional
               overhead to build and store the CAEXWrappers around the
               XmlElements.</remarks><value>The path hash list.</value>
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.IDHashList">
            <summary>
               A list of all CAEX object instances in the whole CAEX-Document which have an
               ID, providing the pair "ID" and "CAEXObject". This is the basis for the
               fast search methods <see cref="M:CAEX_ClassModel.CAEXFileType.FindFastByID(System.String,System.Boolean)"/>. The update of
               this list is done calling the method <see
               cref="M:CAEX_ClassModel.CAEXFileType.UpdateCAEXObjectHashListsFastWithoutValidation"/> this
               is not done automatically! <remarks>This IDHashList is not used for fast
               search methods anymore. The Fast Search is based on the new <see
               cref="P:CAEX_ClassModel.Validation.CAEXTables.IDTable"/> which contains the XMLElements and not the
               CAEXWrappers around the XmlElements. It is still possible to use this
               Property, it will be rebuild from the IDTable but creates additional
               overhead to build and store the CAEXWrappers around the XmlElements.</remarks>
            </summary>
            <value>The identifier hash list.</value>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.IDHashListOldVersion">
            <summary>
               The identifier hash list old version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.CAEXTables.PathHashListOldVersion">
            <summary>
               The path hash list old version
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdateCAEXObjectRegistration(CAEX_ClassModel.CAEXBasicObject,System.Boolean,System.Boolean)">
            <summary>
               Checks if the specified Caex-Object is already managed by any Table and
               updates the registration of the Caex-Object in all associated Tables, if
               the Caex-Object has a different Key than the registered key. In a deep
               update, the Node of the Caex-Object and all its descendants are checked. If
               the asynchronous mode is selected, this Method is queued in the update
               execution queue. If the Task is completed, a <see cref="E:CAEX_ClassModel.Validation.CAEXTables.TableUpdateEvent"/>
               is raised with UpdateAction set to <see cref="F:CAEX_ClassModel.Validation.UpdateActionEnum.UpdateTaskCompleted"/>.
            </summary>
            <param name="caexObject">The caex object.</param>
            <param name="deep">
               if set to <c>true</c>, the node and all its descendants are checked.
               Default value is <c>false</c>
            </param>
            <param name="async">
               if set to <c>true</c>, the method is queued and runs asynchronously,
               otherwise synchronously
            </param>
            <returns>
               <c>true</c>, if this method call is queued in the update execution queue
            </returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdateIDReferenceAttributes(CAEX_ClassModel.CAEXBasicObject,System.Boolean)">
            <summary>
               Updates all ID-References to the specified CaexElement. This Method changes
               the value of the Reference-Attribute in all CAEX-Objects which are
               registered in the <see cref="P:CAEX_ClassModel.Validation.CAEXTables.IDRefTable"/>. For each updated reference a
               <see cref="E:CAEX_ClassModel.Validation.CAEXTables.TableUpdateEvent"/> is raised with UpdateAction set to <see
               cref="F:CAEX_ClassModel.Validation.UpdateActionEnum.IDReferenceChanged"/>. If the asynchronous mode is
               selected, this Method is queued in the update execution queue. If the Task
               is completed, a <see cref="E:CAEX_ClassModel.Validation.CAEXTables.TableUpdateEvent"/> is raised with UpdateAction
               set to <see cref="F:CAEX_ClassModel.Validation.UpdateActionEnum.UpdateTaskCompleted"/>.
            </summary>
            <param name="caexObject">
               The caex element whose CAEX-Path is analyzed and may cause an
               attribute-Update in a referencing Element.
            </param>
            <param name="async">
               if set to <c>true</c>, the method is queued and runs asynchronously,
               otherwise synchronously
            </param>
            <returns>
               <c>true</c>, if this method call is queued in the update execution queue
            </returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdatePathReferenceAttributes(CAEX_ClassModel.CAEXBasicObject,System.Boolean)">
            <summary>
               Updates all path references to the specified CaexElement. This Method
               changes the value of the Reference-Attribute in all CAEX-Objects which are
               registered in the <see cref="P:CAEX_ClassModel.Validation.CAEXTables.PathRefTable"/>. For each updated reference a
               <see cref="E:CAEX_ClassModel.Validation.CAEXTables.TableUpdateEvent"/> is raised with UpdateAction set to <see
               cref="F:CAEX_ClassModel.Validation.UpdateActionEnum.PathReferenceChanged"/>. If the asynchronous mode is
               selected, this Method is queued in the update execution queue. If the Task
               is completed, a <see cref="E:CAEX_ClassModel.Validation.CAEXTables.TableUpdateEvent"/> is raised with UpdateAction
               set to <see cref="F:CAEX_ClassModel.Validation.UpdateActionEnum.UpdateTaskCompleted"/>.
            </summary>
            <param name="caexObject">
               The caex element whose CAEX-Path is analyzed and may cause an
               attribute-Update in a referencing Element.
            </param>
            <param name="async">
               if set to <c>true</c>, the method is queued and runs asynchronously,
               otherwise synchronously
            </param>
            <returns>
               <c>true</c>, if this method call is queued in the update execution queue
            </returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdateExternalReferenceAttributes(CAEX_ClassModel.CAEXBasicObject,System.Boolean)">
            <summary>
               Updates the external reference attributes for references, using an alias. It is checked, if
               the referenced alias is still defined in the external reference table. If not, it is checked,
               if the refrence can be updated to a valid reference, when the alias part is removed. If the
               reference without the alias can be resolved, the reference is updated.
            </summary>
            <param name="caexObject">The caex object.</param>
            <param name="async">     if set to <c>true</c> [asynchronous].</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ElementRefPath(System.Xml.XmlElement,System.Boolean@)">
            <summary>
               get the Elements Name of the Reference-Path-Attribute
            </summary>
            <param name="node">    The CAEX Elements XML Node.</param>
            <param name="required">
               if set to <c>true</c> the Attribute is a required attribute and can not be deleted.
            </param>
            <returns>System.String.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.IdAndNameErrors(System.Collections.Generic.List{CAEX_ClassModel.Validation.ValidationKey})">
            <summary>
               Filters the ID and Name related validation keys from the Validation Key List
            </summary>
            <param name="validationKeyList">The list with all Validation Keys.</param>
            <returns>IEnumerable&lt;ValidationKey&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.IsElementWithIDRefTableManagement(System.Xml.XmlElement)">
            <summary>
               Determines whether [is element with identifier table management] [the
               specified node].
            </summary>
            <param name="node">The node.</param>
            <returns>
               <c>true</c> if [is element with identifier table management] [the specified
               node]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.IsElementWithIDTableManagement(System.Xml.XmlElement)">
            <summary>
               Determines whether [is element with identifier table management] [the
               specified node].
            </summary>
            <param name="node">The node.</param>
            <returns>
               <c>true</c> if [is element with identifier table management] [the specified
               node]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.IsElementWithPathTableManagement(System.Xml.XmlElement)">
            <summary>
               Determines whether [is element with path table management] [the specified node].
            </summary>
            <param name="node">The node.</param>
            <returns>
               <c>true</c> if [is element with path table management] [the specified
               node]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.IsElementWithClassPathManagement(System.Xml.XmlElement)">
            <summary>
               Determines whether [is element with path table management] [the specified node].
            </summary>
            <param name="node">The node.</param>
            <returns>
               <c>true</c> if [is element with path table management] [the specified
               node]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.IsLibraryElement(System.Xml.XmlElement)">
            <summary>
               Determines whether [is element with path table management] [the specified node].
            </summary>
            <param name="node">The node.</param>
            <returns>
               <c>true</c> if [is element with path table management] [the specified
               node]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.IsElementWithRefPathTableManagement(System.Xml.XmlElement)">
            <summary>
               Determines whether [is element with reference path table management] [the
               specified node].
            </summary>
            <param name="node">The node.</param>
            <returns>
               <c>true</c> if [is element with reference path table management] [the
               specified node]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ReferenceErrors(System.Collections.Generic.List{CAEX_ClassModel.Validation.ValidationKey})">
            <summary>
               Filters the ValidationKey-List for all Reference-related errors.
            </summary>
            <param name="list">The ValidationKey-List.</param>
            <returns>IEnumerable&lt;ValidationKey&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.HasRegisteredReference(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
               Determines whether the specified caex-Object has registered references.
            </summary>
            <param name="caexBasicObject">The caex basic object.</param>
            <returns>
               <c>true</c> if [has registered reference] [the specified caex basic
               object]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.HasRegisteredInternalLinkReference(CAEX_ClassModel.InterfaceClassType)">
            <summary>
               Determines whether the specified externalInterface has registered
               InternalLink references.
            </summary>
            <param name="externalInterface">The externalInterface object.</param>
            <returns>
               <c>true</c> if the specified externalInterface has registered
               InternalLinkReferences; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.InternalLinkReferences(CAEX_ClassModel.InterfaceClassType)">
            <summary>
               returns a collection of registered InternalLinks for the specified external interface.
            </summary>
            <param name="externalInterface">The external interface.</param>
            <returns>IEnumerable&lt;CAEXBasicObject&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.InternalLinkPartners(CAEX_ClassModel.InterfaceClassType)">
            <summary>
               returns a collection of registered InternalLink-Partners for the specified
               external interface.
            </summary>
            <param name="externalInterface">The external interface.</param>
            <returns>IEnumerable&lt;CAEXBasicObject&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.RegisteredReferences(CAEX_ClassModel.CAEXBasicObject)">
            <summary>
               returns a collection of registered references for the specified caex-Object.
            </summary>
            <param name="caexBasicObject">The caex basic object.</param>
            <returns>IEnumerable&lt;CAEXBasicObject&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.Repair(CAEX_ClassModel.Validation.ValidationElement,CAEX_ClassModel.Validation.RepairTypeEnum)">
            <summary>
               Repairs the specified validated element. The Method will block, is any
               update tasks are pending.
            </summary>
            <param name="validatedElement">    The validated element.</param>
            <param name="selectedRepairOption">The selected repair option.</param>
            <returns><c>true</c> if Element could be repaired, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateAll">
            <summary>
               Get Validation Information for all elements, which have validation issues.
               The <see cref="T:CAEX_ClassModel.Validation.ValidationElement"/> provides detailed information about
               available Repair Options and an Information Text. The Method will block, is
               any update tasks are pending.
            </summary>
            <returns>
               Validation Information for CAEXObjects. An Element may have more than one
               ValidationElement associated to it.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateIDsAndNames">
            <summary>
               Gets all MetaData-Validation Occurrences, all ID-Validation Occurrences and
               all Path-Validation Occurrences. This Method blocks, if UpdateTasks are pending.
            </summary>
            <returns>IEnumerable&lt;ValidationElement&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateReferences">
            <summary>
               Validates all Path- and ID-References. The Method will block, is any update
               tasks are pending.
            </summary>
            <returns>IEnumerable&lt;ValidationElement&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AddInternaLinkToIdReferenceTable(System.Xml.XmlElement)">
            <summary>
               Adds the InternalLink-node to the id reference table.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AddToAliasReferenceTable(System.Xml.XmlElement)">
            <summary>
               Adds the InternalElement-node to the AliasReferenceTable if it contains an
               alias reference
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AddNode(System.Xml.XmlElement)">
            <summary>
               Adds the node to the Tables
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AutoRepairAttribute(System.Xml.XmlElement)">
            <summary>
            Automatic repair if the attribute contains missing data.
            </summary>
            <param name="node">The node.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AddToExternalReferenceTable(System.Xml.XmlElement)">
            <summary>
               Adds the node to external reference table.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AddToIDTable(System.Xml.XmlElement)">
            <summary>
               Adds the node to identifier table.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AddMapping(System.Xml.XmlElement,System.String,System.Xml.XmlElement)">
            <summary>
               Adds the Mapping Node to the Path- or ID-ReferenceTable
            </summary>
            <param name="node">         The node.</param>
            <param name="attributeName">The Name of the Reference Attribute</param>
            <param name="reference">The reference is the parent SystemUnitClass Node of the Mapping</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.RemoveMapping(System.Xml.XmlElement,System.String,System.Xml.XmlElement)">
            <summary>
               removes the Mapping Node from the Path- or ID-ReferenceTable
            </summary>
            <param name="node">         The node.</param>
            <param name="attributeName">The Name of the Reference Attribute</param>
            <param name="reference">The Reference is the Parent SystemUnitClass Node of the reference</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AddToPathReferenceTable(System.Xml.XmlElement,System.String)">
            <summary>
               Adds the node to the path reference table.
            </summary>
            <param name="node">         The node.</param>
            <param name="attributeName">The Name of the Reference Attribute</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AlternativeInterfacePath(System.String,System.Xml.XmlElement)">
            <summary>
            creates an alternative Interface Path for the xml node when the first path part is not identified as a valid guid
            </summary>
            <param name="key"></param>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AddToPathTable(System.Xml.XmlElement)">
            <summary>
               Adds the node to path table.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.AddToStatistics(System.Xml.XmlElement,System.Int32)">
            <summary>
               Adds to statistics.
            </summary>
            <param name="node">The node.</param>
            <param name="incr">The incr.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.GetAllValidationIssues">
            <summary>
               Gets all validation issues.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.GetAutomationMLVersionValidationIssues">
            <summary>
               Gets the automation ml version validation issues.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.GetCAEXSchemaValidationIssues">
            <summary>
               Gets the caex schema validation issues.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.GetExternalReferenceValidationIssues">
            <summary>
               Gets the external reference validation issues.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.GetIDReferenceValidationIssues">
            <summary>
               Gets the identifier reference validation issues.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.GetIDValidationIssues">
            <summary>
               Gets the identifier validation issues.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.GetMetaDataValidationIssues">
            <summary>
               Gets the meta data validation issues.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.GetPathReferenceValidationIssues">
            <summary>
               Gets the path reference validation issues.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.GetPathValidationIssues">
            <summary>
               Gets the path validation issues.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.GetWriterHeaderValidationIssues">
            <summary>
               Gets the writer header validation issues.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.NormalizeFilePath(System.String,System.Xml.XmlElement)">
            <summary>
               Normalizes a file path and resolves relative paths
            </summary>
            <param name="relativePath">a string with a relative path</param>
            <param name="CAEXFileNode"></param>
            <returns>a normalized file path string</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.RaiseUpdateEvent(System.Xml.XmlElement,CAEX_ClassModel.Validation.UpdateActionEnum)">
            <summary>
               Raises the update event.
            </summary>
            <param name="xmlElement">The XML element.</param>
            <param name="action">    The action type</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.RemoveFromExternalReferenceTable(System.Xml.XmlElement)">
            <summary>
               Removes from external reference table.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.RemoveFromIdReferenceTable(System.Xml.XmlElement)">
            <summary>
               Removes from identifier reference table.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.RemoveFromIDTable(System.Xml.XmlElement)">
            <summary>
               Removes from identifier table.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.RemoveFromPathReferenceTable(System.Xml.XmlElement,System.String)">
            <summary>
               Removes from path reference table.
            </summary>
            <param name="node">
               <param name="attributeName">The Name of the Reference Attribute
               (optional)</param> The node.
            </param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.RemoveFromPathTable(System.Xml.XmlElement)">
            <summary>
               Removes from path table.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.RemoveNode(System.Xml.XmlElement)">
            <summary>
               Removes the node.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.replaceLast(System.String,System.String,System.String)">
            <summary>
               Replaces the last.
            </summary>
            <param name="path">   The path.</param>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.resetStatistics">
            <summary>
               sets all statistic data to zero
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ResetTables">
            <summary>
               Resets the tables.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.updateCAEXObjectRegistration(System.Xml.XmlElement)">
            <summary>
               Updates the caex object registration.
            </summary>
            <param name="element">The element.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.updateCAEXObjectRegistrationDeep(System.Xml.XmlElement)">
            <summary>
               Updates the caex object registration deep.
            </summary>
            <param name="element">The element.</param>
            <returns><c>true</c> if updated, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdateExternalReferenceTableRegistration(System.Xml.XmlElement)">
            <summary>
               Updates the registration of the specified node in the external reference
               table. The Alias attribute is used as a registration key. If Alias
               References exist, all references are registered with the new key.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.updateIDReferenceTable(System.Xml.XmlElement)">
            <summary>
               Updates the identifier reference table.
            </summary>
            <param name="element">The caex element.</param>
            <returns><c>true</c> if updated, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdateIdReferenceTableRegistrationForInternalLink(System.Xml.XmlElement)">
            <summary>
               Updates the registration of the specified node in the ID Reference table.
               The InternalLink Path attributes are used as the registration key.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdateIDTableRegistration(System.Xml.XmlElement)">
            <summary>
               Updates the registration of the specified node in the Id-Table. The ID
               attribute is used as a registration key. If ID References exist, all
               references are registered with the new key.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdateNodeRegistration(System.Xml.XmlElement)">
            <summary>
               Updates the registration of the node and the node references
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.updatePathReferenceTable(System.Xml.XmlElement)">
            <summary>
               Updates the path reference table.
            </summary>
            <param name="element">The caexObject.</param>
            <returns><c>true</c> if updated, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdatePathReferenceTableRegistration(System.Xml.XmlElement,System.String)">
            <summary>
               Updates the path reference table registration of the specified node.
            </summary>
            <param name="node">         The node.</param>
            <param name="attributeName">Name of the attribute.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdateMappingRegistration(System.Xml.XmlElement,System.String,System.Xml.XmlElement)">
            <summary>
               Updates the path reference table registration of the specified node.
            </summary>
            <param name="node">         The node.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="reference">The reference is the parent systemUnitClass Node of the mapping</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.updatePathReferenceForAliasReferences(System.Xml.XmlElement,System.String)">
            <summary>
               Updates the path reference table registration of the specified node.
            </summary>
            <param name="node">         The node.</param>
            <param name="attributeName">Name of the attribute.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdatePathTableRegistration(System.Xml.XmlElement)">
            <summary>
               Updates the registration of the node in the path table. if references to
               this node exists, all references are also registered under the new key.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.updateReferenceTables(System.Xml.XmlElement)">
            <summary>
               Updates the reference tables.
            </summary>
            <param name="CaexElement">The caex element.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.updateReferenceTablesDeep(System.Xml.XmlElement)">
            <summary>
               Updates the reference tables.
            </summary>
            <param name="CaexElement">The caex element.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.UpdateTaskCompleted(System.Boolean,System.Exception)">
            <summary>
               raise the Updates task completed event
            </summary>
            <param name="result">if set to <c>true</c> [result].</param>
            <param name="error"> The error.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateAliasReference(System.String)">
            <summary>
               Validates the alias reference.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateAttributePath(System.Xml.XmlElement)">
            <summary>
               Validates the attribute path.
            </summary>
            <param name="elementWithAttributes">The element with attributes.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateClassPath(System.String)">
            <summary>
               Validates the class path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateExternalReference(System.String)">
            <summary>
               Validates the external reference.
            </summary>
            <param name="alias">The alias.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.externalReferences(System.String)">
            <summary>
            Gets all external reference values from the document, which use the alias
            </summary>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ExternalReferences(System.String)">
            <summary>
            Gets all external reference values from the document, which use the alias
            </summary>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateID(System.String)">
            <summary>
               Validates the identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateIDReference(System.String)">
            <summary>
               Validates the identifier reference.
            </summary>
            <param name="reference">The reference.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidatePathReference(System.String)">
            <summary>
               Validates the path reference.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="P:CAEX_ClassModel.Validation.CAEXTables.ManagedByApplication">
            <summary>
            Gets or sets a value indicating whether the Tables are managed by an Engine application.
            <example>
            This sample shows how to enabled the AmlEngine to use the DocumentTables for fast Access.
            <code>
            {
             CAEXDocument document = CAEXDocument.LoadFromFile ("myDoc.aml")
             document.Tables.UpdateAllTables();
             document.Tables.ManagedByApplication = true;
            }
            </code>
            </example>
            </summary>
            <value><c>true</c> if [managed by application]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateRoleAttributeName(CAEX_ClassModel.Validation.ReferenceElement,System.Xml.XmlElement,System.String)">
            <summary>
               Validates the name of the role attribute-Name in a mapping.
            </summary>
            <param name="mapping">       The mapping.</param>
            <param name="referencedRole">The referenced role.</param>
            <param name="attributeName"> Name of the attribute.</param>
            <returns><c>true</c> if it is valid, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateSystemUnitClassAttributeName(CAEX_ClassModel.Validation.ReferenceElement,System.Xml.XmlElement,System.String)">
            <summary>
               Validates the name of the SystemUnitClass attribute-Name in a mapping.
            </summary>
            <param name="mapping">                  The mapping.</param>
            <param name="referencedSystemUnitClass">The referenced role.</param>
            <param name="attributeName">            Name of the attribute.</param>
            <returns><c>true</c> if it is valid, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateSystemUnitClassInterfaceName(CAEX_ClassModel.Validation.ReferenceElement,System.Xml.XmlElement,System.String)">
            <summary>
               Validates the name of the SystemUnitClass attribute-Name in a mapping.
            </summary>
            <param name="mapping">                  The mapping.</param>
            <param name="referencedSystemUnitClass">The referenced role.</param>
            <param name="interfaceName">            Name of the attribute.</param>
            <returns><c>true</c> if it is valid, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.ValidateRoleInterfaceName(CAEX_ClassModel.Validation.ReferenceElement,System.Xml.XmlElement,System.String)">
            <summary>
               Validates the name of the Role-Interface name in a mapping
            </summary>
            <param name="mapping">       The mapping.</param>
            <param name="referencedRole">The referenced role.</param>
            <param name="interfaceName"> Name of the interface.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.CAEXTables.waitOnUpdate">
            <summary>
               Waits the on update.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.Validation.ElementCollection`1">
            <summary>
            Class ElementCollection is a List of XmlElements or <see cref="T:CAEX_ClassModel.Validation.ReferenceElement" />. This
            class overrides the Contains-Method.
            </summary>
            <typeparam name="T">Should be either XmlElement or <see cref="T:CAEX_ClassModel.Validation.ReferenceElement" />.</typeparam>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ElementCollection`1.items">
            <summary>
            The items
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.OriginalElement(`0)">
            <summary>
            This Method only applies, if the Collection contains <see cref="T:CAEX_ClassModel.Validation.ReferenceElement" />. It gets the original ReferenceElement in the Collection,
            comparing the <see cref="P:CAEX_ClassModel.Validation.ReferenceElement.Element" /> with the specified Element.
            </summary>
            <param name="element">The element.</param>
            <returns>ReferenceElement.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.Elements(System.Xml.XmlElement)">
            <summary>
            If the collection contains ReferenceElements, alls ReferenceElements with a reference to the XmlElement are returned.
            </summary>
            <param name="element">The element.</param>
            <returns>T.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"></see>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"></see> at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ElementCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>T.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.Key(`0)">
            <summary>
            Get the key for the specified item, which is either an XmlElement or a ReferenceElement
            </summary>
            <param name="item">The item.</param>
            <returns>Tuple&lt;XmlElement, System.String&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the array elements, starting from the specified index, to the collection.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ElementCollection`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ElementCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ElementCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gibt einen Enumerator zurück, der eine Auflistung durchläuft.
            </summary>
            <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</returns>
        </member>
        <member name="T:CAEX_ClassModel.Validation.NamespaceDoc">
            <summary>
            The CAEX_ClassModel.Validation Namespace provides Methods to organize the most CAEX-Elements of a CAEX-Document
            in Dictionaries. These Dictionaries are useful for a fast key-based Access to a CAEX-Element if the Element-Key is known,
            which could be the CAEX-ID of an InternalElement or the CAEXPath of any Class (SystemUnitClass, RoleClass, InterfaceClass).
            Another Use Case is the Validation of CAEX - and AutomationML Model Requirements and the repair of discovered Consistency
            Violations. The Element-Dictionaries in this Namespace are based on the former HashTables, provided in the <see cref="T:CAEX_ClassModel.CAEXFileType"/> Class
            but now include additional Tables for the Detection of Cross References between CAEX-Elements using ID- and Path-Attributes.
            The old Methods, defined on the Hash-Tables are still provided for downward compatibility, but should be considered as
            obsolete.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.Validation.PathReferenceElement">
            <summary>
            Class PathReferenceElement is a Tuple of an XmlElement and the Name of
            an Attributes, which is a CAEXPath. The CAEXPath may be used as a key to
            the <see cref="P:CAEX_ClassModel.Validation.CAEXTables.PathTable"/> to find the referenced Element.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.PathReferenceElement.#ctor(System.Xml.XmlElement,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.Validation.PathReferenceElement"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="refAttributeName">Name of the reference attribute.</param>
        </member>
        <member name="P:CAEX_ClassModel.Validation.PathReferenceElement.Element">
            <summary>
            Gets the element.
            </summary>
            <value>The element.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.PathReferenceElement.ReferenceAttributeName">
            <summary>
            Gets the name of the reference attribute of the <see cref="P:CAEX_ClassModel.Validation.PathReferenceElement.Element"/>
            </summary>
            <value>The name of the reference attribute.</value>
        </member>
        <member name="T:CAEX_ClassModel.Validation.QueuedBackgroundWorker">
            <summary>
            This is thread-safe
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.QueuedBackgroundWorker.RunAsync``2(System.Func{``0,``1},``0,CAEX_ClassModel.Validation.QueuedBackgroundWorker.WorkerCompletedDelegate{``1})">
            <summary>
            doWork is a method with one argument
            </summary>
            <typeparam name="T">is the type of the input parameter</typeparam>
            <typeparam name="K">is the type of the output result</typeparam>
            <param name="inputArgument">  </param>
            <param name="doWork">         </param>
            <param name="workerCompleted"></param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.QueuedBackgroundWorker.RunAsync``2(System.Func{``0,``1},``0)">
            <summary>
            Use this method if you don't need to handle when the worker is completed
            </summary>
            <param name="doWork">       </param>
            <param name="inputArgument"></param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.QueuedBackgroundWorker.CancelPendingTasks">
            <summary>
            Cancels the pending tasks.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.Validation.QueueItem">
            <summary>
            Class QueueItem.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.QueueItem.#ctor(System.ComponentModel.BackgroundWorker,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.Validation.QueueItem"/> class.
            </summary>
            <param name="backgroundWorker">The background worker.</param>
            <param name="argument">The argument.</param>
        </member>
        <member name="P:CAEX_ClassModel.Validation.QueueItem.Argument">
            <summary>
            Gets the argument.
            </summary>
            <value>The argument.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.QueueItem.BackgroundWorker">
            <summary>
            Gets the background worker.
            </summary>
            <value>The background worker.</value>
        </member>
        <member name="M:CAEX_ClassModel.Validation.QueueItem.RunWorkerAsync">
            <summary>
            Runs the worker asynchronous.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.Validation.ReferenceElement">
            <summary>
            ReferenceElement is a Tuple of an XmlElement and the Name of
            an Attributes, which is used to reference another Element. The reference
            may be used as a key to find the referenced Element.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ReferenceElement.#ctor(System.Xml.XmlElement,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.Validation.ReferenceElement"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="refAttributeName">Name of the reference attribute.</param>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ReferenceElement.Element">
            <summary>
            Gets the element.
            </summary>
            <value>The element.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ReferenceElement.ReferenceAttributeName">
            <summary>
            Gets the name of the reference attribute of the <see cref="P:CAEX_ClassModel.Validation.ReferenceElement.Element"/>
            </summary>
            <value>The name of the reference attribute.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ReferenceElement.ReferenceValue">
            <summary>
            gets the value of the Reference Attribute
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ReferenceElement.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ReferenceElement.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ReferenceElement.IsValid">
            <summary>
            Gets or sets a value indicating whether this instance is valid. As long as the Reference is marked invalid,
            the reference Attribute may not be used to update the registration of the Element. <seealso cref="M:CAEX_ClassModel.Validation.CAEXTable`1.ChangeRegistration(`0,System.String)"/>
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CAEX_ClassModel.Validation.ValidationElement">
            <summary>
            Class ValidationElement is a Tuple of an XmlElement and associated detailed
            Information about any inconsistencies, assigned with that Element.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.RepairSchemaData(CAEX_ClassModel.Validation.CAEXTable{System.Xml.XmlElement})">
            <summary>
            Repairs the schema data.
            </summary>
            <param name="table">The table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.RepairWriterHeader(CAEX_ClassModel.Validation.CAEXTable{System.Xml.XmlElement})">
            <summary>
            Repairs the writer header.
            </summary>
            <param name="table">The table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.ItemMessage1(System.Xml.XmlElement)">
            <summary>
            Specific Message Text, used to display Item Type information in a validation message
            </summary>
            <param name="node">The node.</param>
            <returns>System.String.</returns>
            <remarks>This Text should not be changed, because old version may interpret the
            provided string</remarks>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.ItemMessage2(System.Xml.XmlElement)">
            <summary>
            Specific Message Text, used to display Item Type information in a validation message
            </summary>
            <param name="node">The node.</param>
            <returns>System.String.</returns>
            <remarks>This Text should not be changed, because old version may interpret the
            provided string</remarks>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.NameIsUnique(System.Collections.Generic.IEnumerable{System.Xml.XmlElement},System.Xml.XmlElement,System.String)">
            <summary>
            Names the is unique.
            </summary>
            <param name="xmlNodeList">The XML node list.</param>
            <param name="Element">The element.</param>
            <param name="name">The name.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.#ctor(System.Xml.XmlElement,CAEX_ClassModel.Validation.ValidationKey)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.Validation.ValidationElement" /> class.
            </summary>
            <param name="element">The element.</param>
            <param name="validationKey">The validation key.</param>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ValidationElement.AvailableRepairOptions">
            <summary>
            Gets the available repair options for this Validation Element.
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ValidationElement.CAEXElement">
            <summary>
            Gets the CAEX wrapped Xml-Element.
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ValidationElement.Element">
            <summary>
            Gets the Xml-Element.
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ValidationElement.OldGeneratedValidationText">
            <summary>
            Gets the generated validation text, assigned to the <see cref="P:CAEX_ClassModel.Validation.ValidationElement.Element" />
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ValidationElement.RepairResult">
            <summary>
            Gets informative text to the repair result
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ValidationElement.ValidatedAttribute">
            <summary>
            Gets or sets the validated attribute.
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ValidationElement.ValidationDetail">
            <summary>
            Gets the validation detail.
            </summary>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ValidationElement.RepairWith">
            <summary>
            Gets or sets the Element, used to repair an invalid path reference <see cref="M:CAEX_ClassModel.Validation.ValidationElement.RepairClassReference(CAEX_ClassModel.Validation.CAEXTable{CAEX_ClassModel.Validation.ReferenceElement})" />:
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.IsOptionalAttribute">
            <summary>
            Determines whether [is optional attribute].
            </summary>
            <returns><c>true</c> if [is optional attribute]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.RemoveAlias(CAEX_ClassModel.Validation.CAEXTable{CAEX_ClassModel.Validation.ReferenceElement},CAEX_ClassModel.Validation.CAEXTable{CAEX_ClassModel.Validation.ReferenceElement})">
            <summary>
            Removes the alias.
            </summary>
            <param name="PathReferenceTable">The path reference table.</param>
            <param name="AliasReferenceTable">The alias reference table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.RemoveAttribute(CAEX_ClassModel.Validation.CAEXTable{CAEX_ClassModel.Validation.ReferenceElement})">
            <summary>
            Removes the attribute.
            </summary>
            <param name="PathReferenceTable">The path reference table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.RepairAndRemoveElement(CAEX_ClassModel.Validation.CAEXTable{CAEX_ClassModel.Validation.ReferenceElement},CAEX_ClassModel.Validation.CAEXTable{System.Xml.XmlElement})">
            <summary>
            Removes the element from the Elements Parent child collection and form the ReferenceTable. If the ElementTable contains the Reference of
            the ReferenceElement, the Element will be not removed at all. This may be, if an invalid reference has been repaired before.
            </summary>
            <param name="ReferenceTable">The path reference table.</param>
            <param name="ElementTable">The Table containing the referenced Elements</param>
            <returns><c>true</c> if repaired, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.RenameElement(CAEX_ClassModel.Validation.CAEXTable{System.Xml.XmlElement})">
            <summary>
            Renames the element.
            </summary>
            <param name="PathTable">The path table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.RepairAutomationMLVersion(CAEX_ClassModel.Validation.CAEXTable{System.Xml.XmlElement})">
            <summary>
            Repairs the automation ml version.
            </summary>
            <param name="table">The table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.RepairClassReference(CAEX_ClassModel.Validation.CAEXTable{CAEX_ClassModel.Validation.ReferenceElement})">
            <summary>
            Repairs the class reference.
            </summary>
            <param name="PathReferenceTable">The path reference table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.RepairID(CAEX_ClassModel.Validation.CAEXTable{System.Xml.XmlElement})">
            <summary>
            Repairs the identifier.
            </summary>
            <param name="IDTable">The identifier table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.RepairInternalLink(CAEX_ClassModel.Validation.CAEXTable{CAEX_ClassModel.Validation.ReferenceElement},CAEX_ClassModel.Validation.CAEXTable{CAEX_ClassModel.Validation.ReferenceElement})">
            <summary>
            Repairs the internal link.
            </summary>
            <param name="IDReferenceTable">The identifier reference table.</param>
            <param name="PathReferenceTable">The path reference table.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.GetReferenceHierarchy(System.Xml.XmlElement,System.Collections.Generic.Stack{System.Xml.XmlElement},CAEX_ClassModel.Validation.CAEXTables)">
            <summary>
            Gets the reference hierarchy.
            </summary>
            <param name="element">The element.</param>
            <param name="Hierarchy">The hierarchy.</param>
            <param name="tables">The tables.</param>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.ValidateClassInstanceReference(System.String,System.Xml.XmlElement,System.String@)">
            <summary>
            Validates the class instance reference.
            </summary>
            <param name="classReference">The class reference.</param>
            <param name="instance">The instance.</param>
            <param name="message">The message.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationElement.ValidateClassReference(System.String,System.Xml.XmlElement,System.String@)">
            <summary>
            Validates a class reference. It is checked, if the referenced class exists and if the new reference is without cycles
            </summary>
            <param name="classReference">The class reference.</param>
            <param name="element">The element to which the class reference should be assigned.</param>
            <param name="message">A message, notifiying the validation issue.</param>
            <returns><c>true</c> if the reference is valid, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:CAEX_ClassModel.Validation.UpdateActionEnum">
            <summary>
            Enum UpdateActionEnum
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.UpdateActionEnum.PathReferenceChanged">
            <summary>
            The path reference changed
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.UpdateActionEnum.IDReferenceChanged">
            <summary>
            The identifier reference changed
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.UpdateActionEnum.UpdateTaskCompleted">
            <summary>
            Occurs, when a table update task is completed.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.UpdateActionEnum.ElementRepaired">
            <summary>
            The element is repaired
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.UpdateActionEnum.AddLibrary">
            <summary>
            A library is added in an operation, this may happen, if a validation issue has a repair option
            of <see cref="F:CAEX_ClassModel.Validation.RepairTypeEnum.LoadExternalReference"/> and the repair method loads an external
            library.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.Validation.UpdateEventArgs">
            <summary>
            Class UpdateEvent Arguments
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.UpdateEventArgs.#ctor(System.Xml.XmlElement,CAEX_ClassModel.Validation.UpdateActionEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.Validation.UpdateEventArgs"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="action">The action.</param>
        </member>
        <member name="P:CAEX_ClassModel.Validation.UpdateEventArgs.DocumentChanged">
            <summary>
            Gets a value indicating whether the document has been changed in an updated Method. This occurs, when Wrong formatted ID-Attributes have been found and repaired.
            </summary>
            <value><c>true</c> if [document changed]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.UpdateEventArgs.ChangeInformation">
            <summary>
            Gets the change information to explain what has been changed in the document
            </summary>
            <value>The change information.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.UpdateEventArgs.UpdateAction">
            <summary>
            Gets or sets the update action.
            </summary>
            <value>The update action.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.UpdateEventArgs.UpdatedElement">
            <summary>
            Gets or sets the updated element.
            </summary>
            <value>The updated element.</value>
        </member>
        <member name="T:CAEX_ClassModel.Validation.ValidationKey">
            <summary>
            Class ValidationKey.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.Validation.ValidationKey.#ctor(System.String,CAEX_ClassModel.Validation.ValidationTypeEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:CAEX_ClassModel.Validation.ValidationKey"/> class.
            </summary>
            <param name="Key">The key.</param>
            <param name="ValidationType">Type of the validation.</param>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ValidationKey.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:CAEX_ClassModel.Validation.ValidationKey.ValidationType">
            <summary>
            Gets the type of the validation.
            </summary>
            <value>The type of the validation.</value>
        </member>
        <member name="T:CAEX_ClassModel.Validation.RepairTypeEnum">
            <summary>
            Enum RepairTypeEnum
            </summary>
            <seealso cref="M:CAEX_ClassModel.CAEXDocument.Repair(CAEX_ClassModel.Validation.ValidationElement,CAEX_ClassModel.Validation.RepairTypeEnum)"/>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.GenerateUniqueIDWhenEmpty">
            <summary>
            This Flag cause the generation of a unique ID for all Empty IDs
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.GenerateUniqueIDForDoubles">
            <summary>
            This Flag cause the generation of a unique ID for all Double IDs
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.GenerateNameWhenEmpty">
            <summary>
            This Flag cause the renaming of all empty Names with an automatic name generation algorithm
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.RemoveEmptyReference">
            <summary>
            This Flag cause the removal of all references where the Reference Value is empty
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.RemoveUnresolvedIDReference">
            <summary>
            This Flag cause the removal of all ID References where the ID Value has not been resolved
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.RemoveUnresolvedPathReference">
            <summary>
            This Flag cause the removal of all Path References where the Path reference Value has
            not been resolved
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.RenameClassPathForDoubles">
            <summary>
            This Flag cause the generation of a new name for an element, when it's CAEX-Path is
            double so that the Path is unique
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.CreateWriterHeader">
            <summary>
            This Flag cause the generation of a writer header
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.CreateAutomationMLVersion">
            <summary>
            This Flag cause the generation of  an AutomationML Version header
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.AddSchemaLocation">
            <summary>
            This Flag cause the correction of the Schema Location
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.SetSchemaVersion">
            <summary>
            This Flag cause the correction of the Schema Version
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.LoadExternalReference">
            <summary>
            This Flag cause the external references loaded to the current document
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.GenerateValidGUID">
            <summary>
            This Flag cause the generation of a new GUID for Guids with invalid formats
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.TryFindInterfaceInInternalLink">
            <summary>
            This Flag cause the generation of a new InterfaceReference for an InternalLink
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.RemoveAlias">
            <summary>
            This Flag cause the generation of a new reference without the alias
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.TryFindClassReference">
            <summary>
            This Flag cause the generation of a new ClassReference for a Class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.RepairTypeEnum.None">
            <summary>
            The Option None indicates, that nothing should be done
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.Validation.ValidationTypeEnum">
            <summary>
            Enum ValidationTypeEnum
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.IDValidation">
            <summary>
            The identifier validation indicates ID related issues. like a double or missing ID or a wrong formatted ID.
            The issues are repairable, if the ID is not referenced.
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.ClassPathValidation">
            <summary>
            The class path validation indicates a double ClassPath or missing Path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.AttributePathValidation">
            <summary>
            The attribute path validation indicates a double AttributePath or missing Path
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.PathReferenceValidation">
            <summary>
            The path reference validation indicates a missing or unresolved reference to a class
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.NameValidation">
            <summary>
            The name validation indicates a missing or not allowed name
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.IDReferenceValidation">
            <summary>
            The ID reference validation indicates a missing or unresolved reference to an object
            with an ID
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.AliasValidation">
            <summary>
            The alias validation
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.MergableAliasReferenceValidation">
            <summary>
            The validation result has constituted an alias in an external reference which is not merged
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.MissingAliasReferenceValidation">
            <summary>
            The validation result has constituted a missing alias in an external reference 
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.FileReferenceValidation">
            <summary>
            The file reference validation indicates a wrong FilePath in an external reference, which couldn't be resolved to an existing file
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.RoleAttributeReferenceValidation">
            <summary>
            The role attribute reference validation indicates a wrong reference to a role Attribute in a Mapping
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.RoleInterfaceReferenceValidation">
            <summary>
            The role Interface reference validation indicates a wrong reference to a role Interface in a Mapping
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.SystemUnitClassAttributeReferenceValidation">
            <summary>
            The SystemUnitClass attribute reference validation indicates a wrong reference to a SystemUnitClass Attribute in a Mapping
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.SystemUnitClassInterfaceReferenceValidation">
            <summary>
            The SystemUnitClass Interface reference validation indicates a wrong reference to a SystemUnitClass Interface in a Mapping
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.CyclicDependency">
            <summary>
            This Flag indicates a cyclic dependency between classes
            </summary>
        </member>
        <member name="F:CAEX_ClassModel.Validation.ValidationTypeEnum.AutomationMLMetaDataValidation">
            <summary>
            The automationML meta data validation indicates a couple of validation issues with metaData, as a missing schema name or writerHeader
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.XmlExtension.NamespaceDoc">
            <summary>
            The CAEX_ClassModel.XmlExtension Namespace provides Extension Methods for XmlNode and XmlElement. These
            Methodsavoid the overhead of an additional CAEXWrapper and provide direct access to some CAEX-Elements and
            Attributes from the plain Xml-Element.
            </summary>
        </member>
        <member name="T:CAEX_ClassModel.XmlExtension.XmlElementExtension">
            <summary>
               Class XmlElementExtension provides some Extension Methods to access CAEX
               Elements via an XmlElement. This Methods don't need a CAEXWrapper.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.AllElements(System.Xml.XmlElement,System.String,System.Boolean)">
            <summary>
             Get all elements with the specified node name.
            </summary>
            <param name="element">  The element.</param>
            <param name="Name">     The name.</param>
            <param name="matchSelf">if set to <c>true</c> [match self].</param>
            <returns>IEnumerable&lt;XmlElement&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.CAEXIDOfElement(System.Xml.XmlElement)">
            <summary>
            Returns the CAEX-ID of the XmlElement if such an Attribute exists
            </summary>
            <param name="element">The XmlElement.</param>
            <returns>The ID or string.empty if the ID-Attribute is missing</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.CAEXNameOfElement(System.Xml.XmlElement)">
            <summary>
            Returns the CAEX-Name of a the XmlElement if such an Attribute exists
            </summary>
            <param name="element">The XmlElement.</param>
            <returns>The Name or string.empty if the Name-Attribute is missing</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.CAEXNameOfParent(System.Xml.XmlElement)">
            <summary>
            Returns the CAEX-Name of a parent XmlElement if such an Attribute exists
            </summary>
            <param name="element">The XmlElement.</param>
            <returns>
               The Name or string.empty if the Parent or the Name-Attribute is missing
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.RoleReferenceToMapping(System.Xml.XmlElement)">
            <summary>
            Gets th RoleReference for a mapping.
            </summary>
            <param name="mappingAttribute">The mapping attribute.</param>
            <returns>XmlElement.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.SystemUnitClassReferenceToMapping(System.Xml.XmlElement)">
            <summary>
            Gets the SystemUnitClass-Reference for a mapping.
            </summary>
            <param name="mappingAttribute">The mapping attribute.</param>
            <returns>XmlElement.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.CAEXPath(System.Xml.XmlElement)">
            <summary>
               Returns the CAEX path of this object, searchable with FindFastByID or
               FindFastByPath methods. Examples: "plant/unit/tank" or GUID:interface. If
               the full hierarchical Path is required, use the method HierarchyPath
               instead which delivers the full node path.
            </summary>
            <param name="element">The element.</param>
            <returns>
               For classes, it returns the XML full Node Path. For Interface Instances, it
               returns GUID:InterfaceName.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.ChildElements(System.Xml.XmlElement,System.String)">
            <summary>
               get all child Elements of the specified element with the specified name.
            </summary>
            <param name="element">The element.</param>
            <param name="Name">   The name.</param>
            <returns>IEnumerable&lt;XmlElement&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.CloneWhenNotDerived(System.Xml.XmlElement,System.Xml.XmlElement,System.String,System.String)">
            <summary>
            The ChildElements in the specified 'baseElement', which have the defined ElementName are cloned, if there is not yet a child Element in the
            specified 'cloneElement' with that ElementName and an equal AttributeValue for the Attribute, specified with the 'AttributeName'.
            </summary>
            <param name="cloneElement">The clone element.</param>
            <param name="baseElement">The base element.</param>
            <param name="ElementName">Name of the element.</param>
            <param name="AttributeName">Name of the attribute.</param>
            <returns>IEnumerable&lt;XmlElement&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.GetAttributeValue(System.Xml.XmlElement,System.String)">
            <summary>
               Gets the attribute value.
            </summary>
            <param name="element">     The element.</param>
            <param name="AttributeName">The attribute name.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.GetReferencedCAEXClassFromClassLibrary(System.Xml.XmlElement,System.String,System.String)">
            <summary>
               Gets the referenced caex class from a class library, which is any of the
               Libraries with the defined LibraryTagName in the Document
            </summary>
            <param name="element">            The element.</param>
            <param name="referencedClassPath">The referenced class path.</param>
            <param name="LibraryTagName">     The CAEX TagName of the Library.</param>
            <returns>The referenced XmlNode, if it is found or null if not.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.InternalElementReference(System.Xml.XmlElement)">
            <summary>
               Get the InternalElementReferences if this is an InternalLink
            </summary>
            <param name="element">The element.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.InternalElementReferenceInInternalLink(System.Xml.XmlElement,System.String)">
            <summary>
               Get the InternalElementReferences if this is an InternalLink
            </summary>
            <param name="element">                 The element.</param>
            <param name="nameOfReferenceAttribute">The Attribute Name of the Reference-Attribute</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsCAEXClass(System.Xml.XmlElement)">
            <summary>
               Determines whether the Element is a CAEXClass: RoleClass, SystemUnitClass
               or InterfaceClass
            </summary>
            <param name="element">The element.</param>
            <returns>
               <c>true</c> if the specified element is a CAEXClass; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsDerived(System.Xml.XmlElement,System.Xml.XmlElement,System.String,System.String)">
            <summary>
            Determines whether the specified elementWithDerivedAttributes has a child Element, which has the same ElementName and AttributeValue for the named
            Attribute as the specified elementWithAttribute
            </summary>
            <param name="elementWithAttribute">The element With Attribute which is tested for derivations.</param>
            <param name="elementWithDerivedAttributes">The element With Derived Attributes.</param>
            <param name="ElementName">Name of the element.</param>
            <param name="AttributeName">Name of the attribute.</param>
            <returns><c>true</c> if the specified attribute element is derived; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsExternalInterface(System.Xml.XmlElement)">
            <summary>
               Determines whether [is external interface] [the specified element].
            </summary>
            <param name="element">The element.</param>
            <returns>
               <c>true</c> if [is external interface] [the specified element]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsIEMirror(System.Xml.XmlElement)">
            <summary>
               Determines whether [is ie mirror] [the specified element].
            </summary>
            <param name="element">The element.</param>
            <returns>
               <c>true</c> if [is ie mirror] [the specified element]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsInterfaceClass(System.Xml.XmlElement)">
            <summary>
               Determines whether [is interface class] [the specified element].
            </summary>
            <param name="element">The element.</param>
            <returns>
               <c>true</c> if [is interface class] [the specified element]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsInternalElement(System.Xml.XmlElement)">
            <summary>
               Determines whether [is internal element] [the specified element].
            </summary>
            <param name="element">The element.</param>
            <returns>
               <c>true</c> if [is internal element] [the specified element]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsInternalLink(System.Xml.XmlElement)">
            <summary>
               Determines whether [is internal link] [the specified element].
            </summary>
            <param name="element">The element.</param>
            <returns>
               <c>true</c> if [is internal link] [the specified element]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsRoleClass(System.Xml.XmlElement)">
            <summary>
               Determines whether [is role class] [the specified element].
            </summary>
            <param name="element">The element.</param>
            <returns>
               <c>true</c> if [is role class] [the specified element]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsRoleRequirement(System.Xml.XmlElement)">
            <summary>
               Determines whether [is role requirement] [the specified element].
            </summary>
            <param name="element">The element.</param>
            <returns>
               <c>true</c> if [is role requirement] [the specified element]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsSupportedRoleClass(System.Xml.XmlElement)">
            <summary>
               Determines whether [is supported role class] [the specified element].
            </summary>
            <param name="element">The element.</param>
            <returns>
               <c>true</c> if [is supported role class] [the specified element];
               otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsMappingElement(System.Xml.XmlElement)">
            <summary>
            Determines whether [is mapping element] [the specified element].
            </summary>
            <param name="element">The element.</param>
            <returns><c>true</c> if [is mapping element] [the specified element]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.IsSystemUnitClass(System.Xml.XmlElement)">
            <summary>
               Determines whether [is system unit class] [the specified element].
            </summary>
            <param name="element">The element.</param>
            <returns>
               <c>true</c> if [is system unit class] [the specified element]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.InternalElementMasterID(System.Xml.XmlElement)">
            <summary>
               Get the ID of the Master InternalElement if this is a Mirror.
            </summary>
            <param name="element">The element.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.RoleReference(System.Xml.XmlElement)">
            <summary>
               Get the RoleReference if this is a RoleRequirement or a SupportedRoleClass
            </summary>
            <param name="element">The element.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.SetAttributeValue(System.Xml.XmlElement,System.String,System.String)">
            <summary>
               Sets the attribute value.
            </summary>
            <param name="element">     The element.</param>
            <param name="AttributeName">The attribute name.</param>
            <param name="value">       The value.</param>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.SetOrCreateAttributeValue(System.Xml.XmlElement,System.String,System.String)">
            <summary>
               Sets the or create attribute value.
            </summary>
            <param name="element">     The element.</param>
            <param name="AttributeName">The attribute name.</param>
            <param name="value">       The value.</param>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlElementExtension.SystemUnitClassReference(System.Xml.XmlElement)">
            <summary>
               Get the RoleReference if this is a RoleRequirement or a SupportedRoleClass
            </summary>
            <param name="element">The element.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:CAEX_ClassModel.XmlExtension.XmlNodeExtensions">
            <summary>
            Class XmlNodeExtensions.
            </summary>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlNodeExtensions.CreateCAEXWrapper(System.Xml.XmlNode)">
            <summary>
            creates CAEX object out of an XML node
            </summary>
            <param name="node">XML node</param>
            <returns>CAEXBasicObject</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlNodeExtensions.getFullNodePath(System.Xml.XmlNode)">
            <summary>
            Getting the full path from document root to the specified XmlNode. As name of an XmlNode is the value of the contained attribute "name" taken. Hierarchies are separated via the path separator (slash '/').
            The name of the document root element CAEXFile is not contained in the path.
            </summary>
            <param name="xmlNode">The XmlNode to get the full path for</param>
            <returns>The full path from the document root element to the given XmlNode. The path contains of values of the "name" attribute of the XmlNodes. If no
            such attribute exists in the current node, the xml tag name is used instead.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlNodeExtensions.Elements(System.Xml.XmlNode,System.String)">
            <summary>
            Get all child Elements of the specified element with the specified node name.
            </summary>
            <param name="element">The element.</param>
            <param name="Name">   The name of the node.</param>
            <returns>IEnumerable&lt;XmlElement&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlNodeExtensions.FirstElement(System.Xml.XmlNode,System.String)">
            <summary>
            Get the first child Element of the specified element with the specified node name.
            </summary>
            <param name="element">The element.</param>
            <param name="Name">   The name of the node.</param>
            <returns>IEnumerable&lt;XmlElement&gt;.</returns>
        </member>
        <member name="M:CAEX_ClassModel.XmlExtension.XmlNodeExtensions.LastElement(System.Xml.XmlNode,System.String)">
            <summary>
            Get the last child Element of the specified element with the specified node name.
            </summary>
            <param name="element">The element.</param>
            <param name="Name">   The name of the node.</param>
            <returns>IEnumerable&lt;XmlElement&gt;.</returns>
        </member>
        <member name="T:AML.Container.AutomationMLContainer">
            <summary>
             Class AutomationMLContainer provides methods to save an AutomationML document and
             related documents which are needed for the interpretation or representation of
             AutomationML data into a single packed and zipped file. The various parts are
             assembled into this AutomationMLContainer. The Class provides methods to retrieve
             parts from a loaded container or for the assembly of parts into one single
             container. A Utility, to build a self containing container from a loaded
             CAEXDocument and the externaly referenced files, retrieved from the external
             references and ExternalInterface classes is defined in 
             <see cref="M:AML.Container.AMLContainerExtension.CreateAMLSelfContainingContainerWithAllReferencesResolved(CAEX_ClassModel.CAEXDocument,System.String,System.Func{System.String,System.String,System.IO.Stream},System.Collections.Generic.List{System.String})"/>.
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer.AutomationMLMimeType">
            <summary>
             The AutomationML MIME type
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer._disposed">
            <summary>
             The disposed flag
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer._filename">
            <summary>
             The full name of the zip file
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer._extractionDirectory">
            <summary>
             The full name of the extraction directory
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer._package">
            <summary> 
             The underlying <see cref="P:AML.Container.AutomationMLContainer.Package"/>. 
            </summary>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:AML.Container.AutomationMLContainer"/> class 
             using the specified container file to load or save the package.
            </summary>
            <param name="containerFilePath">
             The file path of the container file. The file should have the extension <c>.amlx</c>.
            </param>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.#ctor(System.String,System.IO.FileMode)">
            <summary>
             Initializes a new instance of the <see cref="T:AML.Container.AutomationMLContainer"/> class  
             using the specified container file to load or save the package.
            </summary>
            <param name="containerFilePath">
             The file path of the container file.
            </param>
            <param name="packageMode">
             The file mode for the package file.
            </param>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
             Initializes a new instance of the <see cref="T:AML.Container.AutomationMLContainer"/> class  
             using the specified container file to load or save the package.
            </summary>
            <param name="containerFilePath">
             The file path of the container file.
            </param>
            <param name="packageMode">
             The file mode for the package file.
            </param>
            <param name="packageAccess">
             The file access mode for the package file.
            </param>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
             Initializes a new instance of the <see cref="T:AML.Container.AutomationMLContainer"/> class  
             using the specified container file to load or save the package.
            </summary>
            <param name="containerFilePath">
             The file path of the container file.
            </param>
            <param name="packageMode">
             The file mode for the package file.
            </param>
            <param name="packageAccess">
             The file access mode for the package file.
            </param>
            <param name="packageShare">
             The file share access mode for the package file, which controls access of
             other file streams to the same file.
            </param>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.#ctor(System.IO.Stream)">
            <summary>
             Initializes a new instance of the <see cref="T:AML.Container.AutomationMLContainer"/> class
             using the specified stream resource.
            </summary>
            <param name="packageStream">
             The stream resource for the package.
            </param>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.#ctor(System.IO.Stream,System.IO.FileMode)">
            <summary>
             Initializes a new instance of the <see cref="T:AML.Container.AutomationMLContainer"/> class
             using the specified stream resource.
            </summary>
            <param name="packageStream">
             The stream resource for the package.
            </param>
            <param name="packageMode">
             The package mode.
            </param>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.#ctor(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
             Initializes a new instance of the <see cref="T:AML.Container.AutomationMLContainer"/> class
             using the specified stream resource.
            </summary>
            <param name="packageStream">
             The stream resource for the package.
            </param>
            <param name="packageMode">
             The package mode.
            </param>
            <param name="packageAccess">
             The package access.
            </param>
        </member>
        <member name="P:AML.Container.AutomationMLContainer.CompressionMode">
            <summary>
             Gets or sets the compression mode which is <see
             cref="F:System.IO.Packaging.CompressionOption.Normal"/> by default.
            </summary>
            <value>
             The compression mode.
            </value>
        </member>
        <member name="P:AML.Container.AutomationMLContainer.ContainerFilename">
            <summary>
             Gets the full path of the used container file.
            </summary>
            <value>
             The filename.
            </value>
        </member>
        <member name="P:AML.Container.AutomationMLContainer.ExtractionDirectory">
            <summary>
            Gets the full path of the directory, used for extraction.
            </summary>
        </member>
        <member name="P:AML.Container.AutomationMLContainer.Package">
            <summary>
             Gets the underlying package of this instance.
            </summary>
            <value>
             The package.
            </value>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddAnyContent(System.IO.Packaging.PackagePart,System.String,System.Uri,System.String)">
            <summary>
             Adds any content to the package creating relationships to the package and to
             the part, containing the root document using the relationship type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.AnyContent"/>.
            </summary>
            <param name="rootDocument">
             package part, containing the parent root document
            </param>
            <param name="fileName">
             full name of the file which should be added
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <param name="mimeType">
             optional mime type, the default mime type for the relationship is used if empty
            </param>
            <returns>
             PackagePart.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddAnyContent(System.IO.Packaging.PackagePart,System.IO.Stream,System.Uri,System.String)">
            <summary>
             Adds any content from the specified stream resource to the package creating
             relationships to the package and to the part, containing the root document
             using the relationship type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.AnyContent"/>.
            </summary>
            <param name="rootDocument">
             package part, containing the parent root document
            </param>
            <param name="inStream">
             any content stream
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <param name="mimeType">
             optional mime type, the default mime type for the relationship is used if empty
            </param>
            <returns>
             PackagePart.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddCAEXSchema(System.String,System.Uri)">
            <summary>
             Adds a CAEX schema file to the package and creates a package - part
             relationship to the package using the relationship type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.CAEXSchema"/>
            </summary>
            <param name="fileName">
             full name of the file which should be added
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddCAEXSchema(System.IO.Stream,System.Uri)">
            <summary>
             Adds a CAEX schema part retrieved from a stream resource to the package and
             creates a package - part relationship to the package using the relationship
             type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.CAEXSchema"/>.
            </summary>
            <param name="inStream">
             collada stream
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddCollada(System.IO.Packaging.PackagePart,System.String,System.Uri)">
            <summary>
             Adds a collada file to the package and creates relationships to the package
             and to the root document using the <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.Collada"/>.
            </summary>
            <param name="rootDocument">
             package part, containing the parent root document
            </param>
            <param name="fileName">
             full name of the file which should be added
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddCollada(System.IO.Packaging.PackagePart,System.IO.Stream,System.Uri)">
            <summary>
             Adds a collada part read from the specified stream resource to the package and
             creates relationships to the package and to the root document using the <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.Collada"/>.
            </summary>
            <param name="rootDocument">
             package part, containing the parent root document
            </param>
            <param name="inStream">
             collada file stream
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddColladaSchema(System.String,System.Uri)">
            <summary>
             Adds a Collada schema file to the package and creates a package - part
             relationship to the package using <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.ColladaSchema"/>.
            </summary>
            <param name="fileName">
             full name of the file which should be added
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddColladaSchema(System.IO.Stream,System.Uri)">
            <summary>
             Adds a Collada schema part from the stream resource to the package and creates
             a package - part relationship to the package using <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.ColladaSchema"/>.
            </summary>
            <param name="inStream">
             collada stream
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddLibrary(System.IO.Packaging.PackagePart,System.String,System.Uri)">
            <summary>
             Adds a library file to the package and creates relationships to the package
             and to the package containing the root document using the <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.Library"/>.
            </summary>
            <param name="rootDocument">
             package part, containing the parent root document
            </param>
            <param name="fileName">
             full name of the file which should be added
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddLibrary(System.String,System.Uri)">
            <summary>
             Adds a library file to the package and creates a package - part relationship
             of type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.Library"/>.
            </summary>
            <param name="fileName">
             full name of the file which should be added
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddLibrary(System.IO.Packaging.PackagePart,System.IO.Stream,System.Uri)">
            <summary>
             Adds a library from a stream resource to the package and creates relationships
             to the package and to the part containing the root document using the
             relationship type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.Library"/>.
            </summary>
            <param name="rootDocument">
             package part, containing the parent root document
            </param>
            <param name="inStream">
             library stream
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddPLCopenXml(System.IO.Packaging.PackagePart,System.String,System.Uri)">
            <summary>
             Adds a PLCopenXml file to the package and creates relationships to the package
             and to the package part containing the root document using the relationship
             type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.PLCopenXml"/>.
            </summary>
            <param name="rootDocument">
             package part, containing the parent root document
            </param>
            <param name="fileName">
             full name of the file which should be added
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddPLCopenXml(System.IO.Packaging.PackagePart,System.IO.Stream,System.Uri)">
            <summary>
             Adds a PLCopenXml part read from a stream resource to the package and creates
             relationships to the package and to the package part containing the root
             document using the relationship type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.PLCopenXml"/>.
            </summary>
            <param name="rootDocument">
             package part, containing the parent root document
            </param>
            <param name="inStream">
             PLCopenXml stream
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddPLCopenXmlSchema(System.String,System.Uri)">
            <summary>
             Adds a PLCopenXml schema file to the package and creates a package - part
             relationship of type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.PLCopenXmlSchema"/> to the package.
            </summary>
            <param name="fileName">
             full name of the file which should be added
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddPLCopenXmlSchema(System.IO.Stream,System.Uri)">
            <summary>
             Adds a PLCopenXml schema part from a stream resource to the package and
             creates a package - part relationship of type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.PLCopenXmlSchema"/>.
            </summary>
            <param name="inStream">
             collada file stream
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddRoot(System.String,System.Uri)">
            <summary>
             Adds a root aml file to the package and creates a package - part relationship
             of type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.Root"/>.
            </summary>
            <param name="fileName">
             full name of the file which should be added
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddRoot(System.IO.Stream,System.Uri)">
            <summary>
             Adds a root aml file from a stream resource to the package and creates a
             package - part relationship of type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.Root"/>.
            </summary>
            <param name="inStream">
             root document stream
            </param>
            <param name="partUri">
             package internal name of the part
            </param>
            <returns>
             added part
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.Close">
            <summary>
             Saves and closes the package and all part streams.
            </summary>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.Dispose">
            <summary>
             Performs application-defined tasks associated with the release, return or
             resetting of unmanaged resources.
            </summary>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.Extract(System.IO.DirectoryInfo)">
            <summary>
             Extracts all parts in the package to the specified directory
            </summary>
            <param name="dirInfo">
             directory info defining the target directory for extraction
            </param>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.Extract(System.IO.DirectoryInfo,System.IO.Packaging.PackagePart)">
            <summary>
             Extracts the specified part in the package to the specified directory.
            </summary>
            <param name="dirInfo">
             directory info defining the target directory for extraction.
            </param>
            <param name="part">
             The part to extract to the specified folder.
            </param>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.ExtractAllFiles(System.String)">
            <summary>
             Extracts all parts in the package to the specified directory
            </summary>
            <param name="path">
             Full path to the target directory.
            </param>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.Flush">
            <summary>
             Saves the contents of all parts and relationships, contained in the package.
            </summary>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.GetPart(System.Uri)">
            <summary>
             Returns the part with the given URI.
            </summary>
            <param name="partUri">
             The part URI.
            </param>
            <returns>
             PackagePart.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.GetParts">
            <summary>
             Returns an enumeration of all parts inside the package.
            </summary>
            <returns>
             IEnumerable&lt;PackagePart&gt;.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.GetPartsByRelationShipType(AML.Container.AutomationMLContainer.RelationshipType)">
            <summary>
             Returns an enumeration of all parts with the given relationship type from the package.
            </summary>
            <param name="relationShipType">
             The relationship type.
            </param>
            <returns>
             IEnumerable&lt;PackagePart&gt;.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.GetRelatedPartByUri(System.IO.Packaging.PackagePart,System.Uri,AML.Container.AutomationMLContainer.RelationshipType)">
            <summary>
             Gets the related part by URI.
            </summary>
            <param name="part">
             The part.
            </param>
            <param name="refUri">
             The reference URI.
            </param>
            <param name="relationShipType">
             The relationship type.
            </param>
            <returns>
             PackagePart.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.GetRelatedParts(System.IO.Packaging.PackagePart)">
            <summary>
             Returns an enumeration of all related parts for the given part.
            </summary>
            <param name="part">
             The part.
            </param>
            <returns>
             IEnumerable&lt;PackagePart&gt;.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.GetRelatedParts(System.IO.Packaging.PackagePart,AML.Container.AutomationMLContainer.RelationshipType)">
            <summary>
             Returns an enumeration of the related parts for the specified part and
             relationship type.
            </summary>
            <param name="part">
             The part.
            </param>
            <param name="relationShipType">
             The relationship type.
            </param>
            <returns>
             IEnumerable&lt;PackagePart&gt;.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.GetRelationShips">
            <summary>
             Returns an enumeration of all contained relationships of this instance.
            </summary>
            <returns>
             IEnumerable&lt;PackageRelationship&gt;.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.GetRelationShipsByType(AML.Container.AutomationMLContainer.RelationshipType)">
            <summary>
             Returns an enumeration of all releationships with the given relationship type.
            </summary>
            <param name="relationType">
             Type of the relation.
            </param>
            <returns>
             IEnumerable&lt;PackageRelationship&gt;.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.PartExists(System.Uri)">
            <summary>
             Determines, if a part with the specified part URI exists.
            </summary>
            <param name="partUri">
             The part URI.
            </param>
            <returns>
             <c>true</c> if the part exists, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.RelationShipExists(AML.Container.AutomationMLContainer.RelationshipType)">
            <summary>
             Determines, if the specified relationship type exists.
            </summary>
            <param name="relationShipType">
             Type of the relation.
            </param>
            <returns>
             <c>true</c> if relationship type exists, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.RootDocumentPath(System.IO.DirectoryInfo)">
            <summary>
             Gets the file path to the root aml document when the container is already
             extracted. <see cref="M:AML.Container.AutomationMLContainer.Extract(System.IO.DirectoryInfo)"/> If the container is created
             from a stream source or no root document is found, the return value is <c>string.Empty</c>.
            </summary>
            <param name="dirInfo">
             The directory which was used for extraction.
            </param>
            <returns>
             System.String.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.RootDocumentStream">
            <summary>
             Gets the stream of the root aml document. If no root document is found, the return value is <c>null</c>.
            </summary>
            <returns>
             System.String.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.Dispose(System.Boolean)">
            <summary>
             Releases unmanaged and - optionally - managed resources. All streams, used to
             save the packages, are closed.
            </summary>
            <param name="disposing">
             <c>true</c> to release both managed and unmanaged resources; <c>false</c> to
             release only unmanaged resources.
            </param>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.RelativePath(System.Uri)">
            <summary>
             To get the file path from a relative uri, the unescaped data string without
             the start '/' is needed
            </summary>
            <param name="uri">
             The URI.
            </param>
            <returns>
             System.String.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddPackagePart(System.String,System.Uri,AML.Container.AutomationMLContainer.RelationshipType,System.Boolean,System.IO.Packaging.PackagePart)">
            <summary>
             Adds the package part.
            </summary>
            <param name="fullPath">
             The full path.
            </param>
            <param name="partUri">
             The part URI.
            </param>
            <param name="relationShipType">
             Type of the relation ship.
            </param>
            <param name="createPackageRelation">
             if set to <c>true</c> [create package relation].
            </param>
            <param name="part">
             The part.
            </param>
            <returns>
             PackagePart.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.AddPackagePart(System.IO.Stream,System.Uri,AML.Container.AutomationMLContainer.RelationshipType,System.Boolean,System.IO.Packaging.PackagePart)">
            <summary>
             Adds the package part.
            </summary>
            <param name="stream">
             The stream.
            </param>
            <param name="partUri">
             The part URI.
            </param>
            <param name="relationShipType">
             Type of the relation ship.
            </param>
            <param name="createPackageRelation">
             if set to <c>true</c> [create package relation].
            </param>
            <param name="part">
             The part.
            </param>
            <returns>
             PackagePart.
            </returns>
            <exception cref="T:System.Exception">
             Part with uri + partUri + not found
            </exception>
        </member>
        <member name="T:AML.Container.AutomationMLContainer.RelationshipType">
            <summary>
             Class RelationshipType describes the distinguished package part relationship
             types. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer.RelationshipType.AnyContent">
            <summary>
             relationship type for package to part or root part to part relations to any content.
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer.RelationshipType.CAEXSchema">
            <summary>
             relationship type for package to part relation to the caex schema part.
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer.RelationshipType.Collada">
            <summary>
             relationship type for package to part or root part to part relations to a collada part.
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer.RelationshipType.ColladaSchema">
            <summary>
             relationship type for package to part relation to the collada schema.
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer.RelationshipType.Library">
            <summary>
            relationship type for package to part or root part to part relations to a part, containing an AutomationML library.
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer.RelationshipType.PLCopenXml">
            <summary>
             relationship type for package to part or root part to part relations to a PLCopenXml part.
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer.RelationshipType.PLCopenXmlSchema">
            <summary>
             relationship type for package to part relation to the PLCopenXml schema.
            </summary>
        </member>
        <member name="F:AML.Container.AutomationMLContainer.RelationshipType.Root">
            <summary>
             relationship type for the package to part relation to the part containing the root document.
            </summary>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.RelationshipType.#ctor(System.String,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:AML.Container.AutomationMLContainer.RelationshipType"/> class
             with the specified name and the specified mime type.
            </summary>
            <param name="name">
             The name.
            </param>
            <param name="mimeType">
             The mime type.
            </param>
        </member>
        <member name="P:AML.Container.AutomationMLContainer.RelationshipType.MimeType">
            <summary>
             Gets the mime type of the relationship
            </summary>
            <value>
             The mime type.
            </value>
        </member>
        <member name="P:AML.Container.AutomationMLContainer.RelationshipType.Name">
            <summary>
             Gets the name of the relationship.
            </summary>
            <value>
             The name.
            </value>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.RelationshipType.GetAnyContent(System.String)">
            <summary>
             Creates a RelationshipType for any content. If no mime type is defined,
             the relationship type <see cref="F:AML.Container.AutomationMLContainer.RelationshipType.AnyContent"/> is used.
            </summary>
            <param name="mimeType">
             The mime type.
            </param>
            <returns>
             RelationshipType.
            </returns>
        </member>
        <member name="M:AML.Container.AutomationMLContainer.RelationshipType.ToString">
            <summary>
             Returns the <see cref="P:AML.Container.AutomationMLContainer.RelationshipType.Name"/> as the string representation of this instance.
            </summary>
            <returns>
             A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:AML.Container.AMLContainerExtension">
            <summary>
            Class AMLContainerExtension provides utilities to create an AutomationML Container
            form a loaded CAEX Document.
            </summary>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.CreateAMLSelfContainingContainerWithAllReferencesResolved(CAEX_ClassModel.CAEXDocument,System.String,System.Func{System.String,System.String,System.IO.Stream},System.Collections.Generic.List{System.String})">
            <summary>
            Creates an AutomationML self containing container <see cref="T:AML.Container.AutomationMLContainer"/>  for the specified document. The document
            is used as the root part of the container. The container will contain all documents,
            which are referenced from the specified aml document. Referenced documents are retrieved
            from external references and external interfaces, which have a RefUri Attribute.
            All RefUri Attributes in the document are changed to relative uris. The relative
            uris are made relative to the specified containerPath.
            </summary>
            <param name="document">The aml document used as the root part of the aml container.</param>
            <param name="containerPath">The container path.</param>
            <param name="GetReferencedData">Callback function to get a stream for the referenced data. If
            no Function is provided, the data is tried to read from a file using the defined uri. The GetReferenceData is called with
            the Uri-Attribute Value (RefURI Attribute) of the referenced external document. If the uri contains a fragment, only
            the unfragmented part is used. The second parameter is set to the changed relative path of the reference.</param>
            <param name="missingParts">Provide an empty list to be informed about missing parts</param>
            <returns>The created AutomationMLContainer.</returns>
            <remarks>The container is already closed, when it is returned, but not disposed.</remarks>
            <exception cref="T:System.ArgumentNullException">containerPath</exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.Uris(CAEX_ClassModel.CAEXDocument)">
            <summary>
            Returns an enumeration of all Uris, which are found in the specified document. This
            is a utility method to localize referenced files, which may be part of an AutomationML
            container. The Method uses the Tables of the CAEXDocument. Please ensure, that
            the tables are updated before you use this method.
            </summary>
            <param name="document">The document.</param>
            <returns>IEnumerable&lt;Uri&gt;.</returns>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.AbsolutePathsReferencesToLocalFiles(CAEX_ClassModel.CAEXDocument)">
            <summary>
            Gets the absolute path references to local files.
            </summary>
            <param name="document">The document.</param>
            <returns>IEnumerable&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.AddPathReferencesToDictionary(System.String,System.String,System.Uri,AML.Container.AMLContainerExtension.DocumentTree,System.Collections.Generic.Dictionary{AML.Container.AMLContainerExtension.DocumentNode,System.Collections.Generic.List{System.String}})">
            <summary>
            Adds the path references to dictionary.
            </summary>
            <param name="reference">The reference.</param>
            <param name="alias">The alias.</param>
            <param name="baseUri">The base URI.</param>
            <param name="documentTree">The document tree.</param>
            <param name="ReferenceDictionary">The reference dictionary.</param>
            <exception cref="T:System.ArgumentNullException">fromPath</exception>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.DistinctLocalFiles(CAEX_ClassModel.CAEXDocument)">
            <summary>
            Gets all distinct local paths from all URIs in the specified CAEXDocument
            </summary>
            <param name="document">The document.</param>
            <returns>IEnumerable&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.GetExternalInterface(System.Xml.XmlElement)">
            <summary>
            Gets the external interface.
            </summary>
            <param name="xmlElement">The XML element.</param>
            <returns>ExternalInterfaceType.</returns>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.IsExternalReferenceWithAlias(System.String)">
            <summary>
            Determines whether [is external reference with alias] [the specified reference].
            </summary>
            <param name="reference">The reference.</param>
            <returns><c>true</c> if [is external reference with alias] [the specified reference]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.PackageRelationshipType(CAEX_ClassModel.CAEXDocument,System.Collections.Generic.List{System.String},System.String@)">
            <summary>
            Packages the type of the relationship.
            </summary>
            <param name="document">The document.</param>
            <param name="references">The references.</param>
            <param name="relativePath">The relative path.</param>
            <returns>AutomationMLContainer.RelationshipType.</returns>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.UpdateExternalReferencePath(CAEX_ClassModel.CAEXDocument,System.String,System.String)">
            <summary>
            Updates the external reference path.
            </summary>
            <param name="document">The document.</param>
            <param name="reference">The reference.</param>
            <param name="relativePath">The relative path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.UpdateRefUriAttribute(CAEX_ClassModel.CAEXDocument,System.String,System.String)">
            <summary>
            Updates the reference URI attribute.
            </summary>
            <param name="document">The document.</param>
            <param name="reference">The reference.</param>
            <param name="relativePath">The relative path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:AML.Container.AMLContainerExtension.DocumentNode">
            <summary>
            Class DocumentNode.
            </summary>
        </member>
        <member name="F:AML.Container.AMLContainerExtension.DocumentNode.Children">
            <summary>
            The children
            </summary>
        </member>
        <member name="P:AML.Container.AMLContainerExtension.DocumentNode.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:AML.Container.AMLContainerExtension.DocumentNode.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.DocumentNode.AddChildren(System.String[],System.Int32)">
            <summary>
            Adds the children.
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="nextNode">The next node.</param>
            <returns>DocumentNode.</returns>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.DocumentNode.AddNode(System.String[],System.Int32)">
            <summary>
            Adds the node.
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="nextNode">The next node.</param>
            <returns>DocumentNode.</returns>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.DocumentNode.BuildPath(AML.Container.AMLContainerExtension.DocumentNode)">
            <summary>
            Builds the path.
            </summary>
            <param name="parentNode">The parent node.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.DocumentNode.LeafNodes">
            <summary>
            Leafs the nodes.
            </summary>
            <returns>IEnumerable&lt;DocumentNode&gt;.</returns>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.DocumentNode.OldestCommonParent">
            <summary>
            return the oldest common parent.
            </summary>
            <returns>DocumentNode.</returns>
        </member>
        <member name="T:AML.Container.AMLContainerExtension.DocumentTree">
            <summary>
            Class DocumentTree.
            </summary>
        </member>
        <member name="M:AML.Container.AMLContainerExtension.DocumentTree.AddTree(System.String)">
            <summary>
            Adds the tree.
            </summary>
            <param name="path">The path.</param>
            <returns>DocumentNode.</returns>
        </member>
        <member name="T:AML.Container.NamespaceDoc">
            <summary>
            The Namespace AML.Container contains classes and methods to construct, read and write AutomationML Container as
            it is described in the BPR 3 from Okctober 2015 (Version 1.0.0).
            </summary>
        </member>
        <member name="T:AML.DocumentVersion.NamespaceDoc">
            <summary>
            The Namespace AML.DocumentVersion defines Methods and Classes to retrieve and manage document versions information
            that can be attached to any AMLDocument defining referenced documents which are related to the AMLDocument. The
            used modelling elements are described in the BPR - Document Nr. 6 'Naming Documents and Versions' from Dec. 2016. 
            </summary>
        </member>
        <member name="T:AML.DocumentVersion.DocumentVersions">
            <summary>
             Class DocumentVersions defines extension methods for the CAEXFileType to retrieve
             and manipulate document versions attached to a CAEXFile.
            </summary>
        </member>
        <member name="F:AML.DocumentVersion.DocumentVersions.DocumentElementName">
            <summary>
             The document element name
            </summary>
        </member>
        <member name="F:AML.DocumentVersion.DocumentVersions.DocumentIdentifierAttributeName">
            <summary>
             The document identifier attribute name used in the Document element
            </summary>
        </member>
        <member name="F:AML.DocumentVersion.DocumentVersions.DocumentVersionsAttributeName">
            <summary>
             The document versions attribute name
            </summary>
        </member>
        <member name="F:AML.DocumentVersion.DocumentVersions.DocumentVersionsAttributeValue">
            <summary>
             The document versions attribute value
            </summary>
        </member>
        <member name="F:AML.DocumentVersion.DocumentVersions.VersionAttributeName">
            <summary>
             The version attribute name used in the document element
            </summary>
        </member>
        <member name="M:AML.DocumentVersion.DocumentVersions.AppendDocumentVersionInformation(CAEX_ClassModel.CAEXFileType,System.String,System.String,System.String@)">
            <summary>
             This function sets the DocumentVersion information for a referenced document.
             If DocumentVersion information about the same document Identifier already
             exists, this DocumentVersion information is replaced.
            </summary>
            <param name="myCAEXFile">
             the CAEXFile of the AutomaionML document
            </param>
            <param name="documentIdentifier">
             The "DocumentIdentifier" shall define the name of the referenced document.
            </param>
            <param name="documentVersion">
             The "Version" shall define the version range of the referenced document. The
             version number shall have three numbers separated by ".".
            </param>
            <param name="error">
             Out parameter with error information if provided values are not valid or null. 
             Possibles errors are:
             <list type="bullet"> 
             <item>  
             <description>No Document Identifier defined</description> 
              </item>  <item>  
             <description>DocumentVersion to be parsed is null</description> 
              </item>  <item>  
             <description>Negative value in version string</description> 
              </item>  <item>  
             <description>Bad number of components in version string</description> 
              </item>  <item>  
             <description>Non-integer value in version string</description> 
              </item>  <item>  
             <description>Number out of range in version string</description> 
              </item>  
             </list>  
            </param>
            <returns>
             true, if information is added, false otherwise.
            </returns>
        </member>
        <member name="M:AML.DocumentVersion.DocumentVersions.AppendDocumentVersionInformation(CAEX_ClassModel.CAEXFileType,AML.DocumentVersion.DocumentVersionInformation,System.String@)">
            <summary>
             Appends the provided document version information to the AutomationML document
            </summary>
            <param name="myCAEXFile">
             The caex file of the AutomationML document.
            </param>
            <param name="versionInformation">
             The version information.
            </param>
            <param name="error">
             Out parameter containing error information if the method returns false.
             Possibles errors are:
             <list type="bullet"> 
             <item>  
             <description>No Document Identifier defined</description> 
              </item>  <item>  
             <description>DocumentVersion to be parsed is null</description> 
              </item>  <item>  
             <description>Negative value in version string</description> 
              </item>  <item>  
             <description>Bad number of components in version string</description> 
              </item>  <item>  
             <description>Non-integer value in version string</description> 
              </item>  <item>  
             <description>Number out of range in version string</description> 
              </item>  
             </list>  
            </param>
            <returns>
             true if the version information could be added, false otherwise.
            </returns>
        </member>
        <member name="M:AML.DocumentVersion.DocumentVersions.CreateDocumentVersionsHeader(CAEX_ClassModel.CAEXFileType)">
            <summary>
             Creates the additional information representing a document versions header and
             appends it to the AutomationML document.
            </summary>
            <param name="myCAEXFile">
             The caex file of the AutomationML document.
            </param>
            <returns>
             XmlNode.
            </returns>
        </member>
        <member name="M:AML.DocumentVersion.DocumentVersions.DeleteDocumentVersionInformation(CAEX_ClassModel.CAEXFileType,System.String)">
            <summary>
             This function deletes all existing DocumentVersion information from the
             AutomationML document corresponding to the documentID.
            </summary>
            <param name="myCAEXFile">
             this CAEX file of the AutomationML document
            </param>
            <param name="documentIdentifier">
             Document Identifier of the document version information, which should be deleted
            </param>
            <returns>
             true if delete succeeded, false if documentID has not been found
            </returns>
        </member>
        <member name="M:AML.DocumentVersion.DocumentVersions.DocumentVersionsHeader(CAEX_ClassModel.CAEXFileType)">
            <summary>
             Get the Additional Information XML-Node from the CAEXFile, which represents
             the Document Versions node.
            </summary>
            <param name="myCAEXFile">
             The caex file.
            </param>
            <returns>
             If the Document Version Node exists, the XmlNode is returned, otherwise <c>null</c>.
            </returns>
        </member>
        <member name="M:AML.DocumentVersion.DocumentVersions.GetAllDocumentVersionInformation(CAEX_ClassModel.CAEXFileType)">
            <summary>
             This methods returns an Enumeration of all Informations related to document
             versions defined in the "DocumentVersions" information of an AutomationML document.
            </summary>
            <param name="myCAEXFile">
             the CAEX file of the AutomationML document.
            </param>
            <returns>
             Enumerable containing all Documents in the DocumentVersion information, or
             null if no DocumentVersion information exists.
            </returns>
        </member>
        <member name="M:AML.DocumentVersion.DocumentVersions.GetDocumentVersionInformation(CAEX_ClassModel.CAEXFileType,System.String)">
            <summary>
             This function returns the DocumentVersion Information from the AutomationML
             document with the specified document Identifier, otherwise null.
            </summary>
            <param name="myCAEXFile">
             this CAEX file of the AutomationML document.
            </param>
            <param name="documentIdentifier">
             the Document Identifier
            </param>
            <returns>
             This function returns the DocumentVersion - Information corresponding to the
             document Identifier, otherwise null.
            </returns>
        </member>
        <member name="M:AML.DocumentVersion.DocumentVersions.ReplaceDocumentVersionInformation(CAEX_ClassModel.CAEXFileType,System.String,AML.DocumentVersion.DocumentVersionInformation,System.String@)">
            <summary>
             This function replaces any existing DocumentVersion information corresponding
             to the identical oldDocumentID with the provided new DocumentVersion information.
            </summary>
            <param name="myCAEXFile">
             The caex file of the AutomationML document.
            </param>
            <param name="oldDocumentID">
             Document identifier of the old DocumentVersion information
            </param>
            <param name="newDocumentVersionInformation">
             substitute for the old version of DocumentVersion information
            </param>
            <param name="error">
             error information if provided values are invalid
            </param>
            <returns>
             true if succeeded, false if DocumentVersion information coressponding to the
             oldDocumentID is not found
            </returns>
        </member>
        <member name="T:AML.DocumentVersion.DocumentVersionInformation">
            <summary>
             Class for modeling document version information as defined in the AutomationML BPR
             06 "Naming of related documents and their versions". DocumentVersions are stored
             as AdditionalInformation attached to the CAEXFile Node of the AMLDocument.
            </summary>
        </member>
        <member name="P:AML.DocumentVersion.DocumentVersionInformation.DocumentIdentifier">
            <summary>
             The document attribute "DocumentIdentifier" shall define the name of the
             referenced document.
            </summary>
            <value>
             The "DocumentIdentifier" of the document should not be changed.
            </value>
        </member>
        <member name="P:AML.DocumentVersion.DocumentVersionInformation.Version">
            <summary>
             The document attribute "Version" shall define the version range of the
             referenced document.
            </summary>
            <value>
             The version number shall have three numbers separated by ".". The three
             numbers define "main version", "minor version" and "revision".
            </value>
        </member>
        <member name="T:AML.ExternalDataReference.ExternalDataReference">
            <summary>
            This class provides methods to create and retrieve external data references as it is defined in the BPR document
            "ExternalDataReference" Version 1.0.0 from July 2016.
            </summary>
        </member>
        <member name="F:AML.ExternalDataReference.ExternalDataReference.AutomationMLBPRInterfaceClassLibName">
            <summary>
            The name of the library containing interface classes specified in BPR documents
            </summary>
        </member>
        <member name="F:AML.ExternalDataReference.ExternalDataReference.AutomationMLBPRRoleClassLibName">
            <summary>
            The name of the library containing role classes specified in BPR documents
            </summary>
        </member>
        <member name="F:AML.ExternalDataReference.ExternalDataReference.ExternalDataReferenceInterfaceClassPath">
            <summary>
            The class path for the ExternalDataReference interface class
            </summary>
        </member>
        <member name="F:AML.ExternalDataReference.ExternalDataReference.ExternalDataReferenceInterfaceClassName">
            <summary>
            The name for the ExternalDataReference interface class
            </summary>
        </member>
        <member name="F:AML.ExternalDataReference.ExternalDataReference.ExternalDataRoleClassName">
            <summary>
            The name for the ExternalData role class
            </summary>
        </member>
        <member name="F:AML.ExternalDataReference.ExternalDataReference.ExternalDataRoleClassPath">
            <summary>
            The class path for the ExternalData role class
            </summary>
        </member>
        <member name="F:AML.ExternalDataReference.ExternalDataReference.LanguageAttributeName">
            <summary>
            The language attribute name
            </summary>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.AddAutomationMLBPRInterfaceClassLib(CAEX_ClassModel.CAEXFileType)">
            <summary>
             Adds the AutomationMLBPRInterfaceClassLib containing all interface classes
             used to model external document references to the AMLDocument.
            </summary>
            <param name="myCaexFile">
             The caex file of the AMLDocument.
            </param>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.AddAutomationMLBPRRoleClassLib(CAEX_ClassModel.CAEXFileType)">
            <summary>
             Adds the AutomationMLBPRRoleClassLib containing all role classes used to model
             external document references to the AMLDocument.
            </summary>
            <param name="myCaexFile">
             The caex file of the AMLDocument.
            </param>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.AddDocumentElement(CAEX_ClassModel.SystemUnitClassType,System.String,System.String)">
            <summary>
             Adds a document element to the defined internalElement. A Document Element is semanticaly described
             with an attached role defined withe the base role class <see cref="F:AML.ExternalDataReference.ExternalDataReference.ExternalDataRoleClassPath"/> or a
             derived role class. If no roleclass path is given as a parameter the default is used. If the specified
             role class path can not be identified as a dreived role from the <see cref="F:AML.ExternalDataReference.ExternalDataReference.ExternalDataRoleClassPath"/>
             no document element is added (returns null).
            </summary>
            <param name="internalElement">
             The internalElement.
            </param>
            <param name="name">
             The name of the document element.
            </param>
            <param name="externalDataRoleClassPath">
            The Role class path to a role class, derived from the ExternalData Role Class <see cref="F:AML.ExternalDataReference.ExternalDataReference.ExternalDataRoleClassPath"/>
            </param>
            <returns>
             created InternalElementType document element or <c>null</c> if the role class is invalid
            </returns>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.GetLanguages(CAEX_ClassModel.InternalElementType)">
            <summary>
            Gets the languages, defined for the document element. If the given internal element is not
            a document element, the collection is empty.
            </summary>
            <param name="documentElement">The document element.</param>
            <returns>IEnumerable&lt;System.String&gt;.</returns>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.AddDocumentElementRole(CAEX_ClassModel.InternalElementType,System.String)">
            <summary>
             Add a role reference to a external data role class or derived roleclass defined with the
             given roleclass path as a supported role class to the internal element. If the specified
             role class path can not be identified as a dreived role from the <see cref="F:AML.ExternalDataReference.ExternalDataReference.ExternalDataRoleClassPath"/>
             no role reference is added (returns false).
            </summary>
            <param name="internalElement">
             The internalElement.
            </param>
            <param name="externalDataRoleClassPath">
            path to the role class
            </param>
            <returns>
             true, if a supported role class with the defined path is added <c>false</c> if the role class is invalid
            </returns>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.IsDocumentElement(CAEX_ClassModel.InternalElementType)">
            <summary>
            Determines whether the specified internal element is a document element.
            </summary>
            <param name="documentElement">The internal element.</param>
            <returns><c>true</c> if [is document element] [the specified internal element]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.DocumentElements(CAEX_ClassModel.SystemUnitClassType)">
            <summary>
            Gets all Internal Element Children from the specified internal element which are document elements.
            </summary>
            <param name="internalElement">The internal element.</param>
            <returns>IEnumerable&lt;InternalElementType&gt;.</returns>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.AddDocumentReference(CAEX_ClassModel.InternalElementType,System.String,System.String)">
            <summary>
            Adds a document with the specified external reference interface to the document element. If the given internal element
            is not a document element or the defined class path to the external reference interface is not derived from
            the standard base class no interface is added. 
            </summary>
            <param name="documentElement">The document element.</param>
            <param name="referenceName">The name for the referencing interface.</param>
            <param name="externalDataReferenceInterfaceClassPath">The external data reference interface class path.</param>
            <returns>InterfaceClassType.</returns>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.AddLanguage(CAEX_ClassModel.InternalElementType,System.String)">
            <summary>
            Adds a language attribute to the internal element. If this is the first language attribute, a simple attribute is added.
            If this is not the first, a language attribute list is used. A former created simple attribute is transfered to a list item. 
            </summary>
            <param name="internalElement">The internal element.</param>
            <param name="language">The language specification.</param>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.AddExternalDataReferenceLibraries(CAEX_ClassModel.CAEXFileType)">
            <summary>
             Adds the external data reference libraries used to model external document
             references. It is checked, if the needed role- and interface libraries are
             contained in the AMLDocument. If this libs are missing, they are imported from
             an embedded resource stream. The current Version of the embedded libs is
             version 1.0.0.
            </summary>
            <param name="myCaexFile">
             The caex file of the AMLDocument.
            </param>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.AutomationMLBPRInterfaceClassLib(CAEX_ClassModel.CAEXFileType)">
            <summary>
             Gets the AutomationMLBPRInterfaceClassLib containing all interface classes
             used to model external document references to the AMLDocument.
            </summary>
            <param name="myCaexFile">
             The caex file of the AMLDocument.
            </param>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.AutomationMLBPRRoleClassLib(CAEX_ClassModel.CAEXFileType)">
            <summary>
             Gets the AutomationMLBPRRoleClassLib containing all role classes used to model
             external document references to the AMLDocument.
            </summary>
            <param name="myCaexFile">
             The caex file of the AMLDocument.
            </param>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.ExternalDataReferenceInterfaceClass(CAEX_ClassModel.InterfaceClassLibType)">
            <summary>
             Gets the ExternalDataReference InterfaceClass from the automationMLBPRInterfaceClassLib.
            </summary>
            <param name="automationMLBPRInterfaceClassLib">
             The AutomationMLBPRInterfaceClassLib.
            </param>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.ExternalDataReferenceInterfaceClass(CAEX_ClassModel.CAEXFileType)">
            <summary>
             Gets the ExternalDataReference InterfaceClass from the AMLDocument.
            </summary>
            <param name="myCaexFile">
             The caex file of the AMLDocument.
            </param>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.ExternalDataRoleClass(CAEX_ClassModel.RoleClassLibType)">
            <summary>
             Gets the ExternalData RoleClass from the automationMLBPRRoleClassLib.
            </summary>
            <param name="automationMLBPRRoleClassLib">
             The AutomationMLBPRRoleClassLib.
            </param>
        </member>
        <member name="M:AML.ExternalDataReference.ExternalDataReference.ExternalDataRoleClass(CAEX_ClassModel.CAEXFileType)">
            <summary>
             Gets the ExternalData RoleClass from the AMLDocument.
            </summary>
            <param name="myCaexFile">
             The caex file of the AMLDocument.
            </param>
        </member>
        <member name="T:AML.ExternalDataReference.NamespaceDoc">
            <summary>
            The Namespace AML.ExternalDataReference contains useful methods to manage references to external documents
            within an AMLDocument. The features are described in the BPR 'ExternalDataReference' from July 2016
            </summary>
        </member>
        <member name="T:AML.ListAttribute.ListAttribute">
            <summary>
            Class ListAttribute supports List Attributes as it is defined in the 
            BPR 'Modelling of List Attributes in AutomationML' from January 2016 Version 1.0.0
            </summary>
        </member>
        <member name="F:AML.ListAttribute.ListAttribute.ListTypeName">
            <summary>
            The list type name used as a semantic ref type for unordered list attributes
            </summary>
        </member>
        <member name="F:AML.ListAttribute.ListAttribute.OrderedListTypeName">
            <summary>
            The list type name used as a semantic ref type for ordered list attributes
            </summary>
        </member>
        <member name="M:AML.ListAttribute.ListAttribute.CreateListAttribute(CAEX_ClassModel.IObjectWithAttributes,System.String,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new list attribute for an element which can have attributes.
            </summary>
            <param name="element">The element.</param>
            <param name="attributeName">Name of the new list attribute.</param>
            <param name="itemsCount">The items count for initialization of the containing attribute items.</param>
            <param name="itemType">Type of the item (unique for all items).</param>
            <param name="itemName">Name of the item (ignored if an ordered list is created). When an item attribute
            is created, the item Name gets the item index added to this name. </param>
            <param name="isOrderedList">if set to <c>true</c> the list is an ordered list.</param>
            <returns>The list AttributeType.</returns>
        </member>
        <member name="M:AML.ListAttribute.ListAttribute.MakeListAttribute(CAEX_ClassModel.AttributeType,System.Boolean)">
            <summary>
            Changes the semantic of the specified attribute and converts it to a list attribute. If the Attribute
            is already a list attribute or the attribute contains child attributes it will not be converted.
            </summary>
            <param name="attribute">The attribute.</param>
            <param name="isOrdered">If set to <c>true</c> the attribute is converted to an ordered list attribute</param>
            <returns>true, if the conversion was done, otherwise false.</returns>
        </member>
        <member name="M:AML.ListAttribute.ListAttribute.ConvertToListAttribute(CAEX_ClassModel.AttributeType,System.String)">
            <summary>
            Changes the semantic of the specified attribute and converts to a list attribute. A first item is
            added to the List attribute which is initialized with valued from the converted attribute. If the Attribute
            is already a list attribute or the attribute contains child attributes it will not be converted.
            </summary>
            <param name="attribute">The attribute.</param>
            <param name="itemName">The name of the converted item</param>
            <returns>true, if the conversion was done, otherwise false.</returns>
        </member>
        <member name="M:AML.ListAttribute.ListAttribute.AddListItem(CAEX_ClassModel.AttributeType,System.String,System.String)">
            <summary>
            Adds an additional list item attribute to the list attribute. If the List attribute already contains some items,
            the new item will have the same item type as the already existing items. If this is the first item, the
            sopecified itemType is used as the attribute data type. If no itemType is defined, the default datatype for
            the list item is "xs:string". The Item name is automatically set to the Index if the List attribute is an orderd
            list, otherwise the defined itemName is used.
            </summary>
            <param name="attribute">The List attribute.</param>
            <param name="itemType">Type of the new item (ignored for a list attribute containing items)</param>
            <param name="itemName">Name of the item (ignored for an ordered list attribute).</param>
            <returns>the added list item Attribute.</returns>
        </member>
        <member name="M:AML.ListAttribute.ListAttribute.IsListAttribute(CAEX_ClassModel.AttributeType)">
            <summary>
            Determines whether the specified attribute is a list attribute. This can be ordered or unordered.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns><c>true</c> if [is list attribute] [the specified attribute]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AML.ListAttribute.ListAttribute.IsOrderedListAttribute(CAEX_ClassModel.AttributeType)">
            <summary>
            Determines whether the specified attribute is an ordered list attribute.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns><c>true</c> if [is list attribute] [the specified attribute]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AML.ListAttribute.ListAttribute.IsUnOrderedListAttribute(CAEX_ClassModel.AttributeType)">
            <summary>
            Determines whether the specified attribute is an unordered list attribute.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns><c>true</c> if [is list attribute] [the specified attribute]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:AML.ListAttribute.ListAttribute.ListItemValues(CAEX_ClassModel.AttributeType)">
            <summary>
            Gets the values of all items in the list attribute
            </summary>
            <param name="attribute">The attribute.</param>
        </member>
        <member name="M:AML.ListAttribute.ListAttribute.ListItems(CAEX_ClassModel.AttributeType)">
            <summary>
            Gets the values of all items in the list attribute
            </summary>
            <param name="attribute">The attribute.</param>
        </member>
        <member name="T:AML.ListAttribute.NamespaceDoc">
            <summary>
            The Namespace AML.ListAttribute contains classes and methods to construct, read and write AutomationML List Attributes as
            it is described in the BPR document 'Modelling of List Attributes in AutomationML' from January 2016 Version 1.0.0.
            </summary>
        </member>
    </members>
</doc>
